{
  "version": 3,
  "sources": ["node_modules/.deno/uri-templates@0.2.0/node_modules/uri-templates/uri-templates.js", "lib/factories/rootFactory.ts", "lib/renderers/SelectionRenderer.ts", "lib/factories/selectionFactory.ts", "lib/utils/getComponent.ts", "lib/utils/unravelArgs.ts", "lib/utils/isJSONObject.ts", "lib/utils/isTypedObject.ts", "lib/utils/getValueType.ts", "lib/factories/actionFactory.ts", "node_modules/.deno/json-ptr@3.1.1/node_modules/json-ptr/src/util.ts", "node_modules/.deno/json-ptr@3.1.1/node_modules/json-ptr/src/pointer.ts", "lib/renderers/ActionStateRenderer.ts", "lib/utils/getSubmitDetails.ts", "lib/utils/mithrilRedraw.ts", "lib/consts.ts", "lib/factories/actionSelectionFactory.ts", "lib/factories/octironFactory.ts", "lib/utils/escapeJSONPointerParts.ts", "lib/utils/getIterableValue.ts", "lib/utils/isIRIObject.ts", "lib/utils/isIterable.ts", "lib/utils/isMetadataObject.ts", "lib/utils/isValueObject.ts", "lib/utils/parseSelectorString.ts", "lib/utils/resolvePropertyValueSpecification.ts", "lib/utils/getSelection.ts", "lib/renderers/ActionSelectionRenderer.ts", "lib/renderers/PerformRenderer.ts", "lib/alternatives/htmlFragments.ts", "lib/alternatives/html.ts", "lib/failures.ts", "lib/utils/flattenIRIObjects.ts", "lib/store.ts", "lib/utils/makeTypeDefs.ts", "lib/utils/classes.ts", "lib/utils/makeTypeDef.ts", "lib/handlers/jsonLDHandler.ts", "lib/components/OctironJSON.ts", "lib/components/OctironDebug.ts", "lib/components/OctironExplorer.ts", "lib/components/OctironForm.ts", "lib/components/OctironSubmitButton.ts", "lib/octiron.ts"],
  "sourcesContent": ["(function (global, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine('uri-templates', [], factory);\n\t} else if (typeof module !== 'undefined' && module.exports){\n\t\tmodule.exports = factory();\n\t} else {\n\t\tglobal.UriTemplate = factory();\n\t}\n})(this, function () {\n\tvar uriTemplateGlobalModifiers = {\n\t\t\"+\": true,\n\t\t\"#\": true,\n\t\t\".\": true,\n\t\t\"/\": true,\n\t\t\";\": true,\n\t\t\"?\": true,\n\t\t\"&\": true\n\t};\n\tvar uriTemplateSuffices = {\n\t\t\"*\": true\n\t};\n\tvar urlEscapedChars = /[:/&?#]/;\n\n\tfunction notReallyPercentEncode(string) {\n\t\treturn encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {\n\t\t\treturn \"%\" + doubleEncoded.substring(3);\n\t\t});\n\t}\n\n\tfunction isPercentEncoded(string) {\n\t\tstring = string.replace(/%../g, '');\n\t\treturn encodeURIComponent(string) === string;\n\t}\n\n\tfunction uriTemplateSubstitution(spec) {\n\t\tvar modifier = \"\";\n\t\tif (uriTemplateGlobalModifiers[spec.charAt(0)]) {\n\t\t\tmodifier = spec.charAt(0);\n\t\t\tspec = spec.substring(1);\n\t\t}\n\t\tvar separator = \"\";\n\t\tvar prefix = \"\";\n\t\tvar shouldEscape = true;\n\t\tvar showVariables = false;\n\t\tvar trimEmptyString = false;\n\t\tif (modifier == '+') {\n\t\t\tshouldEscape = false;\n\t\t} else if (modifier == \".\") {\n\t\t\tprefix = \".\";\n\t\t\tseparator = \".\";\n\t\t} else if (modifier == \"/\") {\n\t\t\tprefix = \"/\";\n\t\t\tseparator = \"/\";\n\t\t} else if (modifier == '#') {\n\t\t\tprefix = \"#\";\n\t\t\tshouldEscape = false;\n\t\t} else if (modifier == ';') {\n\t\t\tprefix = \";\";\n\t\t\tseparator = \";\",\n\t\t\tshowVariables = true;\n\t\t\ttrimEmptyString = true;\n\t\t} else if (modifier == '?') {\n\t\t\tprefix = \"?\";\n\t\t\tseparator = \"&\",\n\t\t\tshowVariables = true;\n\t\t} else if (modifier == '&') {\n\t\t\tprefix = \"&\";\n\t\t\tseparator = \"&\",\n\t\t\tshowVariables = true;\n\t\t}\n\n\t\tvar varNames = [];\n\t\tvar varList = spec.split(\",\");\n\t\tvar varSpecs = [];\n\t\tvar varSpecMap = {};\n\t\tfor (var i = 0; i < varList.length; i++) {\n\t\t\tvar varName = varList[i];\n\t\t\tvar truncate = null;\n\t\t\tif (varName.indexOf(\":\") != -1) {\n\t\t\t\tvar parts = varName.split(\":\");\n\t\t\t\tvarName = parts[0];\n\t\t\t\ttruncate = parseInt(parts[1]);\n\t\t\t}\n\t\t\tvar suffices = {};\n\t\t\twhile (uriTemplateSuffices[varName.charAt(varName.length - 1)]) {\n\t\t\t\tsuffices[varName.charAt(varName.length - 1)] = true;\n\t\t\t\tvarName = varName.substring(0, varName.length - 1);\n\t\t\t}\n\t\t\tvar varSpec = {\n\t\t\t\ttruncate: truncate,\n\t\t\t\tname: varName,\n\t\t\t\tsuffices: suffices\n\t\t\t};\n\t\t\tvarSpecs.push(varSpec);\n\t\t\tvarSpecMap[varName] = varSpec;\n\t\t\tvarNames.push(varName);\n\t\t}\n\t\tvar subFunction = function (valueFunction) {\n\t\t\tvar result = \"\";\n\t\t\tvar startIndex = 0;\n\t\t\tfor (var i = 0; i < varSpecs.length; i++) {\n\t\t\t\tvar varSpec = varSpecs[i];\n\t\t\t\tvar value = valueFunction(varSpec.name);\n\t\t\t\tif (value == null || (Array.isArray(value) && value.length == 0) || (typeof value == 'object' && Object.keys(value).length == 0)) {\n\t\t\t\t\tstartIndex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (i == startIndex) {\n\t\t\t\t\tresult += prefix;\n\t\t\t\t} else {\n\t\t\t\t\tresult += (separator || \",\");\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tif (showVariables) {\n\t\t\t\t\t\tresult += varSpec.name + \"=\";\n\t\t\t\t\t}\n\t\t\t\t\tfor (var j = 0; j < value.length; j++) {\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tresult += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n\t\t\t\t\t\t\tif (varSpec.suffices['*'] && showVariables) {\n\t\t\t\t\t\t\t\tresult += varSpec.name + \"=\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, \"%21\") : notReallyPercentEncode(value[j]);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof value == \"object\") {\n\t\t\t\t\tif (showVariables && !varSpec.suffices['*']) {\n\t\t\t\t\t\tresult += varSpec.name + \"=\";\n\t\t\t\t\t}\n\t\t\t\t\tvar first = true;\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\tresult += varSpec.suffices['*'] ? (separator || \",\") : \",\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(key).replace(/!/g, \"%21\") : notReallyPercentEncode(key);\n\t\t\t\t\t\tresult += varSpec.suffices['*'] ? '=' : \",\";\n\t\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, \"%21\") : notReallyPercentEncode(value[key]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (showVariables) {\n\t\t\t\t\t\tresult += varSpec.name;\n\t\t\t\t\t\tif (!trimEmptyString || value != \"\") {\n\t\t\t\t\t\t\tresult += \"=\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (varSpec.truncate != null) {\n\t\t\t\t\t\tvalue = value.substring(0, varSpec.truncate);\n\t\t\t\t\t}\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value).replace(/!/g, \"%21\"): notReallyPercentEncode(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tvar guessFunction = function (stringValue, resultObj, strict) {\n\t\t\tif (prefix) {\n\t\t\t\tstringValue = stringValue.substring(prefix.length);\n\t\t\t}\n\t\t\tif (varSpecs.length == 1 && varSpecs[0].suffices['*']) {\n\t\t\t\tvar varSpec = varSpecs[0];\n\t\t\t\tvar varName = varSpec.name;\n\t\t\t\tvar arrayValue = varSpec.suffices['*'] ? stringValue.split(separator || \",\") : [stringValue];\n\t\t\t\tvar hasEquals = (shouldEscape && stringValue.indexOf('=') != -1);\t// There's otherwise no way to distinguish between \"{value*}\" for arrays and objects\n\t\t\t\tfor (var i = 1; i < arrayValue.length; i++) {\n\t\t\t\t\tvar stringValue = arrayValue[i];\n\t\t\t\t\tif (hasEquals && stringValue.indexOf('=') == -1) {\n\t\t\t\t\t\t// Bit of a hack - if we're expecting \"=\" for key/value pairs, and values can't contain \"=\", then assume a value has been accidentally split\n\t\t\t\t\t\tarrayValue[i - 1] += (separator || \",\") + stringValue;\n\t\t\t\t\t\tarrayValue.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < arrayValue.length; i++) {\n\t\t\t\t\tvar stringValue = arrayValue[i];\n\t\t\t\t\tif (shouldEscape && stringValue.indexOf('=') != -1) {\n\t\t\t\t\t\thasEquals = true;\n\t\t\t\t\t}\n\t\t\t\t\tvar innerArrayValue = stringValue.split(\",\");\n\t\t\t\t\tif (innerArrayValue.length == 1) {\n\t\t\t\t\t\tarrayValue[i] = innerArrayValue[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarrayValue[i] = innerArrayValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (showVariables || hasEquals) {\n\t\t\t\t\tvar objectValue = resultObj[varName] || {};\n\t\t\t\t\tfor (var j = 0; j < arrayValue.length; j++) {\n\t\t\t\t\t\tvar innerValue = stringValue;\n\t\t\t\t\t\tif (showVariables && !innerValue) {\n\t\t\t\t\t\t\t// The empty string isn't a valid variable, so if our value is zero-length we have nothing\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof arrayValue[j] == \"string\") {\n\t\t\t\t\t\t\tvar stringValue = arrayValue[j];\n\t\t\t\t\t\t\tvar innerVarName = stringValue.split(\"=\", 1)[0];\n\t\t\t\t\t\t\tvar stringValue = stringValue.substring(innerVarName.length + 1);\n\t\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(stringValue)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstringValue = decodeURIComponent(stringValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnerValue = stringValue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar stringValue = arrayValue[j][0];\n\t\t\t\t\t\t\tvar innerVarName = stringValue.split(\"=\", 1)[0];\n\t\t\t\t\t\t\tvar stringValue = stringValue.substring(innerVarName.length + 1);\n\t\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(stringValue)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstringValue = decodeURIComponent(stringValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tarrayValue[j][0] = stringValue;\n\t\t\t\t\t\t\tinnerValue = arrayValue[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerVarName)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnerVarName = decodeURIComponent(innerVarName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (objectValue[innerVarName] !== undefined) {\n\t\t\t\t\t\t\tif (Array.isArray(objectValue[innerVarName])) {\n\t\t\t\t\t\t\t\tobjectValue[innerVarName].push(innerValue);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tobjectValue[innerVarName] = [objectValue[innerVarName], innerValue];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobjectValue[innerVarName] = innerValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(objectValue).length == 1 && objectValue[varName] !== undefined) {\n\t\t\t\t\t\tresultObj[varName] = objectValue[varName];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresultObj[varName] = objectValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\tfor (var j = 0; j < arrayValue.length; j++) {\n\t\t\t\t\t\t\tvar innerArrayValue = arrayValue[j];\n\t\t\t\t\t\t\tif (Array.isArray(innerArrayValue)) {\n\t\t\t\t\t\t\t\tfor (var k = 0; k < innerArrayValue.length; k++) {\n\t\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerArrayValue[k])) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tinnerArrayValue[k] = decodeURIComponent(innerArrayValue[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerArrayValue)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tarrayValue[j] = decodeURIComponent(innerArrayValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resultObj[varName] !== undefined) {\n\t\t\t\t\t\tif (Array.isArray(resultObj[varName])) {\n\t\t\t\t\t\t\tresultObj[varName] = resultObj[varName].concat(arrayValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = [resultObj[varName]].concat(arrayValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (arrayValue.length == 1 && !varSpec.suffices['*']) {\n\t\t\t\t\t\t\tresultObj[varName] = arrayValue[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = arrayValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar arrayValue = (varSpecs.length == 1) ? [stringValue] : stringValue.split(separator || \",\");\n\t\t\t\tvar specIndexMap = {};\n\t\t\t\tfor (var i = 0; i < arrayValue.length; i++) {\n\t\t\t\t\t// Try from beginning\n\t\t\t\t\tvar firstStarred = 0;\n\t\t\t\t\tfor (; firstStarred < varSpecs.length - 1 && firstStarred < i; firstStarred++) {\n\t\t\t\t\t\tif (varSpecs[firstStarred].suffices['*']) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (firstStarred == i) {\n\t\t\t\t\t\t// The first [i] of them have no \"*\" suffix\n\t\t\t\t\t\tspecIndexMap[i] = i;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Try from the end\n\t\t\t\t\t\tfor (var lastStarred = varSpecs.length - 1; lastStarred > 0 && (varSpecs.length - lastStarred) < (arrayValue.length - i); lastStarred--) {\n\t\t\t\t\t\t\tif (varSpecs[lastStarred].suffices['*']) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((varSpecs.length - lastStarred) == (arrayValue.length - i)) {\n\t\t\t\t\t\t\t// The last [length - i] of them have no \"*\" suffix\n\t\t\t\t\t\t\tspecIndexMap[i] = lastStarred;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Just give up and use the first one\n\t\t\t\t\tspecIndexMap[i] = firstStarred;\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < arrayValue.length; i++) {\n\t\t\t\t\tvar stringValue = arrayValue[i];\n\t\t\t\t\tif (!stringValue && showVariables) {\n\t\t\t\t\t\t// The empty string isn't a valid variable, so if our value is zero-length we have nothing\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar innerArrayValue = stringValue.split(\",\");\n\t\t\t\t\tvar hasEquals = false;\n\n\t\t\t\t\tif (showVariables) {\n\t\t\t\t\t\tvar stringValue = innerArrayValue[0]; // using innerArrayValue\n\t\t\t\t\t\tvar varName = stringValue.split(\"=\", 1)[0];\n\t\t\t\t\t\tvar stringValue = stringValue.substring(varName.length + 1);\n\t\t\t\t\t\tinnerArrayValue[0] = stringValue;\n\t\t\t\t\t\tvar varSpec = varSpecMap[varName] || varSpecs[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar varSpec = varSpecs[specIndexMap[i]];\n\t\t\t\t\t\tvar varName = varSpec.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var j = 0; j < innerArrayValue.length; j++) {\n\t\t\t\t\t\tif (shouldEscape) {\n\t\t\t\t\t\t\tif (strict && !isPercentEncoded(innerArrayValue[j])) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinnerArrayValue[j] = decodeURIComponent(innerArrayValue[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((showVariables || varSpec.suffices['*'])&& resultObj[varName] !== undefined) {\n\t\t\t\t\t\tif (Array.isArray(resultObj[varName])) {\n\t\t\t\t\t\t\tresultObj[varName] = resultObj[varName].concat(innerArrayValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = [resultObj[varName]].concat(innerArrayValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (innerArrayValue.length == 1 && !varSpec.suffices['*']) {\n\t\t\t\t\t\t\tresultObj[varName] = innerArrayValue[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultObj[varName] = innerArrayValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 1;\n\t\t};\n\t\treturn {\n\t\t\tvarNames: varNames,\n\t\t\tprefix: prefix,\n\t\t\tsubstitution: subFunction,\n\t\t\tunSubstitution: guessFunction\n\t\t};\n\t}\n\n\tfunction UriTemplate(template) {\n\t\tif (!(this instanceof UriTemplate)) {\n\t\t\treturn new UriTemplate(template);\n\t\t}\n\t\tvar parts = template.split(\"{\");\n\t\tvar textParts = [parts.shift()];\n\t\tvar prefixes = [];\n\t\tvar substitutions = [];\n\t\tvar unSubstitutions = [];\n\t\tvar varNames = [];\n\t\twhile (parts.length > 0) {\n\t\t\tvar part = parts.shift();\n\t\t\tvar spec = part.split(\"}\")[0];\n\t\t\tvar remainder = part.substring(spec.length + 1);\n\t\t\tvar funcs = uriTemplateSubstitution(spec);\n\t\t\tsubstitutions.push(funcs.substitution);\n\t\t\tunSubstitutions.push(funcs.unSubstitution);\n\t\t\tprefixes.push(funcs.prefix);\n\t\t\ttextParts.push(remainder);\n\t\t\tvarNames = varNames.concat(funcs.varNames);\n\t\t}\n\t\tthis.fill = function (valueFunction) {\n\t\t\tif (valueFunction && typeof valueFunction !== 'function') {\n\t\t\t\tvar value = valueFunction;\n\t\t\t\tvalueFunction = function (varName) {\n\t\t\t\t\treturn value[varName];\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar result = textParts[0];\n\t\t\tfor (var i = 0; i < substitutions.length; i++) {\n\t\t\t\tvar substitution = substitutions[i];\n\t\t\t\tresult += substitution(valueFunction);\n\t\t\t\tresult += textParts[i + 1];\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tthis.fromUri = function (substituted, options) {\n\t\t\toptions = options || {};\n\t\t\tvar result = {};\n\t\t\tfor (var i = 0; i < textParts.length; i++) {\n\t\t\t\tvar part = textParts[i];\n\t\t\t\tif (substituted.substring(0, part.length) !== part) {\n\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t}\n\t\t\t\tsubstituted = substituted.substring(part.length);\n\t\t\t\tif (i >= textParts.length - 1) {\n\t\t\t\t\t// We've run out of input - is there any template left?\n\t\t\t\t\tif (substituted == \"\") {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar prefix = prefixes[i];\n\t\t\t\tif (prefix && substituted.substring(0, prefix.length) !== prefix) {\n\t\t\t\t\t// All values are optional - if we have a prefix and it doesn't match, move along\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Find the next part to un-substitute\n\t\t\t\tvar nextPart = textParts[i + 1];\n\t\t\t\tvar offset = i;\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (offset == textParts.length - 2) {\n\t\t\t\t\t\tvar endPart = substituted.substring(substituted.length - nextPart.length);\n\t\t\t\t\t\tif (endPart !== nextPart) {\n\t\t\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar stringValue = substituted.substring(0, substituted.length - nextPart.length);\n\t\t\t\t\t\tsubstituted = endPart;\n\t\t\t\t\t} else if (nextPart) {\n\t\t\t\t\t\tvar nextPartPos = substituted.indexOf(nextPart);\n\t\t\t\t\t\tvar stringValue = substituted.substring(0, nextPartPos);\n\t\t\t\t\t\tsubstituted = substituted.substring(nextPartPos);\n\t\t\t\t\t} else if (prefixes[offset + 1]) {\n\t\t\t\t\t\tvar nextPartPos = substituted.indexOf(prefixes[offset + 1]);\n\t\t\t\t\t\tif (nextPartPos === -1) nextPartPos = substituted.length;\n\t\t\t\t\t\tvar stringValue = substituted.substring(0, nextPartPos);\n\t\t\t\t\t\tsubstituted = substituted.substring(nextPartPos);\n\t\t\t\t\t} else if (textParts.length > offset + 2) {\n\t\t\t\t\t\t// If the separator between this variable and the next is blank (with no prefix), continue onwards\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tnextPart = textParts[offset + 1];\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar stringValue = substituted;\n\t\t\t\t\t\tsubstituted = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!unSubstitutions[i](stringValue, result, options.strict)) {\n\t\t\t\t\treturn /*undefined*/;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tthis.varNames = varNames;\n\t\tthis.template = template;\n\t}\n\tUriTemplate.prototype = {\n\t\ttoString: function () {\n\t\t\treturn this.template;\n\t\t},\n\t\tfillFromObject: function (obj) {\n\t\t\treturn this.fill(obj);\n\t\t},\n\t\ttest: function (uri, options) {\n\t\t\treturn !!this.fromUri(uri, options)\n\t\t}\n\t};\n\n\treturn UriTemplate;\n});\n", "import m from \"mithril\";\nimport type { OctironRoot, OctironSelection, Predicate, SelectView, OctironSelectArgs, Selector, TypeDefs, OctironPerformArgs, PerformView, OctironDefaultArgs } from '../types/octiron.ts';\nimport { SelectionRenderer } from \"../renderers/SelectionRenderer.ts\";\nimport { unravelArgs } from \"../utils/unravelArgs.ts\";\nimport type { Store } from \"../store.ts\";\n\nexport type RootFactoryInternals = {\n  store: Store;\n  typeDefs: TypeDefs;\n};\n\n/**\n * @description\n * An internal factory function for creating `OctironRoot` objects.\n *\n * @param internals Internally held values from upstream.\n */\nexport function rootFactory(\n  internals: RootFactoryInternals,\n): OctironRoot {\n  const self: OctironRoot = Object.assign(\n    (predicate: Predicate, children: m.Children) => {\n      return self.root((o: OctironSelection) => o(predicate, children));\n    },\n    {\n      octironType: \"root\",\n      isOctiron: true,\n      readonly: true,\n      value: null,\n      store: internals.store,\n\n      not(\n        predicate: Predicate,\n        children: m.Children,\n      ) {\n        return self.root((o: OctironSelection) => o.not(predicate, children));\n      },\n\n      root(\n        arg1?: Selector | OctironSelectArgs | SelectView,\n        arg2?: OctironSelectArgs | SelectView,\n        arg3?: SelectView,\n      ) {\n        let selector: string;\n        const [childSelector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n        if (childSelector == null) {\n          selector = internals.store.rootIRI;\n        } else {\n          selector = `${internals.store.rootIRI} ${childSelector}`;\n        }\n\n        return m(SelectionRenderer, {\n          selector,\n          args,\n          view,\n          internals: {\n            store: internals.store,\n            typeDefs: args?.typeDefs || internals.typeDefs,\n          },\n        });\n      },\n\n      select(\n        arg1: Selector,\n        arg2?: OctironSelectArgs | SelectView,\n        arg3?: SelectView,\n      ) {\n        return self.root(arg1, arg2 as OctironSelectArgs, arg3 as SelectView);\n      },\n\n      present(\n        arg1?: OctironSelectArgs | SelectView,\n        arg2?: SelectView,\n      ) {\n        return self.root(arg1 as OctironSelectArgs, arg2 as SelectView);\n      },\n\n      default(\n        arg1?: OctironDefaultArgs\n      ) {\n        return self.root(o => o.default(arg1 as OctironSelectArgs));\n      },\n\n      perform(\n        arg1?: Selector | OctironPerformArgs | PerformView,\n        arg2?: OctironPerformArgs | PerformView,\n        arg3?: PerformView,\n      ) {\n        if (typeof arg1 === 'string') {\n          return self.root(arg1, (o) => o.perform(\n            arg2 as OctironPerformArgs,\n            arg3 as PerformView,\n          ));\n        }\n\n        return self.root((o) => o.perform(\n          arg2 as OctironPerformArgs,\n          arg3 as PerformView,\n        ));\n      },\n\n    } as const,\n  ) satisfies OctironRoot;\n\n  return self;\n}\n", "import type { JSONValue } from \"../types/common.ts\";\nimport type {\n  Octiron,\n  OctironSelectArgs,\n  OctironSelection,\n  Selector,\n  SelectView,\n  TypeDefs,\n} from \"../types/octiron.ts\";\nimport type {\n  Failure,\n  ReadonlySelectionResult,\n  SelectionDetails,\n} from \"../types/store.ts\";\nimport m from \"mithril\";\nimport { selectionFactory } from \"../factories/selectionFactory.ts\";\nimport { isJSONObject } from \"../utils/isJSONObject.ts\";\nimport { mithrilRedraw } from \"../utils/mithrilRedraw.ts\";\nimport type { Store } from \"../store.ts\";\n\nexport type SelectionRendererInternals = {\n  store: Store;\n  typeDefs: TypeDefs;\n  parent?: Octiron;\n  value?: JSONValue;\n};\n\nexport type SelectionRendererAttrs = {\n  selector: Selector;\n  args: OctironSelectArgs;\n  view: SelectView;\n  internals: SelectionRendererInternals;\n};\n\nconst preKey = Symbol.for('@pre');\nconst postKey = Symbol.for('@post');\n\nfunction shouldReselect(\n  next: SelectionRendererAttrs,\n  prev: SelectionRendererAttrs,\n) {\n  return next.internals.store !== prev.internals.store ||\n    next.selector !== prev.selector ||\n    next.internals.value !== prev.internals.value;\n}\n\n/**\n * @description\n * Subscribes to a selection's result using the Octiron store. Each selection\n * result is feed to an Octiron instance and is only removed if a later\n * selection update does not include the same result. Selection results are\n * given a unique key in the form of a json-path.\n *\n * Once an Octiron instance is created using a selection, further changes via\n * the upstream internals object or user given args applied to the downstream\n * Octiron instances using their internal update hooks.\n */\nexport const SelectionRenderer: m.FactoryComponent<SelectionRendererAttrs> = (\n  vnode,\n) => {\n  const key = Symbol(`SelectionRenderer`);\n  let currentAttrs = vnode.attrs;\n  let details: undefined | SelectionDetails<ReadonlySelectionResult>;\n\n  const instances: Record<symbol, {\n    octiron: OctironSelection;\n    selectionResult: ReadonlySelectionResult;\n  }> = {};\n\n  function createInstances() {\n    let hasChanges = false;\n\n    const {\n      store,\n      typeDefs,\n      parent,\n    } = currentAttrs.internals;\n\n    const nextKeys: Array<symbol> = [];\n\n    if (details == null) {\n      const prevKeys = Reflect.ownKeys(instances) as symbol[];\n\n      for (const key of prevKeys) {\n        if (!nextKeys.includes(key)) {\n          hasChanges = true;\n\n          delete instances[key];\n        }\n      }\n\n      if (hasChanges) {\n        mithrilRedraw();\n      }\n\n      return;\n    }\n\n    for (const selectionResult of details.result) {\n      const key = Symbol.for(selectionResult.pointer);\n      \n      nextKeys.push(key);\n\n      if (Object.hasOwn(instances, key)) {\n        const next = selectionResult;\n        const prev = instances[key].selectionResult;\n\n        if (\n          prev.type === 'value' &&\n          next.type === 'value' &&\n          next.value === prev.value\n        ) {\n          continue;\n        } else if (\n          prev.type === 'entity' &&\n          next.type === 'entity' &&\n          (\n            next.ok !== prev.ok ||\n            next.status !== prev.status ||\n            next.value !== prev.value\n          )\n        ) {\n          continue;\n        }\n      }\n\n      hasChanges = true;\n\n      let octiron: Octiron;\n\n      if (selectionResult.type === 'entity') {\n        octiron = selectionFactory({\n          store,\n          typeDefs,\n          value: selectionResult.value,\n          parent,\n        });\n      } else {\n        octiron = selectionFactory({\n          store,\n          typeDefs,\n          value: selectionResult.value,\n          datatype: selectionResult.datatype,\n          parent,\n        });\n      }\n\n      instances[key] = {\n        octiron,\n        selectionResult,\n      };\n    }\n\n    const prevKeys = Reflect.ownKeys(instances) as symbol[];\n\n    for (const key of prevKeys) {\n      if (!nextKeys.includes(key)) {\n        hasChanges = true;\n\n        delete instances[key];\n      }\n    }\n\n    if (hasChanges) {\n      mithrilRedraw();\n    }\n  }\n\n  async function fetchRequired(required: string[]) {\n    if (required.length === 0) {\n      return;\n    }\n\n    // deno-lint-ignore no-explicit-any\n    const promises: Promise<any>[] = [];\n\n    for (const iri of required) {\n      promises.push(currentAttrs.internals.store.fetch(iri));\n    }\n\n    await Promise.allSettled(promises);\n  }\n\n  function listener(next: SelectionDetails<ReadonlySelectionResult>) {\n    let required: string[] = [];\n\n    if (typeof details === 'undefined') {\n      required = next.required;\n    } else {\n      for (const iri of next.required) {\n        if (!details.required.includes(iri)) {\n          required.push(iri);\n        }\n      }\n    }\n\n    details = next;\n\n    if (required.length > 0) {\n      fetchRequired(required);\n    }\n\n    createInstances();\n  }\n\n  function subscribe() {\n    if (\n      typeof currentAttrs.internals.value !== 'undefined' &&\n      !isJSONObject(currentAttrs.internals.value)\n    ) {\n      currentAttrs.internals.store.unsubscribe(key);\n      createInstances();\n\n      return;\n    }\n\n    details = currentAttrs.internals.store.subscribe({\n      key,\n      selector: currentAttrs.selector,\n      value: currentAttrs.internals.value,\n      listener,\n    });\n\n    fetchRequired(details.required);\n\n    createInstances();\n  }\n\n  return {\n    oninit: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      subscribe();\n    },\n    onbeforeupdate: ({ attrs }) => {\n      const reselect = shouldReselect(attrs, currentAttrs);\n\n      currentAttrs = attrs;\n\n      if (reselect) {\n        attrs.internals.store.unsubscribe(key);\n        subscribe();\n      }\n    },\n    onbeforeremove: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      attrs.internals.store.unsubscribe(key);\n    },\n    view: ({ attrs }): m.Children => {\n      if (details == null || !details.complete) {\n        return attrs.args.loading;\n      } else if ((details.hasErrors || details.hasMissing) && typeof attrs.args.fallback !== 'function') {\n        return attrs.args.fallback;\n      }\n\n      const view = currentAttrs.view;\n      const {\n        pre,\n        sep,\n        post,\n        start,\n        end,\n        predicate,\n        fallback,\n      } = currentAttrs.args;\n\n      if (typeof view === 'undefined') {\n        return;\n      }\n\n      const children: m.Children = [];\n      let list = Reflect.ownKeys(instances).map(((key) => instances[key as symbol]));\n\n      if (start != null || end != null) {\n        list = list.slice(\n          start ?? 0,\n          end,\n        );\n      }\n\n      if (predicate != null) {\n        list = list.filter(({ octiron }) => predicate(octiron));\n      }\n\n      if (pre != null) {\n        children.push(m.fragment({ key: preKey }, [pre]));\n      }\n      \n      for (let index = 0; index < list.length; index++) {\n        const { selectionResult, octiron } = list[index];\n        const { key } = selectionResult;\n\n        if (index !== 0) {\n          children.push(m.fragment({ key: `@${Symbol.keyFor(key)}` }, [sep]));\n        }\n\n        if (selectionResult.type === 'value') {\n          children.push(m.fragment({ key }, [view(octiron)]));\n        } else if (!selectionResult.ok && typeof fallback === 'function') {\n          children.push(\n            m.fragment({ key }, [fallback(octiron, selectionResult.reason as Failure)]),\n          );\n        } else if (!selectionResult.ok) {\n          children.push(m.fragment({ key }, [fallback as m.Children]));\n        } else {\n          children.push(m.fragment({ key }, [view(octiron)]));\n        }\n      }\n\n      if (post != null) {\n        children.push(m.fragment({ key: postKey }, [post]));\n      }\n\n      return children;\n    },\n  };\n};\n", "import type { JSONValue } from '../types/common.ts';\nimport type { BaseAttrs, Octiron, OctironDefaultArgs, OctironPerformArgs, OctironPresentArgs, OctironSelectArgs, OctironSelection, PerformView, Predicate, PresentComponent, Selector, SelectView, TypeDefs } from '../types/octiron.ts';\nimport m from \"mithril\";\nimport { SelectionRenderer } from \"../renderers/SelectionRenderer.ts\";\nimport { getComponent } from '../utils/getComponent.ts';\nimport { unravelArgs } from \"../utils/unravelArgs.ts\";\nimport { getValueType } from \"../utils/getValueType.ts\";\nimport { isJSONObject } from \"../utils/isJSONObject.ts\";\nimport type { Store } from \"../store.ts\";\nimport { PerformRenderer } from \"../renderers/PerformRenderer.ts\";\n\nexport type SelectionFactoryInternals = {\n  store: Store;\n  typeDefs: TypeDefs;\n  parent?: Octiron;\n  value?: JSONValue;\n  datatype?: string;\n};\n\n/* Internal hooks for upstream to provide updates */\nexport interface OctironHooks {\n  _updateArgs(args: OctironSelectArgs): void;\n  _updateValue(value: JSONValue): void;\n};\n\n/**\n * @description\n * An internal factory function for creating `OctironSelection` objects.\n *\n * @param internals Internally held values from upstream.\n * @param args User given arguments.\n */\nexport function selectionFactory<Attrs extends BaseAttrs = {}>(\n  internals: SelectionFactoryInternals,\n  args?: OctironSelectArgs<Attrs>,\n): OctironSelection & OctironHooks {\n  const factoryArgs = Object.assign({}, args);\n  const type = getValueType(internals.value);\n\n  const refs = {\n    isOctiron: true,\n    octironType: 'selection',\n    value: internals.value,\n  };\n\n  const self: OctironSelection & OctironHooks = Object.assign(\n    (predicate: Predicate, children?: m.Children) => {\n      const passes = predicate(self);\n\n      if (passes) {\n        return children;\n      }\n      return null;\n    },\n    {\n      isOctiron: true,\n      octironType: 'selection',\n      readonly: true,\n      id: internals.datatype,\n\n      get value() {\n        return refs.value;\n      },\n\n      get store() {\n        return internals.store;\n      },\n\n      not: (predicate: Predicate, children: m.Children) => {\n        const passes = predicate(self);\n\n        if (!passes) {\n          return children;\n        }\n        return null;\n      },\n\n      root: (\n        arg1?: Selector | OctironSelectArgs | SelectView,\n        arg2?: OctironSelectArgs | SelectView,\n        arg3?: SelectView,\n      ) => {\n        let selector: string;\n        const [childSelector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n        if (childSelector == null) {\n          selector = internals.store.rootIRI;\n        } else {\n          selector = `${internals.store.rootIRI} ${childSelector}`;\n        }\n\n        return m(SelectionRenderer, {\n          selector,\n          args,\n          view,\n          internals: {\n            store: internals.store,\n            typeDefs: args?.typeDefs || internals.typeDefs,\n            parent: self,\n          },\n        });\n      },\n\n      enter(\n        arg1: Selector,\n        arg2?: OctironSelectArgs | SelectView,\n        arg3?: SelectView,\n      ) {\n        const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n        return m(SelectionRenderer, {\n          selector,\n          args,\n          view,\n          internals: {\n            store: internals.store,\n            typeDefs: args?.typeDefs || internals.typeDefs,\n            parent: self,\n          },\n        });\n      },\n\n      select: (\n        arg1: Selector,\n        arg2?: OctironSelectArgs | SelectView,\n        arg3?: SelectView,\n      ): m.Children | null => {\n        const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n        if (!isJSONObject(internals.value)) {\n          return null;\n        }\n\n        return m(\n          SelectionRenderer,\n          {\n            selector,\n            args,\n            view,\n            internals: {\n              store: internals.store,\n              typeDefs: args?.typeDefs || internals.typeDefs,\n              value: internals.value,\n              parent: self,\n            },\n          },\n        );\n      },\n\n      present(args?: OctironPresentArgs<BaseAttrs>) {\n        let attrs: BaseAttrs = {} as BaseAttrs;\n        let firstPickComponent: PresentComponent<JSONValue, BaseAttrs> | undefined;\n        let fallbackComponent: PresentComponent<JSONValue> | undefined;\n\n        if (args?.attrs != null) {\n          attrs = args.attrs as BaseAttrs;\n        } else if (factoryArgs?.attrs != null) {\n          attrs = factoryArgs.attrs as unknown as BaseAttrs;\n        }\n\n        if (args?.component != null) {\n          firstPickComponent = args.component as PresentComponent<JSONValue, BaseAttrs>;\n        } else if (factoryArgs?.component != null) {\n          firstPickComponent = factoryArgs.component as unknown as PresentComponent<\n            JSONValue,\n            BaseAttrs\n          >;\n        }\n\n        if (args?.fallbackComponent != null) {\n          fallbackComponent = args.fallbackComponent as unknown as PresentComponent<JSONValue>;\n        } else if (factoryArgs?.fallbackComponent != null) {\n          fallbackComponent = factoryArgs.fallbackComponent as unknown as PresentComponent<JSONValue>;\n        }\n\n        const component = getComponent({\n          style: \"present\",\n          datatype: internals.datatype,\n          type,\n          firstPickComponent: firstPickComponent as unknown as PresentComponent,\n          fallbackComponent: fallbackComponent as unknown as PresentComponent,\n          typeDefs: args?.typeDefs || internals.typeDefs || {},\n        });\n\n        if (component == null) {\n          return null;\n        }\n\n        const { pre, sep, post, start, end, predicate } = Object.assign(\n          {},\n          factoryArgs,\n          args,\n        );\n\n        // deno-lint-ignore no-explicit-any\n        return m(component as any, {\n          o: self,\n          renderType: \"present\",\n          value: self.value,\n          attrs,\n          pre,\n          sep,\n          post,\n          start,\n          end,\n          predicate,\n        });\n      },\n\n      default(\n        arg1?: OctironDefaultArgs,\n      ) {\n        return self.present(arg1 as OctironSelectArgs)\n      },\n\n      perform: (\n        arg1?: Selector | OctironPerformArgs | PerformView,\n        arg2?: OctironPerformArgs | PerformView,\n        arg3?: PerformView,\n      ) => {\n        const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n        return m(PerformRenderer, {\n          selector,\n          args,\n          view,\n          internals: {\n            octiron: self,\n            store: internals.store,\n            typeDefs: args.typeDefs || internals.typeDefs,\n          },\n        });\n      },\n\n      _updateArgs: (args: OctironSelectArgs) => {\n        for (const [key, value] of Object.entries(args)) {\n          // deno-lint-ignore no-explicit-any\n          (factoryArgs as Record<string, any>)[key] = value;\n        }\n      },\n\n      _updateValue: (value: JSONValue) => {\n        refs.value = value;\n      },\n\n    } as const,\n  ) satisfies OctironSelection & OctironHooks;\n\n  return self;\n}\n", "import type { AnyComponent, EditComponent, PresentComponent, TypeDefs } from \"../types/octiron.ts\";\n\n/**\n * @description\n * Returns a component based of Octiron's selection rules:\n *\n * 1. If the first pick component is given, return it.\n * 2. If a typedef is defined for the datatype (jsonld term or type)\n *    for the given style, return it.\n * 3. If a typedef is defined for the (or one of the) types (jsonld '@type')\n *    value for the given style, return it.\n * 4. If a fallback component is given, return it.\n *\n * @param args.style - The style of presentation.\n * @param args.datatype - The datatype the component should be configured to\n *                        handle.\n * @param args.type - The type the component should be configured to handle.\n * @param args.firstPickComponent - The component to use if passed by upstream.\n * @param args.fallbackComponent - The component to use if no other component\n *                                 is picked.\n */\nexport function getComponent({\n  style,\n  datatype,\n  type,\n  firstPickComponent,\n  typeDefs,\n  fallbackComponent,\n}: {\n  style: \"present\" | \"edit\";\n  datatype?: string;\n  type?: string | string[];\n  typeDefs: TypeDefs;\n  // deno-lint-ignore no-explicit-any\n  firstPickComponent?: PresentComponent<any>;\n  // deno-lint-ignore no-explicit-any\n  fallbackComponent?: PresentComponent<any>;\n  // deno-lint-ignore no-explicit-any\n}): PresentComponent<any> | EditComponent<any> | AnyComponent<any> | undefined {\n  if (firstPickComponent != null) {\n    return firstPickComponent;\n  }\n\n  if (\n    datatype != null &&\n    typeDefs[datatype]?.[style] != null\n  ) {\n    // deno-lint-ignore no-explicit-any\n    return typeDefs[datatype][style] as PresentComponent<any>;\n  }\n\n  if (\n    typeof type === \"string\" &&\n    typeDefs[type]?.[style] != null\n  ) {\n    // deno-lint-ignore no-explicit-any\n    return typeDefs[type][style] as PresentComponent<any>;\n  }\n\n  if (Array.isArray(type)) {\n    for (const item of type) {\n      if (\n        typeDefs[item]?.[style] != null\n      ) {\n        // deno-lint-ignore no-explicit-any\n        return typeDefs[item][style] as PresentComponent<any>;\n      }\n    }\n  }\n\n  if (typeof fallbackComponent !== \"undefined\") {\n    // deno-lint-ignore no-explicit-any\n    return fallbackComponent as PresentComponent<any>;\n  }\n}\n", "import type { ActionSelectView, Octiron, OctironActionSelectionArgs, OctironDefaultArgs, OctironEditArgs, OctironPerformArgs, OctironPresentArgs, OctironSelectArgs, PerformView, Selector, SelectView } from '../types/octiron.ts';\n\ntype AllArgs =\n  | OctironSelectArgs\n  | OctironPresentArgs\n  | OctironPerformArgs\n  | OctironActionSelectionArgs\n  | OctironEditArgs\n  | OctironDefaultArgs\n;\n\ntype AllViews =\n  | SelectView\n  | PerformView\n  | ActionSelectView\n;\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n * @param arg3 - A view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector | OctironSelectArgs | SelectView,\n  arg2?: OctironSelectArgs | SelectView,\n  arg3?: SelectView,\n): [Selector, OctironSelectArgs, SelectView];\n\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n * @param arg3 - A view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector | OctironPerformArgs | PerformView,\n  arg2?: OctironPerformArgs | PerformView,\n  arg3?: PerformView,\n): [Selector, OctironPerformArgs, PerformView];\n\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n * @param arg3 - A view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector,\n  arg2?: OctironActionSelectionArgs | ActionSelectView,\n  arg3?: ActionSelectView,\n): [Selector, OctironActionSelectionArgs, ActionSelectView];\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector | OctironPresentArgs,\n  arg2?: OctironPresentArgs,\n): [Selector, OctironSelectArgs];\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector | OctironEditArgs,\n  arg2?: OctironEditArgs,\n): [Selector, OctironEditArgs];\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector | OctironDefaultArgs,\n  arg2?: OctironDefaultArgs,\n): [Selector, OctironDefaultArgs];\n\n/**\n * @description\n * Numerous Octiron view functions take a combination of string selector,\n * object args and function view arguments.\n *\n * This `unravelArgs` identifies which arguments are present and returns\n * defaults for the missing arguments.\n *\n * @param arg1 - A selector string, args object or view function if present.\n * @param arg2 - An args object or view function if present.\n * @param arg3 - A view function if present.\n */\nexport function unravelArgs(\n  arg1?: Selector | AllArgs | AllViews,\n  arg2?: AllArgs | AllViews,\n  arg3?: AllViews,\n): [Selector | undefined, AllArgs, AllViews] | [Selector | undefined, AllArgs] {\n  let selector: Selector | undefined;\n  let args: AllArgs = {} as AllArgs;\n  let view: AllViews | undefined;\n\n  if (typeof arg1 === \"string\") {\n    selector = arg1;\n  } else if (typeof arg1 === \"function\") {\n    view = arg1 as SelectView;\n  } else if (arg1 != null) {\n    args = arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    view = arg2 as SelectView;\n  } else if (arg2 != null) {\n    args = arg2;\n  }\n\n  if (typeof arg3 === 'function') {\n    view = arg3;\n  }\n\n  if (typeof view === \"undefined\") {\n    view = ((o: Octiron) => o.default(args as OctironDefaultArgs)) as AllViews;\n  }\n\n  return [\n    selector,\n    args,\n    view,\n  ];\n}\n", "import type { JSONObject, JSONValue } from '../types/common.ts';\n\n/**\n * @description\n * Returns true if the input value is an object.\n *\n * @param value Any value which should come from a JSON source.\n */\nexport function isJSONObject(value: JSONValue): value is JSONObject {\n  return typeof value === 'object' && !Array.isArray(value) && value !== null;\n}\n", "import type { JSONObject, JSONValue, TypeObject } from '../types/common.ts';\nimport { isJSONObject } from \"./isJSONObject.ts\";\n\n/**\n * @description\n * Returns true if the given value is a JSON object with a JSON-ld @type value.\n *\n * @param value Any value which should come from a JSON source.\n */\nexport function isTypeObject<\n  Properties extends JSONObject = JSONObject\n>(value: JSONValue): value is TypeObject<Properties> {\n  if (!isJSONObject(value)) {\n    return false;\n  } else if (typeof value['@type'] === 'string') {\n    return true;\n  } else if (!Array.isArray(value['@type'])) {\n    return false;\n  }\n\n  for (const item of value['@type']) {\n    if (typeof item !== 'string') {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import type { JSONValue } from \"../types/common.ts\";\nimport { isTypeObject } from \"./isTypedObject.ts\";\n\n\n/**\n * @description\n * Returns the type value of the input if it is a type object.\n *\n * @param value A JSON value which might be a typed JSON-ld object.\n */\nexport function getValueType(value: JSONValue): string | string[] | undefined {\n  if (isTypeObject(value)) {\n    return value['@type'];\n  }\n}\n", "import m from 'mithril';\nimport { JsonPointer } from 'json-ptr';\nimport { ActionStateRenderer } from \"../renderers/ActionStateRenderer.ts\";\nimport { PerformRenderer } from \"../renderers/PerformRenderer.ts\";\nimport { SelectionRenderer } from \"../renderers/SelectionRenderer.ts\";\nimport type { Store } from \"../store.ts\";\nimport type { JSONArray, JSONObject, JSONValue, Mutable, SCMAction } from \"../types/common.ts\";\nimport type { ActionSelectView, BaseAttrs, Octiron, OctironAction, OctironActionSelectionArgs, OctironDefaultArgs, OctironPerformArgs, OctironPresentArgs, OctironSelectArgs, PayloadValueMapper, PerformView, Predicate, PresentComponent, Selector, SelectView, TypeDefs, UpdateArgs } from \"../types/octiron.ts\";\nimport type { EntityState } from \"../types/store.ts\";\nimport { getComponent } from \"../utils/getComponent.ts\";\nimport { getSubmitDetails } from \"../utils/getSubmitDetails.ts\";\nimport { getValueType } from \"../utils/getValueType.ts\";\nimport { unravelArgs } from \"../utils/unravelArgs.ts\";\nimport { mithrilRedraw } from \"../utils/mithrilRedraw.ts\";\nimport { ActionSelectionRenderer } from \"../renderers/ActionSelectionRenderer.ts\";\nimport { isJSONObject } from \"../utils/isJSONObject.ts\";\n\nexport interface OctironActionHooks {\n  _updateArgs(args: OctironPerformArgs): void;\n}\n\nexport type ActionInternals = {\n  octiron: Octiron;\n  store: Store;\n  typeDefs: TypeDefs;\n};\n\nexport type ActionRefs = {\n  url?: string;\n  method: string;\n  submitting: boolean;\n  payload: JSONObject;\n  store: Store;\n  typeDefs: TypeDefs;\n  submitResult?: EntityState;\n};\n\nexport function actionFactory<\n  // deno-lint-ignore no-explicit-any\n  Attrs extends Record<string, any> = Record<string, any>,\n>(\n  internals: ActionInternals,\n  args: OctironPerformArgs<Attrs>,\n): OctironAction & OctironActionHooks {\n  const factoryArgs = Object.assign({}, args);\n  let payload: JSONObject = {};\n  let submitResult: EntityState | undefined;\n\n  if (isJSONObject(args.initialPayload)) {\n    for (const [key, value] of Object.entries(args.initialPayload)) {\n      payload[internals.store.expand(key)] = value;\n    }\n  }\n\n  const { url, method, body } = getSubmitDetails({\n    payload,\n    action: internals.octiron.value as SCMAction,\n    store: internals.store,\n  });\n\n  if (body == null) {\n    submitResult = internals.store.entity(url);\n  }\n\n  // this object is passed into children which need to keep hold of the\n  // original object but read the most recent value after mutations on\n  // on its members.\n  const refs: ActionRefs = {\n    url,\n    method,\n    submitting: false,\n    payload,\n    store: internals.store,\n    typeDefs: internals.typeDefs,\n    submitResult,\n  };\n\n  async function onSubmit() {\n    const { url, method, body, contentType, encodingType } = getSubmitDetails({\n      payload,\n      action: internals.octiron.value as SCMAction,\n      store: internals.store,\n    });\n\n    try {\n      refs.submitting = true;\n\n      mithrilRedraw();\n\n      refs.submitResult = await internals.store.submit(url, {\n        method,\n        body,\n        contentType,\n        encodingType,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n\n    refs.submitting = false;\n\n    mithrilRedraw();\n  }\n\n  function onUpdate(value: JSONObject) {\n    const prev = payload;\n    const next = {\n      ...prev,\n      ...value,\n    };\n\n    if (typeof args.interceptor === 'function') {\n      payload = args.interceptor(\n        next,\n        prev,\n        internals.octiron.value as SCMAction,\n      );\n    } else {\n      payload = next;\n    }\n    // TODO: perform _updateArgs() when supported\n    self.value = refs.payload = value;\n\n    mithrilRedraw();\n  }\n\n  function onPointerUpdate(\n    pointer: string,\n    value: JSONValue,\n  ) {\n    const next: Partial<JSONObject> = Object.assign({}, payload);\n    const ptr = JsonPointer.create(pointer);\n\n    if (typeof value === 'undefined' || value === null) {\n      ptr.unset(next) as Partial<JSONObject>;\n    } else {\n      ptr.set(next, value, true) as Partial<JSONObject>;\n    }\n\n    onUpdate(next);\n  }\n\n  const self: Mutable<OctironAction & OctironActionHooks> = function self(\n    predicate: Predicate,\n    children?: m.Children,\n  ) {\n    const passes = predicate(self as OctironAction);\n\n    if (passes) {\n      return children;\n    }\n\n    return null;\n  } as OctironAction & OctironActionHooks;\n\n  self.isOctiron = true;\n  self.octironType = 'action';\n  self.readonly = false;\n  self.value = refs.payload;\n  self.action = internals.octiron;\n  self.actionValue = internals.octiron;\n\n  self.submit = async function (\n    arg1?: PayloadValueMapper<JSONObject> | JSONObject\n  ): Promise<void> {\n    if (typeof arg1 === 'function') {\n      onUpdate(arg1(payload));\n    } else if (arg1 != null) {\n      onUpdate(arg1);\n    }\n\n    return await onSubmit();\n  } as OctironAction['submit'];\n\n  self.update = async function (\n    arg1: PayloadValueMapper<JSONObject> | JSONObject,\n    args?: UpdateArgs,\n  ): Promise<void> {\n    if (typeof arg1 === 'function') {\n      onUpdate(arg1(payload));\n    } else if (arg1 != null) {\n      onUpdate(arg1);\n    }\n\n    if (args?.submit || args?.submitOnChange) {\n      await onSubmit();\n    } else {\n      mithrilRedraw();\n    }\n  } as OctironAction['update'];\n\n\n  self.not = function(\n    predicate: Predicate,\n    children: m.Children,\n  ): m.Children {\n    if (self == null) {\n      return null;\n    }\n\n    const passes = predicate(self as unknown as OctironAction);\n\n    if (!passes) {\n      return children;\n    }\n\n    return null;\n  };\n\n  self.root = function (\n    arg1?: Selector | OctironSelectArgs | SelectView,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ): m.Children {\n    let selector: string;\n    const [childSelector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    if (childSelector == null) {\n      selector = internals.store.rootIRI;\n    } else {\n      selector = `${internals.store.rootIRI} ${childSelector}`;\n    }\n\n    return m(SelectionRenderer, {\n      selector,\n      args,\n      view,\n      internals: {\n        store: internals.store,\n        typeDefs: args?.typeDefs || factoryArgs?.typeDefs || internals.typeDefs,\n        parent: self as unknown as OctironAction,\n      },\n    });\n  };\n\n  self.enter = function(\n    arg1: Selector,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ): m.Children {\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    return m(SelectionRenderer, {\n      selector,\n      args,\n      view,\n      internals: {\n        store: internals.store,\n        typeDefs: args?.typeDefs || factoryArgs?.typeDefs || internals.typeDefs,\n        parent: self as unknown as OctironAction,\n      },\n    });\n  };\n\n  self.present = function(\n    args?: OctironPresentArgs<BaseAttrs>,\n  ): m.Children {\n    let attrs: BaseAttrs = {} as BaseAttrs;\n    let firstPickComponent: PresentComponent<JSONObject, BaseAttrs> | undefined;\n    let fallbackComponent: PresentComponent<JSONObject> | undefined;\n\n    if (args?.attrs != null) {\n      attrs = args.attrs as BaseAttrs;\n    } else if (factoryArgs?.attrs != null) {\n      attrs = factoryArgs.attrs as unknown as BaseAttrs;\n    }\n\n    if (args?.component != null) {\n      firstPickComponent = args.component as PresentComponent<JSONObject, BaseAttrs>;\n    } else if (factoryArgs?.component != null) {\n      firstPickComponent = factoryArgs.component as unknown as PresentComponent<\n        JSONObject,\n        BaseAttrs\n      >;\n    }\n\n    if (args?.fallbackComponent != null) {\n      fallbackComponent = args.fallbackComponent as unknown as PresentComponent<JSONObject>;\n    } else if (factoryArgs?.fallbackComponent != null) {\n      fallbackComponent = factoryArgs.fallbackComponent as unknown as PresentComponent<JSONObject>;\n    }\n\n    const component = getComponent({\n      style: \"present\",\n      type: getValueType(internals.octiron.value),\n      firstPickComponent: firstPickComponent as unknown as PresentComponent,\n      fallbackComponent: fallbackComponent as unknown as PresentComponent,\n      typeDefs: args?.typeDefs || internals.typeDefs || {},\n    });\n\n    if (component == null) {\n      return null;\n    }\n\n    const { pre, sep, post, start, end, predicate } = Object.assign(\n      {},\n      factoryArgs,\n      args,\n    );\n\n    // deno-lint-ignore no-explicit-any\n    return m(component as any, {\n      o: self,\n      renderType: \"present\",\n      value: self.value,\n      attrs,\n      pre,\n      sep,\n      post,\n      start,\n      end,\n      predicate,\n    });\n  };\n\n  self.default = function (\n    args?: OctironDefaultArgs,\n  ): m.Children {\n    return self.present(args as OctironPresentArgs);\n  };\n\n  self.initial = function (\n    children: m.Children\n  ): m.Children {\n    return m(\n      ActionStateRenderer,\n      {\n        type: 'initial',\n        refs,\n      },\n      children,\n    );\n  };\n\n  self.success = function (\n    arg1?: Selector | OctironSelectArgs | SelectView,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ): m.Children {\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    return m(ActionStateRenderer, {\n      type: 'success',\n      selector,\n      args,\n      view,\n      refs,\n    });\n  };\n\n  self.failure = function (\n    arg1?: Selector | OctironSelectArgs | SelectView,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ) {\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    return m(ActionStateRenderer, {\n      type: 'failure',\n      selector,\n      args,\n      view,\n      refs,\n    });\n  };\n\n  self.select = function (\n    arg1: Selector,\n    arg2?: OctironActionSelectionArgs | ActionSelectView,\n    arg3?: ActionSelectView,\n  ): m.Children | null {\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    return m(\n      ActionSelectionRenderer,\n      {\n        internals: {\n          action: self as unknown as OctironAction,\n          parent: self as unknown as OctironAction,\n          entity: internals.octiron,\n          store: internals.store,\n          typeDefs: internals.typeDefs,\n          onSubmit,\n          onUpdate: onPointerUpdate,\n          submitting: refs.submitting,\n        },\n        selector,\n        value: self.value,\n        actionValue: internals.octiron.value as JSONObject,\n        args,\n        view,\n      }\n    );\n  };\n\n  self.perform = function (\n    arg1?: Selector | OctironPerformArgs | PerformView,\n    arg2?: OctironPerformArgs | PerformView,\n    arg3?: PerformView,\n  ): m.Children {\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    return m(PerformRenderer, {\n      selector,\n      args,\n      view,\n      internals: {\n        octiron: self as unknown as OctironAction,\n        store: internals.store,\n        typeDefs: internals.typeDefs,\n      },\n    });\n  };\n\n  self.append = function (\n    termOrType: string,\n    value: JSONValue = {},\n    args: UpdateArgs = {},\n  ) {\n    const type = internals.store.expand(termOrType);\n\n    if (isJSONObject(self.value)) {\n      const prevValue = self.value[type];\n      let nextValue: JSONArray = [];\n\n      if (prevValue != null && !Array.isArray(prevValue)) {\n        nextValue.push(prevValue);\n      } else if (Array.isArray(prevValue)) {\n        nextValue = [...prevValue];\n      }\n\n      nextValue.push(value);\n\n      return self.update({\n        ...self.value,\n        [type]: nextValue,\n      }, args);\n    }\n  };\n\n  self._updateArgs = function (\n    args: OctironPerformArgs,\n  ) {\n    for (const [key, value] of Object.entries(args)) {\n      // deno-lint-ignore no-explicit-any\n      (factoryArgs as Record<string, any>)[key] = value;\n    }\n  };\n\n  if (\n    typeof window === 'undefined' && args.submitOnInit &&\n    submitResult == null\n  ) {\n    self.submit();\n  } else if (typeof window !== 'undefined' && args.submitOnInit) {\n    self.submit();\n  }\n\n  return self as OctironAction & OctironActionHooks;\n}\n", "import {\n  JsonStringPointer,\n  UriFragmentIdentifierPointer,\n  Pointer,\n  RelativeJsonPointer,\n  PathSegment,\n  PathSegments,\n  Decoder,\n} from './types';\n\nexport function replace(source: string, find: string, repl: string): string {\n  let res = '';\n  let rem = source;\n  let beg = 0;\n  let end = -1;\n  while ((end = rem.indexOf(find)) > -1) {\n    res += source.substring(beg, beg + end) + repl;\n    rem = rem.substring(end + find.length, rem.length);\n    beg += end + find.length;\n  }\n  if (rem.length > 0) {\n    res += source.substring(source.length - rem.length, source.length);\n  }\n  return res;\n}\n\nexport function decodeFragmentSegments(segments: PathSegments): PathSegments {\n  let i = -1;\n  const len = segments.length;\n  const res = new Array(len);\n  while (++i < len) {\n    if (typeof segments[i] === 'string') {\n      res[i] = replace(\n        replace(decodeURIComponent(segments[i] as string), '~1', '/'),\n        '~0',\n        '~',\n      );\n    } else {\n      res[i] = segments[i];\n    }\n  }\n  return res;\n}\n\nexport function encodeFragmentSegments(segments: PathSegments): PathSegments {\n  let i = -1;\n  const len = segments.length;\n  const res = new Array(len);\n  while (++i < len) {\n    if (typeof segments[i] === 'string') {\n      res[i] = encodeURIComponent(\n        replace(replace(segments[i] as string, '~', '~0'), '/', '~1'),\n      );\n    } else {\n      res[i] = segments[i];\n    }\n  }\n  return res;\n}\n\nexport function decodePointerSegments(segments: PathSegments): PathSegments {\n  let i = -1;\n  const len = segments.length;\n  const res = new Array(len);\n  while (++i < len) {\n    if (typeof segments[i] === 'string') {\n      res[i] = replace(replace(segments[i] as string, '~1', '/'), '~0', '~');\n    } else {\n      res[i] = segments[i];\n    }\n  }\n  return res;\n}\n\nexport function encodePointerSegments(segments: PathSegments): PathSegments {\n  let i = -1;\n  const len = segments.length;\n  const res = new Array(len);\n  while (++i < len) {\n    if (typeof segments[i] === 'string') {\n      res[i] = replace(replace(segments[i] as string, '~', '~0'), '/', '~1');\n    } else {\n      res[i] = segments[i];\n    }\n  }\n  return res;\n}\n\nexport function decodePointer(ptr: Pointer): PathSegments {\n  if (typeof ptr !== 'string') {\n    throw new TypeError(\n      'Invalid type: JSON Pointers are represented as strings.',\n    );\n  }\n  if (ptr.length === 0) {\n    return [];\n  }\n  if (ptr[0] !== '/') {\n    throw new ReferenceError(\n      'Invalid JSON Pointer syntax. Non-empty pointer must begin with a solidus `/`.',\n    );\n  }\n  return decodePointerSegments(ptr.substring(1).split('/'));\n}\n\nexport function encodePointer(path: PathSegments): JsonStringPointer {\n  if (!path || (path && !Array.isArray(path))) {\n    throw new TypeError('Invalid type: path must be an array of segments.');\n  }\n  if (path.length === 0) {\n    return '';\n  }\n  return '/'.concat(encodePointerSegments(path).join('/'));\n}\n\nexport function decodeUriFragmentIdentifier(\n  ptr: UriFragmentIdentifierPointer,\n): PathSegments {\n  if (typeof ptr !== 'string') {\n    throw new TypeError(\n      'Invalid type: JSON Pointers are represented as strings.',\n    );\n  }\n  if (ptr.length === 0 || ptr[0] !== '#') {\n    throw new ReferenceError(\n      'Invalid JSON Pointer syntax; URI fragment identifiers must begin with a hash.',\n    );\n  }\n  if (ptr.length === 1) {\n    return [];\n  }\n  if (ptr[1] !== '/') {\n    throw new ReferenceError('Invalid JSON Pointer syntax.');\n  }\n  return decodeFragmentSegments(ptr.substring(2).split('/'));\n}\n\nexport function encodeUriFragmentIdentifier(\n  path: PathSegments,\n): UriFragmentIdentifierPointer {\n  if (!path || (path && !Array.isArray(path))) {\n    throw new TypeError('Invalid type: path must be an array of segments.');\n  }\n  if (path.length === 0) {\n    return '#';\n  }\n  return '#/'.concat(encodeFragmentSegments(path).join('/'));\n}\n\nconst InvalidRelativePointerError =\n  'Invalid Relative JSON Pointer syntax. Relative pointer must begin with a non-negative integer, followed by either the number sign (#), or a JSON Pointer.';\n\nexport function decodeRelativePointer(ptr: RelativeJsonPointer): PathSegments {\n  if (typeof ptr !== 'string') {\n    throw new TypeError(\n      'Invalid type: Relative JSON Pointers are represented as strings.',\n    );\n  }\n  if (ptr.length === 0) {\n    // https://tools.ietf.org/id/draft-handrews-relative-json-pointer-00.html#rfc.section.3\n    throw new ReferenceError(InvalidRelativePointerError);\n  }\n  const segments = ptr.split('/');\n  let first = segments[0];\n  // It is a name reference; strip the hash.\n  if (first[first.length - 1] == '#') {\n    if (segments.length > 1) {\n      throw new ReferenceError(InvalidRelativePointerError);\n    }\n    first = first.substr(0, first.length - 1);\n  }\n  let i = -1;\n  const len = first.length;\n  while (++i < len) {\n    if (first[i] < '0' || first[i] > '9') {\n      throw new ReferenceError(InvalidRelativePointerError);\n    }\n  }\n  const path: unknown[] = decodePointerSegments(segments.slice(1));\n  path.unshift(segments[0]);\n  return path as PathSegments;\n}\n\nexport function toArrayIndexReference(\n  arr: readonly unknown[],\n  idx: PathSegment,\n): number {\n  if (typeof idx === 'number') return idx;\n  const len = idx.length;\n  if (!len) return -1;\n  let cursor = 0;\n  if (len === 1 && idx[0] === '-') {\n    if (!Array.isArray(arr)) {\n      return 0;\n    }\n    return arr.length;\n  }\n  while (++cursor < len) {\n    if (idx[cursor] < '0' || idx[cursor] > '9') {\n      return -1;\n    }\n  }\n  return parseInt(idx, 10);\n}\n\nexport type Dereference = (it: unknown) => unknown;\n\nexport function compilePointerDereference(path: PathSegments): Dereference {\n  let body = \"if (typeof(it) !== 'undefined'\";\n  if (path.length === 0) {\n    return (it): unknown => it;\n  }\n  body = path.reduce((body, _, i) => {\n    return (\n      body +\n      \"\\n\\t&& it !== null && typeof((it = it['\" +\n      replace(replace(path[i] + '', '\\\\', '\\\\\\\\'), \"'\", \"\\\\'\") +\n      \"'])) !== 'undefined'\"\n    );\n  }, \"if (typeof(it) !== 'undefined'\") as string;\n  body = body + ') {\\n\\treturn it;\\n }';\n  // eslint-disable-next-line no-new-func\n  return new Function('it', body) as Dereference;\n}\n\nexport function setValueAtPath(\n  target: unknown,\n  val: unknown,\n  path: PathSegments,\n  force = false,\n): unknown {\n  if (path.length === 0) {\n    throw new Error('Cannot set the root object; assign it directly.');\n  }\n  if (typeof target === 'undefined') {\n    throw new TypeError('Cannot set values on undefined');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let it: any = target;\n  const len = path.length;\n  const end = path.length - 1;\n  let step: PathSegment;\n  let cursor = -1;\n  let rem: unknown;\n  let p: number;\n  while (++cursor < len) {\n    step = path[cursor];\n    if (typeof step !== 'string' && typeof step !== 'number') {\n      throw new TypeError('PathSegments must be a string or a number.');\n    }\n    if (\n      // Reconsider this strategy. It disallows legitimate structures on\n      // non - objects, or more precisely, on objects not derived from a class\n      // or constructor function.\n      step === '__proto__' ||\n      step === 'constructor' ||\n      step === 'prototype'\n    ) {\n      throw new Error('Attempted prototype pollution disallowed.');\n    }\n    if (Array.isArray(it)) {\n      if (step === '-' && cursor === end) {\n        it.push(val);\n        return undefined;\n      }\n      p = toArrayIndexReference(it, step);\n      if (it.length > p) {\n        if (cursor === end) {\n          rem = it[p];\n          it[p] = val;\n          break;\n        }\n        it = it[p];\n      } else if (cursor === end && p === it.length) {\n        if (force) {\n          it.push(val);\n          return undefined;\n        }\n      } else if (force) {\n        it = it[p] = cursor === end ? val : {};\n      }\n    } else {\n      if (typeof it[step] === 'undefined') {\n        if (force) {\n          if (cursor === end) {\n            it[step] = val;\n            return undefined;\n          }\n          // if the next step is an array index, this step should be an array.\n          const n = Number(path[cursor + 1]);\n          if (\n            Number.isInteger(n) &&\n            toArrayIndexReference(it[step], n) !== -1\n          ) {\n            it = it[step] = [];\n            continue;\n          }\n          it = it[step] = {};\n          continue;\n        }\n        return undefined;\n      }\n      if (cursor === end) {\n        rem = it[step];\n        it[step] = val;\n        break;\n      }\n      it = it[step];\n    }\n  }\n  return rem;\n}\n\nexport function unsetValueAtPath(target: unknown, path: PathSegments): unknown {\n  if (path.length === 0) {\n    throw new Error('Cannot unset the root object; assign it directly.');\n  }\n  if (typeof target === 'undefined') {\n    throw new TypeError('Cannot unset values on undefined');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let it: any = target;\n  const len = path.length;\n  const end = path.length - 1;\n  let step: PathSegment;\n  let cursor = -1;\n  let rem: unknown;\n  let p: number;\n  while (++cursor < len) {\n    step = path[cursor];\n    if (typeof step !== 'string' && typeof step !== 'number') {\n      throw new TypeError('PathSegments must be a string or a number.');\n    }\n    if (\n      step === '__proto__' ||\n      step === 'constructor' ||\n      step === 'prototype'\n    ) {\n      throw new Error('Attempted prototype pollution disallowed.');\n    }\n    if (Array.isArray(it)) {\n      p = toArrayIndexReference(it, step);\n      if (p >= it.length) return undefined;\n      if (cursor === end) {\n        rem = it[p];\n        delete it[p];\n        break;\n      }\n      it = it[p];\n    } else {\n      if (typeof it[step] === 'undefined') {\n        return undefined;\n      }\n      if (cursor === end) {\n        rem = it[step];\n        delete it[step];\n        break;\n      }\n      it = it[step];\n    }\n  }\n  return rem;\n}\n\nexport function looksLikeFragment(ptr: Pointer): boolean {\n  return typeof ptr === 'string' && ptr.length > 0 && ptr[0] === '#';\n}\n\nexport function pickDecoder(ptr: Pointer): Decoder {\n  return looksLikeFragment(ptr) ? decodeUriFragmentIdentifier : decodePointer;\n}\n\nexport function decodePtrInit(ptr: Pointer | PathSegments): PathSegments {\n  return Array.isArray(ptr)\n    ? ptr.slice(0)\n    : pickDecoder(ptr as Pointer)(ptr as Pointer);\n}\n", "import {\n  Dereference,\n  decodePtrInit,\n  compilePointerDereference,\n  setValueAtPath,\n  encodePointer,\n  encodeUriFragmentIdentifier,\n  pickDecoder,\n  unsetValueAtPath,\n  decodeRelativePointer,\n} from './util';\nimport {\n  JsonStringPointer,\n  UriFragmentIdentifierPointer,\n  Pointer,\n  RelativeJsonPointer,\n  PathSegments,\n  Encoder,\n  JsonStringPointerListItem,\n  UriFragmentIdentifierPointerListItem,\n} from './types';\n\n/**\n * Determines if the value is an object (not null)\n * @param value the value\n * @returns true if the value is a non-null object; otherwise false.\n *\n * @hidden\n */\nfunction isObject(value: unknown): boolean {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Signature of visitor functions, used with [[JsonPointer.visit]] method. Visitors are callbacks invoked for every segment/branch of a target's object graph.\n *\n * Tree descent occurs in-order, breadth first.\n */\nexport type Visitor = (ptr: JsonStringPointer, val: unknown) => void;\n\n/** @hidden */\ninterface Item {\n  obj: unknown;\n  path: PathSegments;\n}\n\n/** @hidden */\nfunction shouldDescend(obj: unknown): boolean {\n  return isObject(obj) && !JsonReference.isReference(obj);\n}\n/** @hidden */\nfunction descendingVisit(\n  target: unknown,\n  visitor: Visitor,\n  encoder: Encoder,\n): void {\n  const distinctObjects = new Map<unknown, JsonPointer>();\n  const q: Item[] = [{ obj: target, path: [] }];\n  while (q.length) {\n    const { obj, path } = q.shift() as Item;\n    visitor(encoder(path), obj);\n    if (shouldDescend(obj)) {\n      distinctObjects.set(\n        obj,\n        new JsonPointer(encodeUriFragmentIdentifier(path)),\n      );\n      if (!Array.isArray(obj)) {\n        const keys = Object.keys(obj as Record<string, unknown>);\n        const len = keys.length;\n        let i = -1;\n        while (++i < len) {\n          const it = (obj as Record<string, unknown>)[keys[i]];\n          if (isObject(it) && distinctObjects.has(it)) {\n            q.push({\n              obj: new JsonReference(distinctObjects.get(it) as JsonPointer),\n              path: path.concat(keys[i]),\n            });\n          } else {\n            q.push({\n              obj: it,\n              path: path.concat(keys[i]),\n            });\n          }\n        }\n      } else {\n        // handleArray\n        let j = -1;\n        const len = obj.length;\n        while (++j < len) {\n          const it = obj[j];\n          if (isObject(it) && distinctObjects.has(it)) {\n            q.push({\n              obj: new JsonReference(distinctObjects.get(it) as JsonPointer),\n              path: path.concat([j + '']),\n            });\n          } else {\n            q.push({\n              obj: it,\n              path: path.concat([j + '']),\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\n/** @hidden */\nconst $ptr = Symbol('pointer');\n/** @hidden */\nconst $frg = Symbol('fragmentId');\n/** @hidden */\nconst $get = Symbol('getter');\n\n/**\n * Represents a JSON Pointer, capable of getting and setting the value on target\n * objects at the pointer's location.\n *\n * While there are static variants for most operations, our recommendation is\n * to use the instance level methods, which enables you avoid repeated\n * compiling/emitting transient accessors. Take a look at the speed comparisons\n * for our justification.\n *\n * In most cases, you should create and reuse instances of JsonPointer within\n * scope that makes sense for your app. We often create constants for frequently\n * used pointers, but your use case may vary.\n *\n * The following is a contrived example showing a function that uses pointers to\n * deal with changes in the structure of data (a version independent function):\n *\n * ```ts\n * import { JsonPointer } from 'json-ptr';\n *\n * export type SupportedVersion = '1.0' | '1.1';\n *\n * interface PrimaryGuestNamePointers {\n *   name: JsonPointer;\n *   surname: JsonPointer;\n *   honorific: JsonPointer;\n * }\n * const versions: Record<SupportedVersion, PrimaryGuestNamePointers> = {\n *   '1.0': {\n *     name: JsonPointer.create('/guests/0/name'),\n *     surname: JsonPointer.create('/guests/0/surname'),\n *     honorific: JsonPointer.create('/guests/0/honorific'),\n *   },\n *   '1.1': {\n *     name: JsonPointer.create('/primary/primaryGuest/name'),\n *     surname: JsonPointer.create('/primary/primaryGuest/surname'),\n *     honorific: JsonPointer.create('/primary/primaryGuest/honorific'),\n *   }\n * };\n *\n * interface Reservation extends Record<string, unknown> {\n *   version?: SupportedVersion;\n * }\n *\n * function primaryGuestName(reservation: Reservation): string {\n *   const pointers = versions[reservation.version || '1.0'];\n *   const name = pointers.name.get(reservation) as string;\n *   const surname = pointers.surname.get(reservation) as string;\n *   const honorific = pointers.honorific.get(reservation) as string;\n *   const names: string[] = [];\n *   if (honorific) names.push(honorific);\n *   if (name) names.push(name);\n *   if (surname) names.push(surname);\n *   return names.join(' ');\n * }\n *\n * // The original layout of a reservation (only the parts relevant to our example)\n * const reservationV1: Reservation = {\n *   guests: [{\n *     name: 'Wilbur',\n *     surname: 'Finkle',\n *     honorific: 'Mr.'\n *   }, {\n *     name: 'Wanda',\n *     surname: 'Finkle',\n *     honorific: 'Mrs.'\n *   }, {\n *     name: 'Wilma',\n *     surname: 'Finkle',\n *     honorific: 'Miss',\n *     child: true,\n *     age: 12\n *   }]\n *   // ...\n * };\n *\n * // The new layout of a reservation (only the parts relevant to our example)\n * const reservationV1_1: Reservation = {\n *   version: '1.1',\n *   primary: {\n *     primaryGuest: {\n *       name: 'Wilbur',\n *       surname: 'Finkle',\n *       honorific: 'Mr.'\n *     },\n *     additionalGuests: [{\n *       name: 'Wanda',\n *       surname: 'Finkle',\n *       honorific: 'Mrs.'\n *     }, {\n *       name: 'Wilma',\n *       surname: 'Finkle',\n *       honorific: 'Miss',\n *       child: true,\n *       age: 12\n *     }]\n *     // ...\n *   }\n *   // ...\n * };\n *\n * console.log(primaryGuestName(reservationV1));\n * console.log(primaryGuestName(reservationV1_1));\n *\n * ```\n *\n * There are many uses for pointers.\n */\nexport class JsonPointer {\n  /** @hidden */\n  private [$ptr]: JsonStringPointer;\n  /** @hidden */\n  private [$frg]: UriFragmentIdentifierPointer;\n  /** @hidden */\n  private [$get]: Dereference;\n\n  /**\n   * Factory function that creates a JsonPointer instance.\n   *\n   * ```ts\n   * const ptr = JsonPointer.create('/deeply/nested/data/0/here');\n   * ```\n   * _or_\n   * ```ts\n   * const ptr = JsonPointer.create(['deeply', 'nested', 'data', 0, 'here']);\n   * ```\n   * @param pointer the pointer or path.\n   */\n  static create(pointer: Pointer | PathSegments): JsonPointer {\n    return new JsonPointer(pointer);\n  }\n\n  /**\n   * Determines if the specified `target`'s object graph has a value at the `pointer`'s location.\n   *\n   * ```ts\n   * const target = {\n   *   first: 'second',\n   *   third: ['fourth', 'fifth', { sixth: 'seventh' }],\n   *   eighth: 'ninth'\n   * };\n   *\n   * console.log(JsonPointer.has(target, '/third/0'));\n   * // true\n   * console.log(JsonPointer.has(target, '/tenth'));\n   * // false\n   * ```\n   *\n   * @param target the target of the operation\n   * @param pointer the pointer or path\n   */\n  static has(\n    target: unknown,\n    pointer: Pointer | PathSegments | JsonPointer,\n  ): boolean {\n    if (typeof pointer === 'string' || Array.isArray(pointer)) {\n      pointer = new JsonPointer(pointer);\n    }\n    return (pointer as JsonPointer).has(target);\n  }\n\n  /**\n   * Gets the `target` object's value at the `pointer`'s location.\n   *\n   * ```ts\n   * const target = {\n   *   first: 'second',\n   *   third: ['fourth', 'fifth', { sixth: 'seventh' }],\n   *   eighth: 'ninth'\n   * };\n   *\n   * console.log(JsonPointer.get(target, '/third/2/sixth'));\n   * // seventh\n   * console.log(JsonPointer.get(target, '/tenth'));\n   * // undefined\n   * ```\n   *\n   * @param target the target of the operation\n   * @param pointer the pointer or path.\n   */\n  static get(\n    target: unknown,\n    pointer: Pointer | PathSegments | JsonPointer,\n  ): unknown {\n    if (typeof pointer === 'string' || Array.isArray(pointer)) {\n      pointer = new JsonPointer(pointer);\n    }\n    return (pointer as JsonPointer).get(target);\n  }\n\n  /**\n   * Sets the `target` object's value, as specified, at the `pointer`'s location.\n   *\n   * ```ts\n   * const target = {\n   *   first: 'second',\n   *   third: ['fourth', 'fifth', { sixth: 'seventh' }],\n   *   eighth: 'ninth'\n   * };\n   *\n   * console.log(JsonPointer.set(target, '/third/2/sixth', 'tenth'));\n   * // seventh\n   * console.log(JsonPointer.set(target, '/tenth', 'eleventh', true));\n   * // undefined\n   * console.log(JSON.stringify(target, null, ' '));\n   * // {\n   * // \"first\": \"second\",\n   * // \"third\": [\n   * //  \"fourth\",\n   * //  \"fifth\",\n   * //  {\n   * //   \"sixth\": \"tenth\"\n   * //  }\n   * // ],\n   * // \"eighth\": \"ninth\",\n   * // \"tenth\": \"eleventh\"\n   * // }\n   * ```\n   *\n   * @param target the target of the operation\n   * @param pointer the pointer or path\n   * @param val a value to write into the object graph at the specified pointer location\n   * @param force indications whether the operation should force the pointer's location into existence in the object graph.\n   *\n   * @returns the prior value at the pointer's location in the object graph.\n   */\n  static set(\n    target: unknown,\n    pointer: Pointer | PathSegments | JsonPointer,\n    val: unknown,\n    force = false,\n  ): unknown {\n    if (typeof pointer === 'string' || Array.isArray(pointer)) {\n      pointer = new JsonPointer(pointer);\n    }\n    return (pointer as JsonPointer).set(target, val, force);\n  }\n\n  /**\n   * Removes the `target` object's value at the `pointer`'s location.\n   *\n   * ```ts\n   * const target = {\n   *   first: 'second',\n   *   third: ['fourth', 'fifth', { sixth: 'seventh' }],\n   *   eighth: 'ninth'\n   * };\n   *\n   * console.log(JsonPointer.unset(target, '/third/2/sixth'));\n   * // seventh\n   * console.log(JsonPointer.unset(target, '/tenth'));\n   * // undefined\n   * console.log(JSON.stringify(target, null, ' '));\n   * // {\n   * // \"first\": \"second\",\n   * // \"third\": [\n   * //  \"fourth\",\n   * //  \"fifth\",\n   * //  {}\n   * // ],\n   * // \"eighth\": \"ninth\",\n   * // }\n   * ```\n   * @param target the target of the operation\n   * @param pointer the pointer or path\n   *\n   * @returns the value that was removed from the object graph.\n   */\n  static unset(\n    target: unknown,\n    pointer: Pointer | PathSegments | JsonPointer,\n  ): unknown {\n    if (typeof pointer === 'string' || Array.isArray(pointer)) {\n      pointer = new JsonPointer(pointer);\n    }\n    return (pointer as JsonPointer).unset(target);\n  }\n\n  /**\n   * Decodes the specified pointer into path segments.\n   * @param pointer a string representation of a JSON Pointer\n   */\n  static decode(pointer: Pointer): PathSegments {\n    return pickDecoder(pointer)(pointer);\n  }\n\n  /**\n   * Evaluates the target's object graph, calling the specified visitor for every unique pointer location discovered while walking the graph.\n   * @param target the target of the operation\n   * @param visitor a callback function invoked for each unique pointer location in the object graph\n   * @param fragmentId indicates whether the visitor should receive fragment identifiers or regular pointers\n   */\n  static visit(target: unknown, visitor: Visitor, fragmentId = false): void {\n    descendingVisit(\n      target,\n      visitor,\n      fragmentId ? encodeUriFragmentIdentifier : encodePointer,\n    );\n  }\n\n  /**\n   * Evaluates the target's object graph, returning a [[JsonStringPointerListItem]] for each location in the graph.\n   * @param target the target of the operation\n   */\n  static listPointers(target: unknown): JsonStringPointerListItem[] {\n    const res: JsonStringPointerListItem[] = [];\n    descendingVisit(\n      target,\n      (pointer, value): void => {\n        res.push({ pointer, value });\n      },\n      encodePointer,\n    );\n    return res;\n  }\n\n  /**\n   * Evaluates the target's object graph, returning a [[UriFragmentIdentifierPointerListItem]] for each location in the graph.\n   * @param target the target of the operation\n   */\n  static listFragmentIds(\n    target: unknown,\n  ): UriFragmentIdentifierPointerListItem[] {\n    const res: UriFragmentIdentifierPointerListItem[] = [];\n    descendingVisit(\n      target,\n      (fragmentId, value): void => {\n        res.push({ fragmentId, value });\n      },\n      encodeUriFragmentIdentifier,\n    );\n    return res;\n  }\n\n  /**\n   * Evaluates the target's object graph, returning a Record&lt;Pointer, unknown> populated with pointers and the corresponding values from the graph.\n   * @param target the target of the operation\n   * @param fragmentId indicates whether the results are populated with fragment identifiers rather than regular pointers\n   */\n  static flatten(\n    target: unknown,\n    fragmentId = false,\n  ): Record<Pointer, unknown> {\n    const res: Record<Pointer, unknown> = {};\n    descendingVisit(\n      target,\n      (p, v) => {\n        res[p] = v;\n      },\n      fragmentId ? encodeUriFragmentIdentifier : encodePointer,\n    );\n    return res;\n  }\n\n  /**\n   * Evaluates the target's object graph, returning a Map&lt;Pointer,unknown>  populated with pointers and the corresponding values form the graph.\n   * @param target the target of the operation\n   * @param fragmentId indicates whether the results are populated with fragment identifiers rather than regular pointers\n   */\n  static map(target: unknown, fragmentId = false): Map<Pointer, unknown> {\n    const res = new Map<Pointer, unknown>();\n    descendingVisit(\n      target,\n      res.set.bind(res),\n      fragmentId ? encodeUriFragmentIdentifier : encodePointer,\n    );\n    return res;\n  }\n\n  /**\n   * The pointer's decoded path segments.\n   */\n  public readonly path: PathSegments;\n\n  /**\n   * Creates a new instance.\n   * @param ptr a string representation of a JSON Pointer, or a decoded array of path segments.\n   */\n  constructor(ptr: Pointer | PathSegments) {\n    this.path = decodePtrInit(ptr);\n  }\n\n  /**\n   * Gets the target object's value at the pointer's location.\n   * @param target the target of the operation\n   */\n  get(target: unknown): unknown {\n    if (!this[$get]) {\n      this[$get] = compilePointerDereference(this.path);\n    }\n    return this[$get](target);\n  }\n\n  /**\n   * Sets the target object's value, as specified, at the pointer's location.\n   *\n   * If any part of the pointer's path does not exist, the operation aborts\n   * without modification, unless the caller indicates that pointer's location\n   * should be created.\n   *\n   * @param target the target of the operation\n   * @param value the value to set\n   * @param force indicates whether the pointer's location should be created if it doesn't already exist.\n   */\n  set(target: unknown, value: unknown, force = false): unknown {\n    return setValueAtPath(target, value, this.path, force);\n  }\n\n  /**\n   * Removes the target object's value at the pointer's location.\n   * @param target the target of the operation\n   *\n   * @returns the value that was removed from the object graph.\n   */\n  unset(target: unknown): unknown {\n    return unsetValueAtPath(target, this.path);\n  }\n\n  /**\n   * Determines if the specified target's object graph has a value at the pointer's location.\n   * @param target the target of the operation\n   */\n  has(target: unknown): boolean {\n    return typeof this.get(target) !== 'undefined';\n  }\n\n  /**\n   * Gets the value in the object graph that is the parent of the pointer location.\n   * @param target the target of the operation\n   */\n  parent(target: unknown): unknown {\n    const p = this.path;\n    if (p.length == 1) return undefined;\n    const parent = new JsonPointer(p.slice(0, p.length - 1));\n    return parent.get(target);\n  }\n\n  /**\n   * Creates a new JsonPointer instance, pointing to the specified relative location in the object graph.\n   * @param ptr the relative pointer (relative to this)\n   * @returns A new instance that points to the relative location.\n   */\n  relative(ptr: RelativeJsonPointer): JsonPointer {\n    const p = this.path;\n    const decoded = decodeRelativePointer(ptr) as string[];\n    const n = parseInt(decoded[0]);\n    if (n > p.length) throw new Error('Relative location does not exist.');\n    const r = p.slice(0, p.length - n).concat(decoded.slice(1));\n    if (decoded[0][decoded[0].length - 1] == '#') {\n      // It references the path segment/name, not the value\n      const name = r[r.length - 1] as string;\n      throw new Error(\n        `We won't compile a pointer that will always return '${name}'. Use JsonPointer.rel(target, ptr) instead.`,\n      );\n    }\n    return new JsonPointer(r);\n  }\n\n  /**\n   * Resolves the specified relative pointer path against the specified target object, and gets the target object's value at the relative pointer's location.\n   * @param target the target of the operation\n   * @param ptr the relative pointer (relative to this)\n   * @returns the value at the relative pointer's resolved path; otherwise undefined.\n   */\n  rel(target: unknown, ptr: RelativeJsonPointer): unknown {\n    const p = this.path;\n    const decoded = decodeRelativePointer(ptr) as string[];\n    const n = parseInt(decoded[0]);\n    if (n > p.length) {\n      // out of bounds\n      return undefined;\n    }\n    const r = p.slice(0, p.length - n).concat(decoded.slice(1));\n    const other = new JsonPointer(r);\n    if (decoded[0][decoded[0].length - 1] == '#') {\n      // It references the path segment/name, not the value\n      const name = r[r.length - 1] as string;\n      const parent = other.parent(target);\n      return Array.isArray(parent) ? parseInt(name, 10) : name;\n    }\n    return other.get(target);\n  }\n\n  /**\n   * Creates a new instance by concatenating the specified pointer's path onto this pointer's path.\n   * @param ptr the string representation of a pointer, it's decoded path, or an instance of JsonPointer indicating the additional path to concatenate onto the pointer.\n   */\n  concat(ptr: JsonPointer | Pointer | PathSegments): JsonPointer {\n    return new JsonPointer(\n      this.path.concat(\n        ptr instanceof JsonPointer ? ptr.path : decodePtrInit(ptr),\n      ),\n    );\n  }\n\n  /**\n   * This pointer's JSON Pointer encoded string representation.\n   */\n  get pointer(): JsonStringPointer {\n    if (this[$ptr] === undefined) {\n      this[$ptr] = encodePointer(this.path);\n    }\n    return this[$ptr];\n  }\n\n  /**\n   * This pointer's URI fragment identifier encoded string representation.\n   */\n  get uriFragmentIdentifier(): UriFragmentIdentifierPointer {\n    if (!this[$frg]) {\n      this[$frg] = encodeUriFragmentIdentifier(this.path);\n    }\n    return this[$frg];\n  }\n\n  /**\n   * Emits the JSON Pointer encoded string representation.\n   */\n  toString(): string {\n    return this.pointer;\n  }\n}\n\n/** @hidden */\nconst $pointer = Symbol('pointer');\n\n/**\n * A reference to a location in an object graph.\n *\n * This type is used by this module to break cycles in an object graph and to\n * reference locations that have already been visited when enumerating pointers.\n */\nexport class JsonReference {\n  /**\n   * Determines if the specified `candidate` is a JsonReference.\n   * @param candidate the candidate\n   */\n  static isReference(candidate: unknown): candidate is JsonReference {\n    if (!candidate) return false;\n    const ref = candidate as unknown as JsonReference;\n    return typeof ref.$ref === 'string' && typeof ref.resolve === 'function';\n  }\n\n  /** @hidden */\n  private readonly [$pointer]: JsonPointer;\n\n  /**\n   * A reference to a position if an object graph.\n   */\n  public readonly $ref: UriFragmentIdentifierPointer;\n\n  /**\n   * Creates a new instance.\n   * @param pointer a JSON Pointer for the reference.\n   */\n  constructor(pointer: JsonPointer | Pointer | PathSegments) {\n    this[$pointer] =\n      pointer instanceof JsonPointer ? pointer : new JsonPointer(pointer);\n    this.$ref = this[$pointer].uriFragmentIdentifier;\n  }\n\n  /**\n   * Resolves the reference against the `target` object, returning the value at\n   * the referenced pointer's location.\n   * @param target the target object\n   */\n  resolve(target: unknown): unknown {\n    return this[$pointer].get(target);\n  }\n\n  /**\n   * Gets the reference's pointer.\n   */\n  pointer(): JsonPointer {\n    return this[$pointer];\n  }\n\n  /**\n   * Gets the reference pointer's string representation (a URI fragment identifier).\n   */\n  toString(): string {\n    return this.$ref;\n  }\n}\n", "import type m from 'mithril';\nimport { selectionFactory } from '../factories/selectionFactory.ts';\nimport type { OctironSelectArgs, OctironSelection, SelectView, TypeDefs } from '../types/octiron.ts';\nimport type { EntityState } from '../types/store.ts';\nimport type { Store } from \"../store.ts\";\n\nexport type ActionRendererRef = {\n  submitting: boolean;\n  submitResult?: EntityState;\n  store: Store;\n  typeDefs: TypeDefs;\n};\n\nexport type ActionStateRendererAttrs = {\n  type: 'initial' | 'success' | 'failure';\n  children?: m.Children;\n  selector?: string;\n  args?: OctironSelectArgs;\n  view?: SelectView;\n  refs: ActionRendererRef;\n};\n\nexport const ActionStateRenderer: m.ClosureComponent<ActionStateRendererAttrs> = () => {\n  let submitResult: EntityState | undefined;\n  let o: OctironSelection | undefined;\n\n  function setInstance(attrs: ActionStateRendererAttrs) {\n    if (typeof attrs.refs.submitResult === 'undefined') {\n        submitResult = undefined;\n      o = undefined;\n    } else if (\n      typeof submitResult === 'undefined' ||\n      attrs.refs.submitResult.ok !== submitResult.ok ||\n      attrs.refs.submitResult.status !== submitResult.status ||\n      attrs.refs.submitResult.value !== submitResult.value\n    ) {\n      submitResult = attrs.refs.submitResult;\n\n      o = selectionFactory({\n        value: submitResult.value,\n        store: attrs.refs.store,\n        typeDefs: attrs.refs.typeDefs,\n      });\n    }\n  }\n\n  return {\n    oninit: ({ attrs }) => {\n      setInstance(attrs);\n    },\n    onbeforeupdate: ({ attrs }) => {\n      setInstance(attrs);\n    },\n    view: ({ attrs: { type, selector, args, view }, children }) => {\n      if (type === 'initial' && typeof submitResult === 'undefined') {\n        return children;\n      } else if (\n        typeof submitResult === 'undefined' || typeof o !== 'function'\n      ) {\n        return null;\n      }\n\n      const shouldRender = (type === 'success' && submitResult.ok) ||\n        (type === 'failure' && !submitResult.ok);\n\n      if (shouldRender && selector != null && args != null && view != null) {\n        return o.select(selector, args, view);\n      } else if (shouldRender && typeof view === 'function') {\n        return view(o);\n      } else if (shouldRender && typeof args !== 'undefined') {\n        return o.present(args);\n      }\n\n      return null;\n    },\n  };\n};\n", "import uriTemplates from 'uri-templates';\nimport type { Store } from \"../store.ts\";\nimport type { JSONObject, JSONValue, SCMAction } from '../types/common.ts';\nimport { isJSONObject } from './isJSONObject.ts';\n\n\nexport type SubmitDetails = {\n  url: string;\n  method: string;\n  contentType?: string;\n  encodingType?: string;\n  body?: string;\n};\n\n/**\n * Gets the details on how to perform a submission\n * based off an action, payload and other context.\n *\n * @param args.payload The current payload value.\n * @param args.action The schema.org styled action object.\n * @param args.store The Octiron store.\n */\nexport function getSubmitDetails({\n  payload,\n  action,\n  store,\n}: {\n  payload: JSONObject;\n  action: SCMAction;\n  store: Store;\n}): SubmitDetails {\n  let urlTemplate: string | undefined;\n  let body: string | undefined;\n  let method: string = 'get';\n  let contentType: string | undefined;\n  let encodingType: string | undefined;\n  let target = action['https://schema.org/target'];\n\n  if (Array.isArray(target)) {\n    for (const item of target) {\n      if (item === 'string') {\n        target = item;\n        break;\n      } else if (\n        isJSONObject(target) && (\n          target['https://schema.org/contentType'] == null || (\n            target['https://schema.org/contentType'] === 'mutipart/form-data' ||\n            target['https://schema.org/contentType'] === 'application/ld+json'\n          )\n        )\n      ) {\n        target = item;\n        break;\n      }\n    }\n  }\n\n  if (typeof target === 'string') {\n    urlTemplate = target;\n  } else if (isJSONObject(target)) {\n    if (typeof target['https://schema.org/urlTemplate'] === 'string') {\n      urlTemplate = target['https://schema.org/urlTemplate'];\n    }\n\n    if (typeof target['https://schema.org/httpMethod'] === 'string') {\n      method = target['https://schema.org/httpMethod'].toLowerCase();\n    }\n\n    if (typeof target['https://schema.org/contentType'] === 'string') {\n      contentType = target['https://schema.org/contentType'];\n    }\n\n    if (typeof target['https://schema.org/encodingType'] === 'string') {\n      encodingType = target['https://schema.org/encodingType'];\n    }\n  }\n\n  if (typeof urlTemplate !== 'string') {\n    throw new Error('Action has invalid https://schema.org/target');\n  }\n\n  const template = uriTemplates(urlTemplate);\n\n  // deno-lint-ignore no-explicit-any\n  const url: string = template.fill(payload as any);\n\n  // only add body if supporting HTTP method\n  if (method !== 'get' && method !== 'delete') {\n    const json: Record<string, JSONValue> = {};\n\n    for (const [key, value] of Object.entries(payload)) {\n      json[store.expand(key)] = value;\n    }\n  }\n\n  return {\n    url,\n    method,\n    contentType,\n    encodingType,\n    body,\n  };\n}\n", "import m from 'mithril';\nimport { isBrowserRender } from \"../consts.ts\";\n\n/**\n * @description\n * Calls Mithril's redraw function if the window object exists.\n */\nexport function mithrilRedraw(): void {\n  if (isBrowserRender) {\n    m.redraw();\n  }\n}\n", "\nexport const isBrowserRender = typeof window !== 'undefined';\n", "import { JsonPointer } from 'json-ptr';\nimport m from 'mithril';\nimport { ActionSelectionRenderer } from \"../renderers/ActionSelectionRenderer.ts\";\nimport { SelectionRenderer } from \"../renderers/SelectionRenderer.ts\";\nimport type { Store } from \"../store.ts\";\nimport type { JSONArray, JSONObject, JSONValue, SCMPropertyValueSpecification } from \"../types/common.ts\";\nimport type { ActionSelectView, BaseAttrs, EditComponent, Interceptor, Octiron, OctironAction, OctironActionSelection, OctironActionSelectionArgs, OctironEditArgs, OctironPresentArgs, OctironSelectArgs, OctironSelection, OnChange, PayloadValueMapper, PresentComponent, Selector, SelectView, TypeDefs, UpdateArgs } from \"../types/octiron.ts\";\nimport { getComponent } from \"../utils/getComponent.ts\";\nimport { getValueType } from \"../utils/getValueType.ts\";\nimport { isJSONObject } from \"../utils/isJSONObject.ts\";\nimport { mithrilRedraw } from \"../utils/mithrilRedraw.ts\";\nimport { unravelArgs } from \"../utils/unravelArgs.ts\";\nimport { octironFactory } from \"./octironFactory.ts\";\n\n\nexport type OnActionSelectionSubmit = () => Promise<void>;\n\nexport type OnActionSelectionUpdate = (\n  pointer: string,\n  value: JSONValue,\n  args?: UpdateArgs,\n) => void;\n\nexport type ActionSelectionInternals = {\n  submitting: boolean;\n  type: string | string[];\n  datatype: string;\n  pointer: string;\n  name: string;\n  value: JSONValue;\n  actionValue?: JSONValue;\n  entity: Octiron;\n  action: OctironAction;\n  parent: OctironAction | OctironActionSelection;\n  octiron: OctironSelection;\n  store: Store;\n  spec?: SCMPropertyValueSpecification;\n  typeDefs: TypeDefs;\n  onSubmit: OnActionSelectionSubmit;\n  onUpdate: OnActionSelectionUpdate;\n};\n\nexport type OctironActionSelectionHooks = {\n  _updateArgs(args: OctironActionSelectionArgs): void;\n  _updateInternals(internals: Partial<ActionSelectionInternals>): void;\n}\n\nexport function actionSelectionFactory<\n  // deno-lint-ignore no-explicit-any\n  Attrs extends Record<string, any> = Record<string, any>\n>(\n  internals: ActionSelectionInternals,\n  args: OctironActionSelectionArgs<Attrs>,\n): OctironActionSelection & OctironActionSelectionHooks {\n  const factoryArgs = Object.assign({}, args);\n  const uniqueId = internals.store.key();\n\n  const refs = Object.assign({}, args);\n\n  function onUpdate(value: JSONObject) {\n    return internals.onUpdate(internals.pointer, value, {\n      throttle: refs.throttle,\n      debounce: refs.debounce,\n      submitOnChange: refs.submitOnChange,\n    });\n  }\n\n  const self = octironFactory<OctironActionSelection & OctironActionSelectionHooks>();\n\n  self.octironType = 'action-selection';\n  self.readonly = internals.spec == null ? true : (internals.spec.readonlyValue || false);\n  self.store = internals.store;\n  self.id = uniqueId;\n  self.inputName = internals.datatype;\n  self.submitting = internals.submitting;\n  self.value = internals.value ?? args.initialValue;\n  self.action = internals.action;\n\n  function onSelectionUpdate(\n    pointer: string,\n    value: JSONValue,\n    args?: UpdateArgs,\n    interceptor?: Interceptor,\n  ) {\n    const prev = self.value as JSONObject;\n\n    if (!isJSONObject(prev)) {\n      console.warn(`Non object action change intercepted.`);\n      return;\n    }\n\n    let next: Partial<JSONObject> = Object.assign({}, prev);\n    const ptr = JsonPointer.create(pointer);\n\n    if (value == null) {\n      ptr.unset(next);\n    } else {\n      ptr.set(next, value, true);\n    }\n\n    if (typeof interceptor === 'function') {\n      next = interceptor(next, prev, internals.actionValue as JSONObject);\n    }\n\n    internals.onUpdate(internals.pointer, next, args);\n  }\n\n  self.update = async function(\n    arg1: PayloadValueMapper<JSONObject> | JSONObject,\n    args?: UpdateArgs,\n  ): Promise<void> {\n    const value = self.value;\n\n    if (!isJSONObject(value)) {\n      throw new Error(`Cannot call update on a non object selection instance`);\n    }\n\n    if (typeof arg1 === 'function') {\n      onUpdate(arg1(value));\n    } else if (arg1 != null) {\n      onUpdate(arg1);\n    }\n\n    if (args?.submit || args?.submitOnChange) {\n      await internals.onSubmit();\n    } else {\n      mithrilRedraw();\n    }\n  };\n\n  self.submit = function (): Promise<void> {\n    return internals.onSubmit();\n  };\n\n  self.root = function (\n    arg1?: Selector | OctironSelectArgs | SelectView,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ): m.Children {\n    let selector: string;\n    const [childSelector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    if (childSelector == null) {\n      selector = internals.store.rootIRI;\n    } else {\n      selector = `${internals.store.rootIRI} ${childSelector}`;\n    }\n\n    return m(SelectionRenderer, {\n      selector,\n      args,\n      view,\n      internals: {\n        store: internals.store,\n        typeDefs: args?.typeDefs || factoryArgs?.typeDefs || internals.typeDefs,\n        parent: self as unknown as OctironAction,\n      },\n    });\n  };\n\n  self.select = function (\n    arg1: Selector,\n    arg2?: OctironActionSelectionArgs | ActionSelectView,\n    arg3?: ActionSelectView,\n  ): m.Children {\n    if (!isJSONObject(self.value)) {\n      return null;\n    }\n\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    const onUpdate: OnActionSelectionUpdate = (\n      pointer,\n      value,\n      updateArgs,\n    ) => {\n      onSelectionUpdate(\n        pointer,\n        value,\n        updateArgs,\n        args.interceptor,\n      );\n    }\n\n    return m(\n      ActionSelectionRenderer,\n      {\n        internals: {\n          submitting: internals.submitting,\n          entity: internals.entity,\n          action: internals.action,\n          parent: self as unknown as OctironActionSelection,\n          store: internals.store,\n          typeDefs: internals.typeDefs,\n          onSubmit: internals.onSubmit,\n          onUpdate,\n        },\n        selector,\n        value: self.value,\n        actionValue: internals.actionValue as JSONObject,\n        args,\n        view,\n      },\n    );\n  };\n\n  self.enter = function(\n    arg1: Selector,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ): m.Children {\n    const [selector, args, view] = unravelArgs(arg1, arg2, arg3);\n\n    return m(SelectionRenderer, {\n      selector,\n      args,\n      view,\n      internals: {\n        store: internals.store,\n        typeDefs: args?.typeDefs || factoryArgs?.typeDefs || internals.typeDefs,\n        parent: self as unknown as OctironAction,\n      },\n    });\n  };\n\n  self.present = (\n    args?: OctironPresentArgs<BaseAttrs>,\n  ): m.Children => {\n    let attrs: BaseAttrs = {} as BaseAttrs;\n    let firstPickComponent: PresentComponent<JSONObject, BaseAttrs> | undefined;\n    let fallbackComponent: PresentComponent<JSONObject> | undefined;\n\n    if (args?.attrs != null) {\n      attrs = args.attrs as BaseAttrs;\n    } else if (factoryArgs?.attrs != null) {\n      attrs = factoryArgs.attrs as unknown as BaseAttrs;\n    }\n\n    if (args?.component != null) {\n      firstPickComponent = args.component as PresentComponent<JSONObject, BaseAttrs>;\n    } else if (args?.component !== null && factoryArgs?.component != null) {\n      firstPickComponent = factoryArgs.component as unknown as PresentComponent<\n        JSONObject,\n        BaseAttrs\n      >;\n    }\n\n    if (args?.fallbackComponent != null) {\n      fallbackComponent = args.fallbackComponent as unknown as PresentComponent<JSONObject>;\n    } else if (factoryArgs?.fallbackComponent != null) {\n      fallbackComponent = factoryArgs.fallbackComponent as unknown as PresentComponent<JSONObject>;\n    }\n\n    const component = getComponent({\n      style: \"present\",\n      type: getValueType(internals.value),\n      firstPickComponent: firstPickComponent as unknown as PresentComponent,\n      fallbackComponent: fallbackComponent as unknown as PresentComponent,\n      typeDefs: args?.typeDefs || internals.typeDefs || {},\n    });\n\n    if (component == null) {\n      return null;\n    }\n\n    return m(component as PresentComponent<JSONValue, BaseAttrs>, {\n      o: self as unknown as OctironActionSelection,\n      renderType: \"present\",\n      value: self.value,\n      attrs,\n    });\n  };\n\n  self.edit = function(\n    args?: OctironEditArgs<BaseAttrs>,\n  ): m.Children {\n    if (self.readonly) {\n      return self.present(args as OctironPresentArgs<BaseAttrs>);\n    }\n\n    let attrs: BaseAttrs = {} as BaseAttrs;\n    let firstPickComponent: PresentComponent<JSONObject, BaseAttrs> | undefined;\n    let fallbackComponent: PresentComponent<JSONObject> | undefined;\n\n    if (args?.attrs != null) {\n      attrs = args.attrs as BaseAttrs;\n    } else if (factoryArgs?.attrs != null) {\n      attrs = factoryArgs.attrs as unknown as BaseAttrs;\n    }\n\n    if (args?.component != null) {\n      firstPickComponent = args.component as PresentComponent<JSONObject, BaseAttrs>;\n    } else if (args?.component !== null && factoryArgs?.component != null) {\n      firstPickComponent = factoryArgs.component as unknown as PresentComponent<\n        JSONObject,\n        BaseAttrs\n      >;\n    }\n\n    if (args?.fallbackComponent != null) {\n      fallbackComponent = args.fallbackComponent as unknown as PresentComponent<JSONObject>;\n    } else if (factoryArgs?.fallbackComponent != null) {\n      fallbackComponent = factoryArgs.fallbackComponent as unknown as PresentComponent<JSONObject>;\n    }\n\n    const component = getComponent({\n      style: \"edit\",\n      datatype: internals.datatype,\n      type: getValueType(self.value),\n      firstPickComponent,\n      fallbackComponent,\n      typeDefs: args?.typeDefs || internals.typeDefs || {},\n    });\n\n    if (component == null) {\n      return null;\n    }\n\n    // don't apply intercepter fn to edit calls.\n    // deno-lint-ignore no-explicit-any\n    const onChange: OnChange<any> = (value, args) => {\n      return internals.onUpdate(internals.pointer, value, args);\n    }\n\n    return m(component as EditComponent<JSONValue, BaseAttrs>, {\n      o: self as unknown as OctironActionSelection,\n      required: true,\n      readonly: false,\n      renderType: \"edit\",\n      name: self.inputName,\n      value: self.value,\n      attrs,\n      onchange: onChange,\n      onChange,\n    });\n  };\n\n  self.default = function (\n    args?: OctironPresentArgs | OctironEditArgs,\n  ): m.Children {\n    return self.edit(Object.assign({ component: null }, args));\n  };\n\n  self.initial = function (children: m.Children) {\n    return internals.action.initial(children);\n  };\n\n  self.success = function (\n    arg1?: Selector | OctironSelectArgs | SelectView,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ) {\n    return internals.action.success(\n      arg1 as Selector,\n      arg2 as OctironSelectArgs,\n      arg3 as SelectView,\n    );\n  };\n\n  self.failure = function (\n    arg1?: Selector | OctironSelectArgs | SelectView,\n    arg2?: OctironSelectArgs | SelectView,\n    arg3?: SelectView,\n  ) {\n    return internals.action.failure(\n      arg1 as Selector,\n      arg2 as OctironSelectArgs,\n      arg3 as SelectView,\n    );\n  };\n\n  self.remove = function (\n    args: UpdateArgs = {},\n  ) {\n    internals.onUpdate(\n      internals.pointer,\n      null as unknown as JSONObject,\n      args,\n    );\n  };\n\n  self.append = function (\n    termOrType: string,\n    value: JSONValue = {},\n    args: UpdateArgs = {},\n  ) {\n    const type = internals.store.expand(termOrType);\n\n    if (isJSONObject(self.value)) {\n      const prevValue = self.value[type];\n      let nextValue: JSONArray = [];\n\n      if (prevValue != null && !Array.isArray(prevValue)) {\n        nextValue.push(prevValue);\n      } else if (Array.isArray(prevValue)) {\n        nextValue = [...prevValue];\n      }\n\n      nextValue.push(value);\n\n      return internals.onUpdate(internals.pointer, {\n        ...self.value,\n        [type]: nextValue,\n      }, args);\n    }\n  };\n\n  self._updateInternals = function (incomming: Partial<ActionSelectionInternals>) {\n    for (const [key, value] of Object.entries(incomming)) {\n      // deno-lint-ignore no-explicit-any\n      (internals as Record<string, any>)[key] = value;\n    }\n  };\n\n  self._updateArgs = function (args: OctironActionSelectionArgs) {\n    for (const [key, value] of Object.entries(args)) {\n      // deno-lint-ignore no-explicit-any\n      (factoryArgs as Record<string, any>)[key] = value;\n    }\n  };\n\n  return self as unknown as OctironActionSelection & OctironActionSelectionHooks;\n}\n", "import type { Children } from \"mithril\";\nimport type { Octiron } from \"@octiron/octiron\";\nimport type { Mutable } from \"../types/common.ts\";\nimport type { OctironSelectArgs, Predicate, Selector, SelectView } from \"../types/octiron.ts\";\nimport { unravelArgs } from \"../utils/unravelArgs.ts\";\n\n\nexport function octironFactory<O extends Octiron>() {\n  const self: Mutable<O> = function(\n    predicate: Predicate,\n    children: Children,\n  ): Children {\n    const passes = predicate(self as O);\n\n    if (passes) {\n      return children;\n    }\n\n    return null;\n  } as O;\n\n  self.isOctiron = true;\n\n  self.not = function(\n    predicate: Predicate,\n    children: Children,\n  ): Children {\n    if (self == null) {\n      return null;\n    }\n\n    const passes = predicate(self as O);\n\n    if (!passes) {\n      return children;\n    }\n\n    return null;\n  };\n\n  return self;\n}\n", "\n/**\n * @description\n * Espects a list of json pointer parts and returns a json pointer.\n */\nexport function escapeJSONPointerParts(...parts: string[]): string {\n  const escaped = parts\n    .map((part) => part.replace(/~/g, '~0').replace(/\\//g, '~1'))\n    .join('/');\n\n  return `${escaped}`;\n}\n", "import type { IterableJSONLD, JSONArray } from '../types/common.ts';\n\n\n/**\n * @description\n * Returns true if a json-ld value is an array or has an iterable value,\n * i.e.: an object with an `@list` or `@set` array value.\n *\n * This function returns an empty array in the cases where a non-iterable value\n * is given.\n *\n * @param {JSONValue} value - A json-ld value\n */\nexport function getIterableValue(value: IterableJSONLD): JSONArray {\n  if (Array.isArray(value)) {\n    return value;\n  } else if (Array.isArray(value['@list'])) {\n    return value['@list'];\n  } else if (Array.isArray(value['@set'])) {\n    return value['@set'];\n  }\n\n  return [];\n}\n", "import type { IRIObject, JSONObject, JSONValue } from \"../types/common.ts\";\nimport { isJSONObject } from \"./isJSONObject.ts\";\n\n\n/**\n * @description\n * Returns true if the given value is a JSON object with a JSON-ld @id value.\n *\n * @param value Any value which should come from a JSON source.\n */\nexport function isIRIObject<\n  Properties extends JSONObject = JSONObject\n>(value: JSONValue): value is IRIObject<Properties> {\n  return isJSONObject(value)\n    && typeof value['@id'] === 'string'\n    && value['@id'] !== '';\n}\n", "import type { IterableJSONLD, JSONValue } from '../types/common.ts';\nimport { isJSONObject } from \"./isJSONObject.ts\";\n\n/**\n * @description\n * Returns true if a json-ld value is an array or has an iterable value,\n * i.e.: an object with an `@list` or `@set` array value.\n *\n * @param {JSONValue} value - A json-ld value\n */\nexport function isIterable(value: JSONValue): value is IterableJSONLD {\n  if (Array.isArray(value)) {\n    return true;\n  } else if (isJSONObject(value)) {\n    if (Array.isArray(value[\"@list\"])) {\n      return true;\n    } else if (Array.isArray(value[\"@set\"])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "import type { IRIObject, JSONObject } from '../types/common.ts';\n\n/**\n * @description\n * Some JSON-ld objects contain special JSON-ld values, such as @type which\n * can inform the software on what to expect when retrieving the object but\n * otherwise require fetching an entity from an endpoint to get the values\n * they relate to. For Octiron's purposes these are considered metadata objects.\n *\n * Objects containing `@value`, `@list`, `@set` are not considered metadata\n * objects as these properties references concrete values.\n *\n * @param value - The JSON object to check for non special properties in.\n */\nexport function isMetadataObject(value: JSONObject): value is IRIObject {\n  const keys = Object.keys(value);\n\n  if (keys.length === 0) {\n    return false;\n  }\n\n  for (const term of keys) {\n    if (!term.startsWith(\"@\") ||\n      term === '@value' ||\n      term === '@list' ||\n      term === '@set') {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import type { JSONObject, ValueObject } from '../types/common.ts';\n\n/**\n * @description\n * A value object contains a `@value` value. Often this is used to provide\n * further information about the value like what `@type` it holds, allowing\n * filters to be applied to the referenced value.\n *\n * @param value - A JSON value.\n */\nexport function isValueObject(\n  value: JSONObject,\n): value is ValueObject {\n  return typeof value['@value'] !== 'undefined';\n}\n", "import type { Store } from \"../store.ts\";\n\nexport type SelectorObject = {\n  subject: string;\n  filter?: string;\n};\n\nconst selectorRe = /\\s*(?<subject>([^\\[\\s]+))(\\[(?<filter>([^\\]])+)\\])?\\s*/g;\n\n/**\n * @description\n * Parses a selector string producing a selector list\n * The subject value of a selector could be an iri or a type depending on the\n * outer context.\n *\n * @param selector - The selector string to parse.\n */\nexport function parseSelectorString(selector: string, store: Store): SelectorObject[] {\n  let match: RegExpExecArray | null;\n  const selectors: SelectorObject[] = [];\n\n  while ((match = selectorRe.exec(selector))) {\n    const subject = match.groups?.subject;\n    const filter = match.groups?.filter;\n\n    if (typeof filter === 'string' && typeof subject === 'string') {\n      selectors.push({\n        subject: store.expand(subject),\n        filter,\n      });\n    } else if (typeof subject === 'string') {\n      selectors.push({\n        subject: store.expand(subject),\n      });\n    } else {\n      throw new Error(`Invalid selector: ${selector}`);\n    }\n  }\n\n  return selectors;\n}\n", "\nimport type { Store } from \"../store.ts\";\nimport type { JSONObject, SCMPropertyValueSpecification } from '../types/common.ts';\n\nconst httpRe = /^https?\\:\\/\\//;\nconst scmCtxRe = /^https?\\:\\/\\/schema\\.org/;\nconst scmTypeRe = /^https?\\:\\/\\/schema\\.org\\/(?<term>(readonlyValue|valueName|valueRequired|defaultValue|minValue|maxValue|stepValue|valuePattern|multipleValues|valueMinLength|valueMaxLength))/;\n\nexport function resolvePropertyValueSpecification({\n  spec,\n  store,\n}: {\n  spec: JSONObject;\n  store: Store;\n}) {\n  const pvs: SCMPropertyValueSpecification = {\n    readonlyValue: false,\n    valueRequired: false,\n  };\n\n  let scmAlias: [string, string] | undefined;\n  const scmVocab = store.vocab == null ? false : scmCtxRe.test(store.vocab);\n\n  for (const [key, value] of Object.entries(store.aliases)) {\n    if (scmCtxRe.test(value)) {\n      scmAlias = [key, value];\n\n      break;\n    }\n  }\n\n  for (const [term, value] of Object.entries(spec)) {\n    let type;\n\n    if (!httpRe.test(term)) {\n      if (scmVocab && !term.includes(':')) {\n        type = `${store.vocab}${term}`;\n      } else if (scmAlias && term.startsWith(`${scmAlias[0]}:`)) {\n        type = term.replace(`${scmAlias[0]}:`, scmAlias[1]);\n      }\n    } else {\n      type = term;\n    }\n\n    if (!type) {\n      continue;\n    }\n\n    const result = scmTypeRe.exec(type);\n\n    if (result?.groups?.term) {\n      (pvs as JSONObject)[result.groups.term] = value;\n    }\n  }\n\n  return pvs;\n}\n", "import type { JSONArray, JSONObject, JSONValue, Mutable, SCMPropertyValueSpecification } from '../types/common.ts';\nimport type { ActionSelectionResult, EntitySelectionResult, SelectionDetails, SelectionResult, ValueSelectionResult } from '../types/store.ts';\nimport { escapeJSONPointerParts } from './escapeJSONPointerParts.ts';\nimport { getIterableValue } from \"./getIterableValue.ts\";\nimport { isIRIObject } from \"./isIRIObject.ts\";\nimport { isIterable } from \"./isIterable.ts\";\nimport { isJSONObject } from './isJSONObject.ts';\nimport { isMetadataObject } from \"./isMetadataObject.ts\";\nimport { isValueObject } from \"./isValueObject.ts\";\nimport { parseSelectorString } from './parseSelectorString.ts';\nimport type { Store } from '../store.ts';\nimport { resolvePropertyValueSpecification } from \"./resolvePropertyValueSpecification.ts\";\n\n/**\n * A circular selection error occurs when two or more\n * entities contain no concrete values and their '@id'\n * values point to each other in a way that creates a\n * loop. The `getSelection` function will throw when\n * this scenario is detected to prevent an infinite\n * loop.\n */\nexport class CircularSelectionError extends Error {}\n\nexport type SelectorObject = {\n  subject: string;\n  filter?: string;\n};\n\ntype SourceSelectionResults =\n  | EntitySelectionResult\n  | ValueSelectionResult\n;\n\ntype ProcessingEntitySelectionResult = {\n  // used to build the final key value.\n  keySource: string;\n} & Omit<EntitySelectionResult, 'key'>;\n\ntype ProcessingValueSelectionResult = {\n  // used to build the final key value.\n  keySource: string;\n} & Omit<ValueSelectionResult, 'key'>;\n\ntype ProcessingActionSelectionResult = {\n  // used to build the final key value.\n  keySource: string;\n} & Omit<ActionSelectionResult, 'key'>;\n\ntype ProcessingSelectionDetails = SelectionDetails<\n  | ProcessingEntitySelectionResult\n  | ProcessingValueSelectionResult\n  | ProcessingActionSelectionResult\n>;\n\n\nexport function transformProcessedDetails<T extends SelectionResult>(\n  processing: ProcessingSelectionDetails,\n): SelectionDetails<T> {\n  for (let index = 0; index < processing.result.length; index++) {\n    const element = processing.result[index];\n\n    (element as unknown as Mutable<SourceSelectionResults>).key = Symbol.for(element.keySource);\n\n    // deno-lint-ignore no-explicit-any\n    delete (element as any).keySource;\n  }\n\n  return processing as unknown as SelectionDetails<T>;\n}\n\n/**\n * @description\n * Selects from the given context value and store state.\n *\n * If no `value` is provided the `selector` is assumed to begin with an iri\n * instead of a type. An entity will be selected from the store using the iri,\n * if it exists, to begin the selection.\n *\n * A type selector selects values from the context of a provided value\n * and will pull from the store if any iri objects are selected in the process.\n *\n * @param {string} args.selector          Selector string begining with a type.\n * @param {JSONObject} [args.value]       Context object to begin the selection from.\n * @param {JSONObject} [args.actionValue] The action, or point in the action definition which describes this value.\n * @param {Store} args.store       Octiron store to search using.\n * @returns {SelectionDetails}            Selection contained in a details object.\n */\nexport function getSelection<T extends SelectionResult>({\n  selector: selectorStr,\n  value,\n  actionValue,\n  store,\n}: {\n  selector: string;\n  value?: JSONObject;\n  actionValue?: JSONObject;\n  store: Store;\n}): SelectionDetails<T> {\n  const details: ProcessingSelectionDetails = {\n    selector: selectorStr,\n    complete: false,\n    hasErrors: false,\n    hasMissing: false,\n    required: [],\n    dependencies: [],\n    result: [],\n  };\n\n  if (value == null) {\n    const [{ subject: iri, filter }, ...selector] =\n      parseSelectorString(selectorStr, store);\n\n    selectEntity({\n      keySource: '',\n      pointer: '',\n      iri,\n      filter,\n      selector: selector.length > 0 ? selector : undefined,\n      store,\n      details,\n    });\n\n    details.complete = details.required.length === 0;\n\n    return transformProcessedDetails<T>(details);\n  }\n\n  const selector = parseSelectorString(selectorStr, store);\n\n  traverseSelector({\n    keySource: '',\n    pointer: '',\n    value,\n    actionValue,\n    selector,\n    store,\n    details,\n  });\n\n  details.complete = details.required.length === 0;\n\n  for (let index = 0; index < details.result.length; index++) {\n    const element = details.result[index];\n\n    (element as unknown as Mutable<SourceSelectionResults>).key = Symbol.for(element.keySource);\n  }\n\n  return transformProcessedDetails<T>(details);\n}\n\nfunction makePointer(pointer: string, addition: string | number) {\n  return `${pointer}/${escapeJSONPointerParts(addition.toString())}`;\n}\n\n/**\n * Filters apply to objects with `@type` properties. These can be strings or\n * arrays of strings and are considered a pass if any of the values match the\n * filter.\n *\n * If an object is provided which does not contain an `@type` property it is\n * considered a fail.\n */\nfunction passesFilter({\n  value,\n  filter,\n}: {\n  value: JSONObject;\n  filter?: string;\n}): boolean {\n  if (typeof filter !== 'string') {\n    return true;\n  }\n\n  if (Array.isArray(value['@type'])) {\n    return value['@type'].includes(filter);\n  }\n\n  return value['@type'] === filter;\n}\n\n/**\n * If a scala value is pulled before a selection is complete the branch\n * can exit early.\n */\nfunction isTraversable(value: JSONValue): value is JSONObject | JSONArray {\n  return (\n    value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  );\n}\n\n\n/**\n * Handles the final value found in a selection.\n * If a @id, @value jsonld object is provided further\n * recursion might be nessacary.\n */\nfunction resolveValue({\n  keySource,\n  pointer,\n  value,\n  datatype,\n  filter,\n  spec,\n  actionValue,\n  store,\n  details,\n}: {\n  keySource: string;\n  pointer: string;\n  value: JSONValue;\n  spec?: JSONObject;\n  actionValue?: JSONValue;\n  datatype: string;\n  filter?: string;\n  store: Store;\n  details: ProcessingSelectionDetails;\n}) {\n  if (value === undefined) {\n    details.hasMissing = true;\n\n    return;\n  }\n\n  if (\n    spec != null && (\n      // hit the for loop below if the action value\n      // has editable properties and the value is an\n      // array\n      !isIterable(value) || !isJSONObject(actionValue)\n    )\n  ) {\n    const pvs = resolvePropertyValueSpecification({\n      spec,\n      store,\n    });\n\n    if (isJSONObject(value) && isValueObject(value)) {\n      value = value['@value'];\n    }\n\n    details.result.push({\n      keySource: pointer,\n      pointer,\n      type: 'action-value',\n      datatype,\n      value,\n      actionValue,\n      spec: pvs,\n      readonly: pvs.readonlyValue,\n    });\n\n    return;\n  }\n\n  if (!isTraversable(value)) {\n    details.result.push({\n      keySource: pointer,\n      pointer: pointer,\n      type: 'value',\n      datatype,\n      value,\n    });\n\n    return;\n  } else if (isIterable(value)) {\n    const list = getIterableValue(value);\n\n    for (let index = 0; index < list.length; index++) {\n      const item = list[index];\n\n      if (!isIRIObject(item)) {\n        keySource = makePointer(keySource, index);\n      }\n\n      resolveValue({\n        keySource,\n        pointer: makePointer(pointer, index),\n        value: item,\n        spec,\n        actionValue,\n        datatype,\n        filter,\n        store,\n        details,\n      });\n\n      if (details.hasErrors || details.hasMissing) {\n        return;\n      }\n    }\n\n    return;\n  }\n  if (typeof filter === 'string' && !passesFilter({ value, filter })) {\n    return;\n  }\n\n  if (isValueObject(value)) {\n    resolveValue({\n      keySource,\n      pointer,\n      value: value['@value'],\n      datatype,\n      store,\n      details,\n    });\n\n    return;\n  } else if (isMetadataObject(value)) {\n    selectEntity({\n      keySource,\n      pointer,\n      iri: value['@id'],\n      filter,\n      store,\n      details,\n    });\n\n    return;\n  }\n\n  if (isIRIObject(value)) {\n    const iri = value['@id'];\n\n    details.result.push({\n      keySource,\n      pointer,\n      type: 'entity',\n      iri,\n      ok: true,\n      value,\n    });\n\n    return;\n  }\n\n  details.result.push({\n    keySource,\n    pointer,\n    type: 'value',\n    datatype,\n    value,\n  });\n}\n\n/**\n * Selects a type from a json value, handling invalid situations.\n */\nfunction selectTypedValue({\n  keySource,\n  pointer,\n  type,\n  value,\n  actionValue,\n  filter,\n  store,\n  details,\n}: {\n  keySource: string;\n  pointer: string;\n  type: string;\n  value: JSONValue;\n  actionValue?: JSONObject;\n  filter?: string;\n  store: Store;\n  details: ProcessingSelectionDetails;\n}): void {\n  pointer = makePointer(pointer, type);\n\n  if (!isTraversable(value)) {\n    return;\n  }\n\n  if (isIterable(value)) {\n    const list = getIterableValue(value);\n\n    for (let index = 0; index < list.length; index++) {\n      const item = list[index];\n\n      if (!isIRIObject(item)) {\n        keySource = makePointer(keySource, index);\n      }\n\n      selectTypedValue({\n        keySource,\n        pointer: makePointer(pointer, index),\n        type,\n        value: item,\n        actionValue,\n        filter,\n        store,\n        details,\n      });\n\n      if (details.hasErrors || details.hasMissing) {\n        return;\n      }\n    }\n\n    return;\n  }\n\n  if (isMetadataObject(value) && isIRIObject(value)) {\n    selectEntity({\n      keySource,\n      pointer,\n      iri: value['@id'],\n      selector: [{ subject: type, filter }],\n      store,\n      details,\n    });\n\n    return;\n  } else if (isMetadataObject(value)) {\n    return;\n  }\n\n  let spec: JSONObject | undefined;\n\n  if (isJSONObject(actionValue) && actionValue[`${type}-input`] == null) {\n    // selecting for an action but the type is not editable\n    return;\n  } else if (isJSONObject(actionValue)) {\n    spec = actionValue[`${type}-input`] as JSONObject;\n  }\n\n  resolveValue({\n    keySource,\n    pointer,\n    value: value[type],\n    spec,\n    actionValue: actionValue?.[type],\n    datatype: type,\n    filter,\n    store,\n    details,\n  });\n}\n\n/**\n * Recurses through the selection until there are no further selection items.\n */\nfunction traverseSelector({\n  keySource,\n  pointer,\n  selector,\n  value,\n  actionValue,\n  store,\n  details,\n}: {\n  keySource: string;\n  pointer: string;\n  selector: SelectorObject[];\n  value: JSONValue;\n  actionValue?: JSONObject;\n  store: Store;\n  details: ProcessingSelectionDetails;\n}): void {\n  if (selector.length === 0) {\n    return;\n  } else if (!isTraversable(value)) {\n    return;\n  }\n\n  if (isIterable(value)) {\n    const list = getIterableValue(value);\n\n    for (let index = 0; index < list.length; index++) {\n      const item = list[index];\n\n      if (!isIRIObject(item)) {\n        keySource = makePointer(keySource, index);\n      }\n\n      // keep nesting on the full selector\n      // as only objects can be subscripted\n      // with terms\n      traverseSelector({\n        keySource,\n        pointer: makePointer(pointer, index),\n        selector,\n        value: item,\n        actionValue,\n        store,\n        details,\n      });\n\n      if (details.hasErrors || details.hasMissing) {\n        return;\n      }\n    }\n\n    return;\n  } else if (isValueObject(value)) {\n    traverseSelector({\n      keySource,\n      pointer,\n      selector,\n      value: value['@value'],\n      actionValue,\n      store,\n      details,\n    });\n  }\n\n  if (isMetadataObject(value) && isIRIObject(value)) {\n    selectEntity({\n      keySource,\n      pointer,\n      selector,\n      iri: value['@id'],\n      store,\n      details,\n    });\n\n    return;\n  }\n\n  // edit selections are a special case in that an input\n  // should render even when no value is present.\n  if (\n    isJSONObject(value) &&\n    actionValue !== undefined &&\n    value[selector[0].subject] == null\n  ) {\n    value = { [selector[0].subject]: null };\n  }\n\n  const [next, ...rest] = selector;\n  const { subject: type, filter } = next;\n\n  // null is a placeholder for action payload types with no value.\n  // jsonld drops null values otherwise.\n  if (value[type] === undefined) {\n    details.hasMissing = true;\n\n    return;\n  }\n\n  if (rest.length === 0 && isJSONObject(actionValue?.[type])) {\n    pointer = makePointer(pointer, type);\n\n    resolveValue({\n      keySource: pointer,\n      pointer,\n      value: value[type],\n      datatype: type,\n      details,\n      store,\n      actionValue: actionValue?.[type],\n      spec: actionValue[`${type}-input`] as SCMPropertyValueSpecification,\n      filter,\n    });\n\n    return;\n  } else if (rest.length === 0) {\n    selectTypedValue({\n      keySource,\n      pointer,\n      type,\n      filter,\n      value,\n      actionValue,\n      store,\n      details,\n    });\n\n    return;\n  }\n\n  if (typeof filter === 'string' && !passesFilter({ value, filter })) {\n    return;\n  }\n\n  let traversedActionValue: JSONObject | undefined;\n\n  if (isJSONObject(actionValue?.[type])) {\n    traversedActionValue = actionValue[type];\n  }\n\n  traverseSelector({\n    keySource: makePointer(keySource, type),\n    pointer: makePointer(pointer, type),\n    selector: rest,\n    value: value[type],\n    actionValue: traversedActionValue,\n    store,\n    details,\n  });\n}\n\n/**\n * Selects an entity from the store and continues the selection\n * if the branch has not completed.\n */\nfunction selectEntity({\n  keySource,\n  pointer,\n  iri,\n  filter,\n  selector,\n  store,\n  details,\n  handledIRIs,\n}: {\n  keySource: string;\n  pointer: string;\n  iri: string;\n  filter?: string;\n  selector?: SelectorObject[];\n  store: Store;\n  details: ProcessingSelectionDetails;\n  handledIRIs?: Set<string>;\n}): void {\n  keySource = makePointer(keySource, iri);\n  pointer = makePointer(pointer, iri);\n\n  const cache = store.entity(iri)\n\n  details.dependencies.push(iri);\n\n  // if loading is required mark found as false\n  if (cache == null || cache.loading) {\n    if (!details.required.includes(iri)) {\n      details.required.push(iri);\n    }\n\n    return;\n  }\n\n  if (!cache.ok) {\n    details.hasErrors = true;\n\n    if (selector == null || selector.length === 0) {\n      return;\n    }\n\n    details.result.push({\n      keySource,\n      pointer,\n      type: 'entity',\n      iri: cache.iri,\n      ok: false,\n      status: cache.status,\n      value: cache.value,\n      reason: cache.reason,\n    });\n\n    return;\n  }\n\n  const value = cache.value;\n\n  if (isMetadataObject(value)) {\n    // in theory serveral entities could be metadata objects\n    // referencing each other and end up looping around...\n    if (handledIRIs == null) {\n      handledIRIs = new Set([value['@id']]);\n    } else if (!handledIRIs.has(value['@id'])) {\n      handledIRIs.add(value['@id']);\n    } else {\n      throw new CircularSelectionError(`Circular selection loop detected`);\n    }\n\n    // select the entity this entity is referencing\n    return selectEntity({\n      keySource,\n      pointer,\n      iri: value['@id'],\n      filter,\n      selector,\n      details,\n      store,\n      handledIRIs,\n    });\n  }\n\n  // if the entity does not match the filter it is not relevant to the final selection\n  if (typeof filter === 'string' && !passesFilter({ filter, value })) {\n    return;\n  }\n\n  if (typeof selector === 'undefined') {\n    details.result.push({\n      keySource,\n      pointer,\n      type: 'entity',\n      iri: cache.iri,\n      ok: true,\n      value: cache.value as JSONObject,\n    });\n\n    return;\n  }\n\n  traverseSelector({\n    keySource,\n    pointer,\n    value,\n    selector,\n    store,\n    details,\n  });\n\n  return;\n}\n", "import type m from \"mithril\";\nimport { actionSelectionFactory, type OctironActionSelectionHooks, type ActionSelectionInternals } from '../factories/actionSelectionFactory.ts';\nimport type { ActionSelectView, OctironActionSelection, OctironActionSelectionArgs, OctironSelection, Selector } from '../types/octiron.ts';\nimport type { ActionSelectionResult, SelectionDetails } from '../types/store.ts';\nimport { getSelection } from '../utils/getSelection.ts';\nimport { isJSONObject } from '../utils/isJSONObject.ts';\nimport { mithrilRedraw } from '../utils/mithrilRedraw.ts';\nimport type { JSONObject } from '../types/common.ts';\nimport { selectionFactory } from '../factories/selectionFactory.ts';\n\n\nexport type ActionSelectionRendererAttrs = {\n  value: JSONObject;\n  actionValue: JSONObject;\n  selector: Selector;\n  internals: Omit<\n    ActionSelectionInternals,\n    | 'name'\n    | 'type'\n    | 'datatype'\n    | 'pointer'\n    | 'spec'\n    | 'value'\n    | 'actionValue'\n    | 'octiron'\n  >;\n  args: OctironActionSelectionArgs;\n  view: ActionSelectView;\n};\n\nexport const ActionSelectionRenderer: m.FactoryComponent<ActionSelectionRendererAttrs> = (\n  vnode,\n) => {\n  let currentAttrs = vnode.attrs;\n  let details: SelectionDetails<ActionSelectionResult>;\n\n  const instances: Record<string, {\n    internals: ActionSelectionInternals;\n    selection: OctironSelection;\n    octiron: OctironActionSelection & OctironActionSelectionHooks;\n    selectionResult: ActionSelectionResult;\n  }> = {};\n\n  function createInstances() {\n    let hasChanges = false;\n\n    const nextKeys: Array<string> = [];\n\n    for (const selectionResult of details.result) {\n      nextKeys.push(selectionResult.pointer);\n\n      if (instances[selectionResult.pointer] != null) {\n        const next = selectionResult;\n        const prev = instances[selectionResult.pointer].selectionResult;\n\n        if (\n          next.value === prev.value\n        ) {\n          continue;\n        }\n\n        const internals = Object.assign({}, instances[selectionResult.pointer].internals);\n\n        internals.name = selectionResult.datatype;\n        internals.type = selectionResult.type;\n        internals.datatype = selectionResult.datatype;\n        internals.pointer = selectionResult.pointer;\n        internals.value = selectionResult.value;\n        internals.actionValue = selectionResult.actionValue;\n\n        if (selectionResult.spec != null) {\n          internals.spec = selectionResult.spec;\n        }\n\n        instances[selectionResult.pointer].octiron._updateInternals(internals);\n      }\n\n      hasChanges = true;\n\n      const selection = selectionFactory({\n        store: currentAttrs.internals.store,\n        typeDefs: currentAttrs.internals.typeDefs,\n        datatype: selectionResult.datatype,\n        value: selectionResult.value,\n      });\n\n      const internals: ActionSelectionInternals = {\n        ...currentAttrs.internals,\n        octiron: selection,\n        name: selectionResult.datatype,\n        type: selectionResult.type,\n        datatype: selectionResult.datatype,\n        pointer: selectionResult.pointer,\n        spec: selectionResult.spec,\n        value: selectionResult.value,\n        actionValue: selectionResult.actionValue,\n      };\n\n      const actionSelection = actionSelectionFactory(\n        internals,\n        currentAttrs.args,\n      );\n\n      instances[selectionResult.pointer] = {\n        internals,\n        selection,\n        octiron: actionSelection,\n        selectionResult,\n      };\n    }\n\n    const prevKeys = Object.keys(instances);\n\n    for (const key of prevKeys) {\n      if (!nextKeys.includes(key)) {\n        hasChanges = true;\n\n        delete instances[key];\n      }\n    }\n\n    if (hasChanges && typeof window !== 'undefined') {\n      mithrilRedraw();\n    }\n  }\n\n  function updateSelection() {\n    const { selector, value, actionValue } = currentAttrs;\n    const { store } = currentAttrs.internals;\n\n    if (!isJSONObject(value)) {\n      return;\n    }\n\n    details = getSelection<ActionSelectionResult>({\n      selector,\n      store,\n      actionValue,\n      value,\n    });\n\n    createInstances();\n  }\n\n  return {\n    oninit: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      updateSelection();\n    },\n    onbeforeupdate: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      for (const instance of Object.values(instances)) {\n        instance.octiron._updateArgs(attrs.args);\n        instance.octiron._updateInternals(attrs.internals);\n      }\n\n      updateSelection();\n    },\n    view: ({ attrs: { view, args } }) => {\n      if (details == null) {\n        return null;\n      }\n\n      const {\n        pre,\n        sep,\n        post,\n        fallback,\n      } = args;\n\n      if (typeof view === 'undefined') {\n        return;\n      }\n\n      const list = Object.values(instances);\n      const children = [pre];\n\n      for (let index = 0; index < list.length; index++) {\n        const { octiron, selectionResult } = list[index];\n\n        if (index !== 0) {\n          children.push(sep);\n        }\n\n        if (selectionResult.value == null && typeof fallback === 'function') {\n          children.push(null)\n          // children.push(fallback(octiron));\n        } else if (selectionResult.value == null && fallback != null) {\n          children.push(fallback as m.Children);\n        } else {\n          children.push(view(octiron));\n        }\n      }\n\n      children.push(post);\n\n      return children;\n    },\n  };\n};\n", "import type m from 'mithril';\nimport { actionFactory, type OctironActionHooks, type ActionInternals } from '../factories/actionFactory.ts';\nimport { selectionFactory } from '../factories/selectionFactory.ts';\nimport type { JSONObject, SCMAction } from '../types/common.ts';\nimport type { OctironAction, OctironPerformArgs, OctironSelection, PerformView, Selector } from '../types/octiron.ts';\nimport type { Failure, ReadonlySelectionResult, SelectionDetails } from '../types/store.ts';\nimport { isIRIObject } from '../utils/isIRIObject.ts';\nimport { mithrilRedraw } from '../utils/mithrilRedraw.ts';\n\nexport type PerformRendererAttrs = {\n  internals: ActionInternals;\n  selector?: Selector;\n  args: OctironPerformArgs;\n  view: PerformView;\n};\n\nexport const PerformRenderer: m.FactoryComponent<PerformRendererAttrs> = ({ attrs }) => {\n  const key = Symbol();\n  let currentAttrs = attrs;\n  let details: SelectionDetails<ReadonlySelectionResult>;\n\n  const instances: Record<string, {\n    octiron: OctironSelection;\n    action: OctironAction & OctironActionHooks;\n    selectionResult: ReadonlySelectionResult;\n  }> = {};\n\n  function createInstances() {\n    let hasChanges = false;\n\n    const nextKeys: Array<string> = [];\n\n    for (const selectionResult of details.result) {\n      nextKeys.push(selectionResult.pointer);\n\n      if (Object.hasOwn(instances, selectionResult.pointer)) {\n        const next = selectionResult;\n        const prev = instances[selectionResult.pointer].selectionResult;\n\n        if (\n          prev.type === 'value' &&\n          next.type === 'value' &&\n          next.value === prev.value\n        ) {\n          continue;\n        } else if (\n          prev.type === 'entity' &&\n          next.type === 'entity' &&\n          (\n            next.ok !== prev.ok ||\n            next.status !== prev.status ||\n            next.value !== prev.value\n          )\n        ) {\n          continue;\n        }\n      }\n\n      hasChanges = true;\n\n      const octiron = selectionFactory({\n        store: currentAttrs.internals.store,\n        typeDefs: currentAttrs.internals.typeDefs,\n        value: selectionResult.value as SCMAction,\n      });\n      const action = actionFactory(currentAttrs.internals, currentAttrs.args);\n\n      instances[selectionResult.pointer] = {\n        action,\n        octiron,\n        selectionResult,\n      };\n    }\n\n    const prevKeys = Object.keys(instances);\n\n    for (const key of prevKeys) {\n      if (!nextKeys.includes(key)) {\n        hasChanges = true;\n\n        delete instances[key];\n      }\n    }\n\n    if (hasChanges) {\n      mithrilRedraw();\n    }\n  }\n\n  async function fetchRequired(required: string[]) {\n    if (required.length === 0) {\n      return;\n    }\n\n    // deno-lint-ignore no-explicit-any\n    const promises: Promise<any>[] = [];\n\n    for (const iri of required) {\n      promises.push(currentAttrs.internals.store.fetch(iri));\n    }\n\n    await Promise.allSettled(promises);\n  }\n\n  function listener(next: SelectionDetails<ReadonlySelectionResult>) {\n    let required: string[] = [];\n\n    if (typeof details === 'undefined') {\n      required = next.required;\n    } else {\n      for (const iri of next.required) {\n        if (!details.required.includes(iri)) {\n          required.push(iri);\n        }\n      }\n    }\n\n    details = next;\n\n    if (required.length > 0) {\n      fetchRequired(required);\n    }\n\n    createInstances();\n  }\n\n  function subscribe() {\n    const { selector, internals } = currentAttrs;\n\n    if (typeof selector === 'undefined') {\n      // The value is the action\n      let result: ReadonlySelectionResult;\n\n      if (isIRIObject(internals.octiron.value)) {\n        result = {\n          pointer: '/local',\n          key: Symbol.for('/local'),\n          type: 'entity',\n          iri: internals.octiron.value['@id'],\n          ok: true,\n          value: internals.octiron.value,\n        };\n      } else {\n        result = {\n          pointer: '/local',\n          key: Symbol.for('/local'),\n          type: 'value',\n          value: internals.octiron.value,\n        };\n      }\n\n      details = {\n        selector: '',\n        complete: true,\n        hasErrors: false,\n        hasMissing: false,\n        dependencies: [],\n        required: [],\n        result: [result],\n      };\n    } else {\n      // Perform needs to select the action value\n      details = internals.store.subscribe({\n        key,\n        selector: selector,\n        value: internals.octiron.value as JSONObject,\n        listener,\n      });\n\n      fetchRequired(details.required);\n    }\n\n    createInstances();\n  }\n\n  return {\n    oninit: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      subscribe();\n    },\n    onbeforeupdate: ({ attrs }) => {\n      if (attrs.selector !== currentAttrs.selector) {\n        attrs.internals.store.unsubscribe(key);\n\n        subscribe();\n      }\n\n      currentAttrs = attrs;\n\n      for (const instance of Object.values(instances)) {\n        instance.action._updateArgs(attrs.args);\n      }\n    },\n    onbeforeremove: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      attrs.internals.store.unsubscribe(key);\n    },\n    view: ({ attrs: { view, args } }): m.Children => {\n      if (details == null || !details.complete) {\n        return args.loading;\n      }\n\n      const {\n        pre,\n        sep,\n        post,\n        fallback,\n      } = args;\n\n      if (typeof view === 'undefined') {\n        return;\n      }\n\n      const list = Object.values(instances);\n      const children = [pre];\n\n      for (let index = 0; index < list.length; index++) {\n        const { selectionResult, action, octiron } = list[index];\n\n        if (index !== 0) {\n          children.push(sep);\n        }\n\n        if (selectionResult.type === 'value') {\n          children.push(view(action));\n        } else if (!selectionResult.ok && typeof fallback === 'function') {\n          children.push(fallback(octiron, selectionResult.reason as Failure));\n        } else if (!selectionResult.ok) {\n          children.push(fallback as m.Children);\n        } else {\n          children.push(view(action));\n        }\n      }\n\n      children.push(post);\n\n      return children;\n    },\n  };\n};\n", "import m from 'mithril';\nimport type { HTMLFragmentsHandler, IntegrationState } from \"../types/store.ts\";\nimport type { Octiron } from \"../types/octiron.ts\";\n\nexport type HTMLFragmentsIntegrationComponentAttrs = {\n  o: Octiron;\n  fragment?: string;\n  rootHTML?: string;\n  fragmentsHTML: Record<string, string>;\n  rootEl?: Element;\n  fragmentEls?: Record<string, Element>;\n};\n\nexport type HTMLFragmentsIntegrationComponentType = m.ComponentTypes<HTMLFragmentsIntegrationComponentAttrs>;\n\nexport const HTMLFragmentsIntegrationComponent: HTMLFragmentsIntegrationComponentType = () => {\n  return {\n    view({ attrs: { fragment, rootHTML, fragmentsHTML }}) {\n      const html = fragment == null ? rootHTML : fragmentsHTML[fragment];\n\n      if (html == null) {\n        return null;\n      }\n\n      return m.trust(html);\n    },\n  }\n};\n\nexport type HTMLFragmentsIntegrationArgs = {\n  iri: string;\n  contentType: string;\n  root?: string;\n  ided?: Record<string, string>;\n  anon?: Record<string, string>;\n};\n\ntype HTMLFragmentsStateInfo = {\n  iri: string,\n  contentType: string,\n  hasRoot: boolean;\n  ided: string[];\n  anon: string[];\n};\n\nexport class HTMLFragmentsIntegration implements IntegrationState {\n  static type = 'html-fragments' as const;\n\n  readonly integrationType = 'html-fragments' as const;\n  #handler: HTMLFragmentsHandler;\n  #rendered: Set<string> = new Set();\n  #iri: string;\n  #fragment?: string;\n  #contentType: string;\n  #rootHTML?: string;\n  #idedHTML: Record<string, string>;\n  #anonHTML: Record<string, string>;\n  #fragmentsHTML: Record<string, string>;\n\n  constructor(handler: HTMLFragmentsHandler, {\n    iri,\n    contentType,\n    root,\n    ided,\n    anon,\n  }: HTMLFragmentsIntegrationArgs) {\n    this.#handler = handler;\n    this.#iri = iri;\n    this.#contentType = contentType;\n    this.#rootHTML = root;\n    this.#idedHTML = ided ?? {};\n    this.#anonHTML = anon ?? {};\n    this.#fragmentsHTML = {\n      ...anon,\n      ...ided,\n    };\n  }\n\n  get iri(): string {\n    return this.#iri;\n  }\n\n  get contentType(): string {\n    return this.#contentType;\n  }\n\n  public render(o: Octiron) {\n    return m(HTMLFragmentsIntegrationComponent, {\n      o,\n      rootHTML: this.#rootHTML,\n      fragmentsHTML: this.#fragmentsHTML,\n    });\n  }\n\n  public getStateInfo(): HTMLFragmentsStateInfo {\n    return {\n      iri: this.#iri,\n      contentType: this.#contentType,\n      hasRoot: this.#rootHTML != null,\n      ided: Object.keys(this.#idedHTML),\n      anon: Object.keys(this.#anonHTML),\n    };\n  }\n\n  public toInitialState(): string {\n    let html = '';\n\n    if (this.#rootHTML != null) {\n      html += `<template id=\"htmlfrag:${this.#iri}|${this.#contentType}\">${this.#rootHTML}</template>\\n`;\n    }\n\n    for (const [fragment, fragmentHTML] of Object.entries(this.#idedHTML)) {\n      if (!this.#rendered.has(fragment)) {\n        html += `<template id=\"htmlfrag:${this.#iri}|${this.#contentType}|${fragment}\">${fragmentHTML}</template>\\n`;\n      }\n    }\n\n    for (const [fragment, fragmentHTML] of Object.entries(this.#anonHTML)) {\n      html += `<template id=\"htmlfrag:${this.#iri}#${fragment}|${this.#contentType}\">${fragmentHTML}</template>\\n`;\n    }\n\n    return html;\n  }\n\n  static fromInitialState(handler: HTMLFragmentsHandler, {\n    iri,\n    contentType,\n    hasRoot,\n    ided,\n    anon,\n  }: HTMLFragmentsStateInfo): HTMLFragmentsIntegration | null {\n    let rootHTML: string | undefined;\n    const idedHTML: Record<string, string> = {};\n    const anonHTML: Record<string, string> = {};\n\n    if (hasRoot) {\n      const rootEl = document.getElementById(`htmlfrag:${iri}|${contentType}`);\n\n      if (rootEl) {\n        rootHTML = rootEl.outerHTML;\n      }\n    }\n\n    for (const fragment of ided) {\n      const el = document.getElementById(fragment) as HTMLElement | SVGElement;\n\n      if (el instanceof HTMLTemplateElement) {\n        const dom = el.cloneNode(true) as HTMLElement | SVGAElement;\n\n        idedHTML[fragment] = dom.innerHTML;\n      } else {\n        idedHTML[fragment] = el.innerHTML;\n      }\n    }\n\n    for (const fragment of anon) {\n      const el = document.getElementById(`htmlfrag:${iri}#${fragment}|${contentType}`) as HTMLElement | SVGElement;\n\n      if (el instanceof HTMLTemplateElement) {\n        const dom = el.cloneNode(true) as HTMLElement | SVGAElement;\n\n        idedHTML[fragment] = dom.innerHTML;\n      } else {\n        idedHTML[fragment] = el.innerHTML;\n      }\n    }\n\n    return new HTMLFragmentsIntegration(handler, {\n      contentType,\n      iri,\n      root: rootHTML,\n      ided: idedHTML,\n      anon: anonHTML,\n    });\n  }\n}\n", "import { isBrowserRender } from \"../consts.ts\";\nimport m from 'mithril';\nimport type { HTMLCleanupFn, HTMLHandler, IntegrationState } from \"../types/store.ts\";\nimport type { Octiron } from \"../types/octiron.ts\";\n\nexport type HTMLIntegrationComponentAttrs = {\n  o: Octiron,\n  html: string;\n  el?: Element;\n  handler: HTMLHandler;\n};\n\nexport type HTMLIntegrationComponentType = m.ComponentTypes<HTMLIntegrationComponentAttrs>;\n\nexport const HTMLIntegrationComponent: HTMLIntegrationComponentType = () => {\n  let onRemove: HTMLCleanupFn;\n\n  return {\n    oncreate({ dom, attrs: { o, el, handler } }) {\n      if (el != null) {\n        dom.append(el);\n      }\n\n      if (handler.onCreate != null) {\n        onRemove = handler.onCreate({\n          o,\n          dom,\n          addFragmentListener: () => {},\n        });\n      }\n    },\n    onbeforeremove() {\n      if (onRemove != null) {\n        onRemove();\n      }\n    },\n    view({ attrs: { html, el }}) {\n      if (el != null) {\n        return null;\n      }\n\n      return m.trust(html);\n    },\n  }\n};\n\nexport type HTMLIntegrationArgs = {\n  iri: string;\n  contentType: string;\n  html: string;\n  id?: string;\n  el?: Element;\n};\n\nexport class HTMLIntegration implements IntegrationState {\n  static type = 'html' as const;\n\n  readonly integrationType = 'html' as const;\n\n  #handler: HTMLHandler;\n  #rendered: boolean = false;\n  #iri: string;\n  #contentType: string;\n  #html: string;\n  #id: string | undefined;\n  #el: Element | undefined;\n\n  constructor(handler: HTMLHandler, {\n    iri,\n    contentType,\n    html,\n    id,\n    el,\n  }: HTMLIntegrationArgs) {\n    this.#handler = handler;\n    this.#iri = iri;\n    this.#contentType = contentType;\n    this.#html = html;\n    this.#id = id;\n    this.#el = el;\n  }\n\n  get iri(): string {\n    return this.#iri;\n  }\n\n  get contentType(): string {\n    return this.#contentType;\n  }\n\n  public render(o: Octiron) {\n    if (!isBrowserRender && !this.#rendered) {\n      this.#rendered = true;\n    }\n\n    return m(HTMLIntegrationComponent, {\n      o,\n      html: this.#html,\n      el: this.#el,\n      handler: this.#handler,\n    });\n  }\n\n  public getStateInfo() {\n    return {\n      iri: this.#iri,\n      contentType: this.#contentType,\n      id: this.#id,\n    };\n  }\n\n  public toInitialState(): string {\n    if (this.#id != null && this.#rendered) {\n      return '';\n    }\n\n    return `<template id=\"html:${this.#iri}|${this.#contentType}\">${this.#html}</template>\\n`;\n  }\n\n  static fromInitialState(handler: HTMLHandler, {\n    iri,\n    contentType,\n    id,\n  }: {\n    iri: string,\n    contentType: string,\n    id?: string,\n  }): HTMLIntegration | null {\n    let el: Element | null = null;\n\n    if (id != null) {\n      el = document.getElementById(id);\n    }\n\n    if (el != null) {\n      return new HTMLIntegration(handler, {\n        iri,\n        contentType,\n        html: el.outerHTML,\n        id,\n        el,\n      });\n    }\n\n    el = document.getElementById(`html:${iri}|${contentType}`);\n\n    if (el instanceof HTMLTemplateElement) {\n      el = el.cloneNode(true) as Element;\n\n      return new HTMLIntegration(handler, {\n        iri,\n        contentType,\n        html: el.outerHTML,\n        id,\n        el,\n      });\n    }\n\n    return null;\n  }\n\n}\n", "import type { Children } from 'mithril';\nimport type { Failure, HTTPErrorView, ContentParsingView } from './types/store.ts';\n\n\nexport class UndefinedFailure implements Failure {\n  undefined(children: Children): Children {\n    return children;\n  }\n\n  http(children: Children): Children;\n  http(view: HTTPErrorView): Children;\n  http(): Children {\n    return null;\n  }\n\n  unparserable(children: Children): Children;\n  unparserable(view: ContentParsingView): Children;\n  unparserable(): Children {\n    return null;\n  }\n}\n\nexport class HTTPFailure implements Failure {\n  #status: number;\n  #res: Response;\n\n  constructor(status: number, res: Response) {\n    this.#status = status;\n    this.#res = res;\n  }\n\n  get status(): number {\n    return this.#status;\n  }\n\n  get res(): Response {\n    return this.#res;\n  }\n\n  undefined(): Children {\n    return null;\n  }\n\n  http(children: Children): Children;\n  http(view: HTTPErrorView): Children;\n  http(arg: Children | HTTPErrorView): Children {\n    if (typeof arg === 'function') {\n      return arg(this.#status);\n    }\n\n    return arg;\n  }\n\n  unparserable(children: Children): Children;\n  unparserable(view: ContentParsingView): Children;\n  unparserable(): Children {\n    return null;\n  }\n}\n\nexport class ContentHandlingFailure implements Failure {\n  #error: Error;\n\n  constructor(error: Error) {\n    this.#error = error;\n  }\n\n  get error(): Error {\n    return this.#error;\n  }\n\n  undefined(): Children {\n    return null;\n  }\n\n  http(children: Children): Children;\n  http(view: HTTPErrorView): Children;\n  http(): Children {\n    return null;\n  }\n\n  unparserable(children: Children): Children;\n  unparserable(view: ContentParsingView): Children;\n  unparserable(arg: Children | ContentParsingView): Children {\n    if (typeof arg === 'function') {\n      return arg(this.#error);\n    }\n\n    return arg;\n  }\n}\n", "import type { IRIObject, JSONValue } from '../types/common.ts';\nimport { getIterableValue } from \"./getIterableValue.ts\";\nimport { isIRIObject } from \"./isIRIObject.ts\";\nimport { isIterable } from \"./isIterable.ts\";\nimport { isJSONObject } from \"./isJSONObject.ts\";\nimport { isMetadataObject } from \"./isMetadataObject.ts\";\nimport { isValueObject } from \"./isValueObject.ts\";\n\n\n/**\n * @description\n * Locates all IRI objects in a potentially deeply nested JSON-ld structure and\n * returns an array of the located IRI objects.\n *\n * Objects identified as IRI objects are not modified beyond being placed in\n * an array together.\n *\n * @param value - The value to flatten.\n * @param agg - An array to fill with the flattened IRI objects.\n *              This is required for the internal recursing performed by this\n *              function and isn't required by upstream callers.\n */\nexport function flattenIRIObjects(value: JSONValue, agg: IRIObject[] = []): IRIObject[] {\n  if (Array.isArray(value)) {\n    for (const item of value) {\n      flattenIRIObjects(item, agg);\n    }\n  } else if (isJSONObject(value)) {\n    if (isMetadataObject(value)) {\n      return agg;\n    }\n\n    if (isIRIObject(value)) {\n      agg.push(value);\n    }\n\n    if (isValueObject(value)) {\n      flattenIRIObjects(value['@value'], agg);\n    } else if (isIterable(value)) {\n      flattenIRIObjects(getIterableValue(value), agg);\n    } else {\n      for (const [term, item] of Object.entries(value)) {\n        if (term.startsWith('@')) {\n          continue;\n        }\n\n        flattenIRIObjects(item, agg);\n      }\n    }\n  }\n\n  return agg;\n}\n", "import type { AlternativesState, Context, PrimaryState, Fetcher, Handler, IntegrationStateInfo, IntegrationType, JSONLDHandlerResult, ReadonlySelectionResult, ResponseHook, SelectionDetails, SelectionListener, EntityState, SubmitArgs, Aliases, EntitySelectionResult, ValueSelectionResult } from \"./types/store.ts\";\nimport { HTMLFragmentsIntegration } from \"./alternatives/htmlFragments.ts\";\nimport { HTMLIntegration } from \"./alternatives/html.ts\";\nimport { isBrowserRender } from \"./consts.ts\";\nimport type { JSONObject } from \"./types/common.ts\";\nimport { HTTPFailure } from \"./failures.ts\";\nimport { flattenIRIObjects } from \"./utils/flattenIRIObjects.ts\";\nimport { getSelection } from './utils/getSelection.ts';\nimport type { FailureEntityState, SuccessEntityState } from \"./types/store.ts\";\nimport { mithrilRedraw } from \"./utils/mithrilRedraw.ts\";\n\nconst defaultAccept = 'application/problem+json, application/ld+json, text/lf';\nconst integrationClasses = {\n  [HTMLIntegration.type]: HTMLIntegration,\n  [HTMLFragmentsIntegration.type]: HTMLFragmentsIntegration,\n};\n\ntype StateInfo = {\n  rootIRI: string;\n  vocab?: string;\n  aliases?: Record<string, string>;\n  primary: Record<string, EntityState>;\n  alternatives: Record<string, IntegrationStateInfo[]>;\n};\n\ntype Dependencies = Map<string, Set<symbol>>;\ntype Listener = (details: SelectionDetails<ReadonlySelectionResult>) => void;\ntype ListenerDetails = {\n  key: symbol;\n  selector?: string;\n  value?: JSONObject;\n  required: string[];\n  dependencies: string[];\n  listener: Listener;\n  cleanup: () => void;\n};\ntype Listeners = Map<symbol, ListenerDetails>;\n\nfunction getJSONLdValues(vocab?: string, aliases?: Record<string, string>): [Map<string, string>, Context] {\n  const aliasMap: Map<string, string> = new Map<string, string>();\n  const context: Context = {};\n\n  if (vocab != null) {\n    context['@vocab'] = vocab;\n  }\n\n  if (aliases == null) {\n    return [aliasMap, context];\n  }\n\n  for (const [key, value] of Object.entries(aliases)) {\n    context[key] = value;\n    aliasMap.set(key, value);\n  }\n\n  return [aliasMap, context];\n}\n\nfunction getInternalHeaderValues(\n  headers?: Record<string, string>,\n  origins?: Record<string, Record<string, string>>,\n): [Headers, Map<string, Headers>] {\n  const internalHeaders = new Headers([['accept', defaultAccept ]]);\n  const internalOrigins = new Map<string, Headers>();\n\n  if (headers != null) {\n    for (const [key, value] of Object.entries(headers)) {\n      internalHeaders.set(key, value);\n    }\n  }\n\n  if (origins != null) {\n    for (const [origin, headers] of Object.entries(origins)) {\n      const internalHeaders = new Headers([['accept', defaultAccept]]);\n\n      for (const [key, value] of Object.entries(headers)) {\n        internalHeaders.set(key, value);\n      }\n\n      internalOrigins.set(origin, internalHeaders);\n    }\n  }\n\n  return [internalHeaders, internalOrigins];\n}\n\nexport type StoreArgs = {\n  /**\n   * Root endpoint of the API.\n   */\n  rootIRI: string;\n\n  /**\n   * Headers to send when making requests to endpoints\n   * sharing origins with the `rootIRI`.\n   */\n  headers?: Record<string, string>;\n\n  /**\n   * A map of origins and the headers to use when sending\n   * requests to them. Octiron will only send requests\n   * to endpoints which share origins with the `rootIRI`\n   * or are configured in the origins object. Appart\n   * from the accept header which has a common default\n   * value, headers are not shared between origins.\n   */\n  origins?: Record<string, Record<string, string>>;\n\n  /**\n   * The JSON-ld @vocab to use for octiron selectors.\n   */\n  vocab?: string;\n\n  /**\n   * Map of JSON-ld aliases to their values.\n   */\n  aliases?: Record<string, string>;\n\n  /**\n   * Primary initial state.\n   */\n  primary?: Record<string, EntityState>;\n\n  /**\n   * Alternatives initial state.\n   */\n  alternatives?: AlternativesState;\n\n  /**\n   * Handler objects.\n   */\n  handlers: Handler[];\n\n  /**\n   * Function which performs fetch.\n   */\n  fetcher?: Fetcher;\n\n  /**\n   * Hook used by SSR for awaiting response promises.\n   */\n  responseHook?: ResponseHook;\n};\n\nexport class Store {\n\n    #rootIRI: string;\n    #rootOrigin: string;\n    #headers: Headers;\n    #origins: Map<string, Headers>;\n    #vocab?: string | undefined;\n    #aliases: Map<string, string>;\n    #primary: PrimaryState = new Map();\n    #loading: Set<string> = new Set();\n    #alternatives: AlternativesState = new Map();\n    #handlers: Map<string, Handler>;\n    #keys: Set<string> = new Set();\n    #context: Context;\n    #termExpansions: Map<symbol, string | null> = new Map();\n    #fetcher?: Fetcher;\n    #responseHook?: ResponseHook;\n    #dependencies: Dependencies = new Map();\n    #listeners: Listeners = new Map();\n\n    constructor(args: StoreArgs) {\n      this.#rootIRI = args.rootIRI;\n      this.#rootOrigin = new URL(args.rootIRI).origin;\n      this.#vocab = args.vocab;\n      this.#fetcher = args.fetcher;\n      this.#responseHook = args.responseHook;\n\n      [this.#headers, this.#origins] = getInternalHeaderValues(args.headers, args.origins);\n      [this.#aliases, this.#context] = getJSONLdValues(args.vocab, args.aliases);\n\n      this.#handlers = new Map(args.handlers?.map?.((handler) => [handler.contentType, handler]));\n\n      if (args.primary != null) {\n        this.#primary = new Map(Object.entries(args.primary));\n      }\n\n      if (!this.#headers.has('accept')) {\n        this.#headers.set('accept', defaultAccept);\n      }\n\n      for (const origin of Object.values(this.#origins)) {\n        if (!origin.has('accept')) {\n          origin.set('accept', defaultAccept);\n        }\n      }\n    }\n\n    public get rootIRI() {\n      return this.#rootIRI;\n    }\n\n    public entity(iri: string) {\n      return this.#primary.get(iri);\n    }\n\n    public get vocab(): string | undefined {\n      return this.#vocab;\n    }\n\n    public get aliases(): Aliases {\n      return Object.fromEntries(\n        this.#aliases.entries()\n          .map(([key, value]) => [key.replace(/^/, ''), value])\n      );\n    }\n\n\n    public get context(): Context {\n      return this.#context;\n    }\n\n    /**\n     * Expands a term to a type.\n     *\n     * If an already expanded JSON-ld type is given it will\n     * return the input value.\n     */\n    public expand(termOrType: string): string {\n      const sym = Symbol.for(termOrType);\n      const cached = this.#termExpansions.get(sym);\n\n      if (cached != null) {\n        return cached;\n      }\n\n      let expanded: string | undefined;\n\n      if (this.#vocab != null && !/^[\\w\\d]+\\:/.test(termOrType)) {\n        expanded = this.#vocab + termOrType;\n      } else if (/https?:\\/\\//.test(termOrType)) {\n        // is a type\n        expanded = termOrType;\n      } else {\n        for (const [key, value] of this.#aliases) {\n          const reg = new RegExp(`^${key}:`);\n          if (reg.test(termOrType)) {\n            expanded = termOrType.replace(reg, value);\n            break;\n          }\n        }\n      }\n\n      this.#termExpansions.set(sym, expanded ?? termOrType);\n\n      return expanded ?? termOrType;\n    }\n\n    public select(selector: string, value?: JSONObject): SelectionDetails {\n      return getSelection({\n        selector,\n        value,\n        store: this,\n      });\n    }\n    /**\n     * Generates a unique key for server rendering only.\n     */\n    public key(): string {\n      while (true) {\n        const key = Math.random().toString(36).slice(2, 7);\n\n        if (!this.#keys.has(key)) {\n          this.#keys.add(key);\n\n          return key;\n        }\n      }\n    }\n\n    /**\n     * Creates a cleanup function which should be called\n     * when a subscriber unlistens.\n     */\n    #makeCleanupFn(key: symbol, details: SelectionDetails) {\n      return () => {\n        this.#listeners.delete(key);\n\n        for (const dependency of details.dependencies) {\n          this.#dependencies.delete(dependency);\n\n          if (isBrowserRender) {\n            setTimeout(() => {\n              if (this.#dependencies.get(dependency)?.size === 0) {\n                this.#primary.delete(dependency);\n              }\n            }, 5000);\n          }\n        }\n      }\n    }\n\n    /**\n     * Creates a unique key for the ir, method and accept headers\n     * to be used to mark the request's loading status.\n     */\n    #getLoadingKey(iri: string, method: string, accept?: string): string {\n      accept = accept ?? this.#headers.get('accept') ?? defaultAccept;\n\n      return `${method?.toLowerCase()}|${iri}|${accept.toLowerCase()}`;\n    }\n\n    public isLoading(iri: string): boolean {\n      const loadingKey = this.#getLoadingKey(iri, 'get');\n\n      return this.#loading.has(loadingKey);\n    }\n\n    /**\n     * Called on change to an entity. All listeners with dependencies in their\n     * selection for this entity have the latest selection result pushed to\n     * their listener functions.\n     */\n    #publish(iri: string, _contentType?: string): void {\n      const keys = this.#dependencies.get(iri);\n\n      if (keys == null) {\n        return;\n      }\n\n      for (const key of keys) {\n        const listenerDetails = this.#listeners.get(key);\n\n        if (listenerDetails == null) {\n          continue;\n        }\n\n        const details = getSelection<EntitySelectionResult | ValueSelectionResult>({\n          selector: listenerDetails.selector,\n          value: listenerDetails.value,\n          store: this,\n        } as Parameters<typeof getSelection>[0]);\n        const cleanup = this.#makeCleanupFn(key, details);\n\n        for (const dependency of details.dependencies) {\n          let depSet = this.#dependencies.get(dependency);\n\n          if (depSet == null) {\n            depSet = new Set([key]);\n\n            this.#dependencies.set(dependency, depSet);\n          } else {\n            depSet.add(key);\n          }\n        }\n\n        listenerDetails.cleanup = cleanup;\n        listenerDetails.listener(details);\n      }\n    }\n\n    #handleJSONLD({\n      iri,\n      res,\n      output,\n    }: {\n      iri: string;\n      res: Response;\n      output: JSONLDHandlerResult,\n    }): void {\n      const iris = [iri];\n\n      if (res.ok) {\n        this.#primary.set(iri, {\n          iri,\n          loading: false,\n          ok: true,\n          value: output.jsonld,\n        })\n      } else {\n        const reason = new HTTPFailure(res.status, res);\n\n        this.#primary.set(iri, {\n          iri,\n          loading: false,\n          ok: false,\n          value: output.jsonld,\n          status: res.status,\n          reason,\n        });\n      }\n\n      for (const entity of flattenIRIObjects(output.jsonld)) {\n        if (iris.includes(entity['@id'])) {\n          continue;\n        }\n\n        this.#primary.set(entity['@id'], {\n          iri: entity['@id'],\n          loading: false,\n          ok: true,\n          value: entity,\n        });\n      }\n\n      for (const iri in iris) {\n        this.#publish(iri);\n      }\n    }\n\n    async handleResponse(res: Response, iri: string = res.url.toString()) {\n      const contentType = res.headers.get('content-type')?.split?.(';')?.[0];\n\n      if (contentType == null) {\n        throw new Error('Content type not specified in response');\n      }\n\n      const handler = this.#handlers.get(contentType);\n\n      if (handler == null) {\n        throw new Error(`No handler configured for content type \"${contentType}\"`);\n      }\n\n      if (handler.integrationType === 'jsonld') {\n        const output = await handler.handler({\n          res,\n          store: this,\n        });\n\n        this.#handleJSONLD({\n          iri,\n          res,\n          output,\n        });\n      } else if (handler.integrationType === 'problem-details') {\n        throw new Error('Problem details response types not supported yet');\n      } else if (handler.integrationType === 'html') {\n        const output = await handler.handler({\n          res,\n          store: this,\n        });\n        let integrations = this.#alternatives.get(contentType);\n\n        if (integrations == null) {\n          integrations = new Map();\n\n          this.#alternatives.set(contentType, integrations);\n        }\n\n        integrations.set(iri, new HTMLIntegration(handler, {\n          iri,\n          contentType,\n          html: output.html,\n          id: output.id,\n        }));\n      } else if (handler.integrationType === 'html-fragments') {\n        const output = await handler.handler({\n          res,\n          store: this,\n        });\n        let integrations = this.#alternatives.get(contentType);\n\n        if (integrations == null) {\n          integrations = new Map();\n\n          this.#alternatives.set(contentType, integrations);\n        }\n\n        integrations.set(iri, new HTMLFragmentsIntegration(handler, {\n          iri,\n          contentType,\n          root: output.html,\n          ided: output.ided,\n          anon: output.anon,\n        }));\n      }\n\n      if (handler.integrationType !== 'jsonld') {\n        this.#publish(iri, contentType);\n      }\n    }\n\n    async #callFetcher(iri: string, args: {\n      method?: string;\n      accept?: string;\n      body?: string;\n    } = {}): Promise<void> {\n      let headers: Headers;\n      const url = new URL(iri);\n      const method = args.method || 'get';\n      const accept = args.accept ?? this.#headers.get('accept') ?? defaultAccept;\n      const loadingKey = this.#getLoadingKey(iri, method, args.accept);\n\n      if (url.origin === this.#rootOrigin) {\n        headers = new Headers(this.#headers);\n      } else if (this.#origins.has(url.origin)) {\n        headers = new Headers(this.#origins.get(url.origin));\n      } else {\n        throw new Error('Unconfigured origin');\n      }\n\n      if (accept != null) {\n        headers.set('accept', accept);\n      } else if (headers.get('accept') == null) {\n        headers.set('accept', defaultAccept);\n      }\n\n      this.#loading.add(loadingKey);\n\n      mithrilRedraw();\n\n      // This promise wrapping is so SSR can hook in and await the promise.\n      const promise = new Promise<Response>((resolve) => {\n        (async () => {\n          let res: Response;\n\n          if (this.#fetcher != null) {\n            res =  await this.#fetcher(iri, {\n              method,\n              headers,\n              body: args.body,\n            });\n          } else {\n            res = await fetch(iri, {\n              method,\n              headers,\n              body: args.body,\n            });\n          }\n\n          await this.handleResponse(res, iri);\n\n          this.#loading.delete(loadingKey);\n\n          mithrilRedraw();\n\n          resolve(res);\n        })();\n      });\n\n      if (this.#responseHook != null) {\n        this.#responseHook(promise);\n      }\n\n      await promise;\n    }\n\n    public subscribe({\n      key,\n      selector,\n      value,\n      listener,\n    }: {\n      key: symbol;\n      selector: string;\n      value?: JSONObject;\n      listener: SelectionListener;\n    }) {\n      const details = getSelection<ReadonlySelectionResult>({\n        selector,\n        value,\n        store: this,\n      });\n\n      const cleanup = this.#makeCleanupFn(key, details);\n\n      for (const dependency of details.dependencies) {\n        const depSet = this.#dependencies.get(dependency);\n\n        if (depSet == null) {\n          this.#dependencies.set(dependency, new Set([key]));\n        } else {\n          depSet.add(key);\n        }\n      }\n\n      this.#listeners.set(key, {\n        key,\n        selector,\n        value,\n        required: details.required,\n        dependencies: details.dependencies,\n        listener,\n        cleanup,\n      });\n\n      return details;\n    }\n\n    public unsubscribe(key: symbol) {\n      this.#listeners.get(key)?.cleanup();\n    }\n\n    public async fetch(iri: string): Promise<SuccessEntityState | FailureEntityState> {\n      await this.#callFetcher(iri);\n\n      return this.#primary.get(iri) as SuccessEntityState | FailureEntityState;\n    }\n\n    /**\n     * Submits an action. Like fetch this will overwrite\n     * entities in the store with any entities returned\n     * in the reponse.\n     *\n     * @param {string} iri                The iri of the request.\n     * @param {SubmitArgs} [args]         Arguments to pass to the fetch call.\n     * @param {string} [args.method]      The http submit method.\n     * @param {string} [args.contentType] The content type header value.\n     * @param {string} [args.body]        The body of the request.\n     */\n    public async submit(iri: string, args: SubmitArgs): Promise<SuccessEntityState | FailureEntityState> {\n      await this.#callFetcher(iri, args);\n\n      return this.entity(iri) as SuccessEntityState | FailureEntityState;\n    }\n\n    static fromInitialState({\n      headers,\n      origins,\n      handlers = [],\n    }: {\n      headers?: Record<string, string>;\n      origins?: Record<string, Record<string, string>>;\n      handlers?: Handler[];\n    }): Store {\n      const el = document.getElementById('oct-state-info') as HTMLScriptElement;\n      const stateInfo = JSON.parse(el.innerText) as StateInfo;\n      const alternatives: AlternativesState = new Map();\n      const handlersMap: Record<string, Handler> = handlers.reduce((acc, handler) => ({\n        ...acc,\n        [handler.contentType]: handler,\n      }), {});\n\n      for (const [integrationType, entities] of Object.entries(stateInfo.alternatives)) {\n        for (const stateInfo of entities) {\n          const handler = handlersMap[stateInfo.contentType];\n          const cls = integrationClasses[integrationType as IntegrationType];\n\n          if (cls.type !== handler.integrationType) {\n            continue;\n          }\n\n          // deno-lint-ignore no-explicit-any\n          const state = cls.fromInitialState(handler as any, stateInfo as any);\n\n          if (state == null) {\n            continue;\n          }\n\n          let integrations = alternatives.get(state.contentType);\n\n          if (integrations == null) {\n            integrations = new Map();\n\n            alternatives.set(state.contentType, integrations);\n          }\n\n          integrations.set(state.iri, state);\n        }\n      }\n\n      return new Store({\n        handlers,\n        alternatives,\n        headers,\n        origins,\n        rootIRI: stateInfo.rootIRI,\n        vocab: stateInfo.vocab,\n        aliases: stateInfo.aliases,\n        primary: stateInfo.primary,\n      });\n    }\n\n    public toInitialState(): string {\n      let html = '';\n      const stateInfo: StateInfo = {\n        rootIRI: this.#rootIRI,\n        vocab: this.#vocab,\n        aliases: Object.fromEntries(this.#aliases),\n        primary: Object.fromEntries(this.#primary),\n        alternatives: {},\n      };\n\n      for (const alternative of this.#alternatives.values()) {\n        for (const integration of alternative.values()) {\n          if (stateInfo.alternatives[integration.integrationType] == null) {\n            stateInfo.alternatives[integration.integrationType] = [\n              integration.getStateInfo(),\n            ];\n          } else {\n            stateInfo.alternatives[integration.integrationType].push(integration.getStateInfo());\n          }\n\n          html += integration.toInitialState();\n        }\n      }\n\n      html += `<script id=\"oct-state-info\" type=\"application/json\">${JSON.stringify(stateInfo)}</script>`\n\n      return html;\n    }\n\n}\n", "import { Store } from \"../store.ts\";\nimport type { TypeDef, TypeDefs } from \"../types/octiron.ts\";\n\n\nexport function makeTypeDefs<\n  const Type extends string = string,\n  // deno-lint-ignore no-explicit-any\n  const TypeDefList extends TypeDef<any, Type> = TypeDef<any, Type>,\n>(\n  store: Store,\n  ...typeDefs: Readonly<TypeDefList[]>\n): TypeDefs<Type, TypeDefList>;\n\nexport function makeTypeDefs<\n  const Type extends string = string,\n  // deno-lint-ignore no-explicit-any\n  const TypeDefList extends TypeDef<any, Type> = TypeDef<any, Type>,\n>(\n  ...typeDefs: Readonly<TypeDefList[]>\n): TypeDefs<Type, TypeDefList>;\n\n/**\n * @description\n * Aggregates a list of type defs into an easier to access\n * type def config object.\n *\n * @param typeDefs The type defs to aggregate.\n */\nexport function makeTypeDefs<\n  const Type extends string = string,\n  // deno-lint-ignore no-explicit-any\n  const TypeDefList extends TypeDef<any, Type> = TypeDef<any, Type>,\n>(\n  // deno-lint-ignore no-explicit-any\n  storeOrTypeDef: Store | TypeDef<any, Type>,\n  ...typeDefs: Readonly<TypeDefList[]>\n): TypeDefs<Type, TypeDefList> {\n  const config = {} as TypeDefs<Type, TypeDefList>;\n\n  if (storeOrTypeDef instanceof Store) {\n    for (const typeDef of typeDefs) {\n      // deno-lint-ignore no-explicit-any\n      (config as any)[storeOrTypeDef.expand(typeDef.type)] = typeDef;\n    }\n  } else {\n    // deno-lint-ignore no-explicit-any\n    (config[storeOrTypeDef.type] as any) = storeOrTypeDef;\n    for (const typeDef of typeDefs) {\n      // deno-lint-ignore no-explicit-any\n      (config as any)[typeDef.type] = typeDef;\n    }\n  }\n\n  return config;\n}\n", "\ntype ClassArg =\n  | undefined\n  | null\n  | string\n  | string[]\n  | Record<string, boolean | undefined>\n;\n\n/**\n * Merges arguments into a single css class string\n */\nexport function classes(...classArgs: ClassArg[]) {\n  const cls: string[] = [];\n\n  for (const classArg of classArgs) {\n    if (typeof classArg === 'undefined' || classArg === null) {\n      continue;\n    } else if (typeof classArg === 'string') {\n      cls.push(classArg);\n    } else if (Array.isArray(classArg)) {\n      for (const name of classArg) {\n        cls.push(name);\n      }\n    } else {\n      for (const [name, active] of Object.entries(classArg)) {\n        if (active) {\n          cls.push(name);\n        }\n      }\n    }\n  }\n\n  return cls.join(' ');\n}\n", "import type { JSONValue } from '../types/common.ts';\nimport type { TypeDef } from '../types/octiron.ts';\n\n/**\n * @description\n * Utility for creating a well typed typeDef.\n *\n * @param typeDef An object to property define the types for.\n */\nexport function makeTypeDef<\n  const Model extends JSONValue = JSONValue,\n  const Type extends string = string,\n>(\n  typeDef: TypeDef<Model, Type>,\n): TypeDef<Model, Type> {\n  return typeDef;\n}\n", "import type { Handler } from \"../types/store.ts\";\nimport { isJSONObject } from '../utils/isJSONObject.ts';\nimport jsonld from 'jsonld';\n\n\nexport const jsonLDHandler: Handler = {\n  integrationType: 'jsonld',\n  contentType: 'application/ld+json',\n  handler: async ({ res }) => {\n    const json = await res.json();\n\n    // cannot use json-ld ops on scalar types\n    if (!isJSONObject(json) && !Array.isArray(json)) {\n      throw new Error('JSON-LD Document should be an object');\n    }\n\n    const expanded = await jsonld.expand(json, {\n      documentLoader: async (url: string) => {\n        const res = await fetch(url, {\n          headers: {\n            'accept': 'application/ld+json',\n          }\n        });\n        const document = await res.json();\n\n        return {\n          documentUrl: url,\n          document,\n        };\n      }\n    });\n\n    const compacted = await jsonld.compact(expanded, {});\n\n    return {\n      jsonld: compacted,\n    };\n  },\n};\n", "import m from 'mithril';\nimport type { JSONArray, JSONObject, JSONPrimitive, JSONValue } from \"../types/common.ts\";\nimport { isJSONObject } from \"../utils/isJSONObject.ts\";\n\n\nexport type OctironJSONAttrs = {\n  // If given object keys will be rendered as clickable links to their own\n  // selection. This is used by `OctironExplorer` to allow navigation of the\n  // API serving the JSON-ld.\n  selector?: string;\n\n  // The JSON-ld value to render.\n  value: JSONValue;\n\n  location?: URL;\n};\n\nexport const OctironJSON: m.ClosureComponent<OctironJSONAttrs> = () => {\n  function renderIRI(iri: string) {\n    return m('code', [\n      m('span.oct-json-quote', '\"'),\n      m('a.oct-json-iri', {\n        href: iri,\n      }, iri),\n      m('span.oct-json-quote', '\"'),\n    ]);\n  }\n\n  function renderPrimitive(value: JSONPrimitive) {\n    const className = typeof value === 'boolean'\n      ? 'oct-json-boolean'\n      : typeof value === 'number'\n      ? 'oct-json-number'\n      : 'oct-json-string';\n\n    let presentValue: m.Children;\n\n    if (typeof value === 'boolean' && value) {\n      presentValue = 'true';\n    } else if (typeof value === 'boolean') {\n      presentValue === 'false';\n    } else if (typeof value === 'string') {\n      presentValue = [\n        m('span.oct-json-quote', '\"'),\n        value,\n        m('span.oct-json-quote', '\"'),\n      ];\n    } else {\n      presentValue = value;\n    }\n\n    return m('code', { className }, presentValue);\n  }\n\n  function renderArray(list: JSONArray, url?: URL, selector: string = '') {\n    const children: m.Children[] = [];\n\n    for (let index = 0; index < list.length; index++) {\n      const value = list[index];\n      children.push(\n        m(\n          'li.oct-json-arr-item',\n          maybeRenderDetails(null, value, url, selector),\n        ),\n      );\n    }\n\n    return m('ul.oct-json-arr', children);\n  }\n\n  const terminalTypes = ['@id', '@type', '@context'];\n  function renderObject(value: JSONObject, url?: URL, selector: string = '') {\n    const items: m.Children[] = [];\n    const list = Object.entries(value).toSorted((item) =>\n      item[0] === '@context' ? 1 : -1\n    );\n\n    for (let index = 0; index < list.length; index++) {\n      const [term, value] = list[index];\n      let children: m.Children;\n      const summary = [\n        m('span.oct-json-quote', '\"'),\n        m('span.oct-json-obj-key', term),\n        m('span.oct-json-quote', '\"'),\n        m('span.oct-json-obj-colon', ': '),\n      ];\n\n      if (term === '@id') {\n        children = [m('code', summary), renderIRI(value as string)];\n      } else if (url == null || terminalTypes.includes(term)) {\n        children = maybeRenderDetails(summary, value);\n      } else if (term.startsWith('@')) {\n        children = maybeRenderDetails(summary, value, url, selector);\n      } else {\n        const currentSelector = `${selector} ${term}`;\n        const currentURL = new URL(url);\n\n        currentURL.searchParams.set('selector', currentSelector);\n\n        const summary = [\n          m('span.oct-json-quote', '\"'),\n          m(\n            'span.oct-json-obj-key',\n            m(\n              'a',\n              { href: currentURL },\n              term,\n            ),\n          ),\n          m('span.oct-json-quote', '\"'),\n          m('span.oct-json-obj-colon', ': '),\n        ];\n        children = maybeRenderDetails(summary, value, url, currentSelector);\n      }\n\n      items.push(m('li.oct-json-obj-item', children));\n    }\n\n    return m('ul.oct-json-obj', items);\n  }\n\n  function maybeRenderDetails(\n    summary: m.Children,\n    value: JSONValue,\n    url?: URL,\n    selector: string = '',\n  ) {\n    if (isJSONObject(value)) {\n      return [\n        m(\n          'details.oct-json-details',\n          { open: true },\n          m(\n            'summary.oct-json-details-sum',\n            m('code', summary, m('span.oct-json-obj-open', '{')),\n          ),\n          renderValue(value, url, selector),\n        ),\n        m('code.oct-json-obj-close', '}'),\n      ];\n    } else if (Array.isArray(value)) {\n      return [\n        m(\n          'details.oct-json-details',\n          { open: true },\n          m(\n            'summary.oct-json-details-sum',\n            m('code', summary, m('span.oct-json-obj-open', '[')),\n          ),\n          renderValue(value, url, selector),\n        ),\n        m('code.oct-json-obj-close', ']'),\n      ];\n    }\n\n    return [m('code', summary), renderValue(value, url, selector)];\n  }\n\n  function renderValue(value: JSONValue, url?: URL, selector: string = '') {\n    if (isJSONObject(value)) {\n      return renderObject(value, url, selector);\n    } else if (Array.isArray(value)) {\n      return renderArray(value, url, selector);\n    }\n\n    return renderPrimitive(value);\n  }\n\n  return {\n    view: ({ attrs: { value, selector, location } }) => {\n      const url = location != null ? new URL(location) : undefined;\n      \n      return m('.oct-json', [\n        maybeRenderDetails(\n          null,\n          value,\n          url,\n          typeof selector === 'string' ? selector.trim() : undefined,\n        ),\n      ]);\n    },\n  };\n};\n", "import m from 'mithril';\nimport * as jsonld from 'jsonld';\nimport { mithrilRedraw } from \"../utils/mithrilRedraw.ts\";\nimport type { JSONObject } from \"../types/common.ts\";\nimport type { Octiron } from \"../types/octiron.ts\";\nimport { OctironJSON } from \"./OctironJSON.ts\";\nimport { flattenIRIObjects } from \"../utils/flattenIRIObjects.ts\";\n\nexport type OctironDebugAttrs = {\n  o: Octiron;\n  selector?: string;\n  location?: URL;\n};\n\nexport const OctironDebug: m.ClosureComponent<OctironDebugAttrs> = ({\n  attrs,\n}) => {\n  let currentAttrs = attrs;\n  let value = attrs.o.value as JSONObject;\n  let rendered: m.Children;\n  let displayStyle: 'value' | 'action-value' | 'component' | 'expanded' | 'flattened' = 'value';\n\n  async function onRender(redraw: boolean = true) {\n    const { o } = currentAttrs;\n    if (displayStyle === 'value') {\n      rendered = m(OctironJSON, { value, selector: currentAttrs.selector, location: currentAttrs.location });\n    } else if (\n      displayStyle === 'action-value' && (\n        o.octironType === 'action' ||\n        o.octironType === 'action-selection'\n      )\n    ) {\n      rendered = m(OctironJSON, { value: o.actionValue.value, selector: currentAttrs.selector, location: currentAttrs.location })\n    } else if (displayStyle === 'expanded') {\n      const expanded = await jsonld.compact(value, attrs.o.store.context);\n\n      rendered = m(OctironJSON, {\n        value: expanded,\n        location: currentAttrs.location,\n      });\n      // rendered = JSON.stringify(renderValue, null, 2);\n    } else if (displayStyle === 'flattened') {\n      const flattened = flattenIRIObjects(value);\n      rendered = m(OctironJSON, {\n        value: flattened,\n        selector: currentAttrs.selector,\n        location: currentAttrs.location,\n      });\n    }\n\n    if (redraw) {\n      mithrilRedraw();\n    }\n  }\n\n  function onSetValue(e: MouseEvent & { redraw: boolean }) {\n    e.redraw = false;\n    displayStyle = 'value';\n\n    onRender();\n  }\n\n  function onSetActionValue(e: MouseEvent & { redraw: boolean }) {\n    e.redraw = false;\n    displayStyle = 'action-value';\n\n    onRender();\n  }\n\n  function onSetComponent(e: MouseEvent & { redraw: boolean }) {\n    e.redraw = false;\n    displayStyle = 'component';\n\n    onRender();\n  }\n\n  function onSetExpanded(e: MouseEvent & { redraw: boolean }) {\n    e.redraw = false;\n    displayStyle = 'expanded';\n\n    onRender();\n  }\n\n  function onSetFlattened(e: MouseEvent & { redraw: boolean }) {\n    e.redraw = false;\n    displayStyle = 'flattened';\n\n    onRender();\n  }\n\n  return {\n    oninit: ({ attrs }) => {\n      currentAttrs = attrs;\n\n      onRender(false);\n    },\n    onbeforeupdate: ({ attrs }) => {\n      if (attrs.o.value !== value) {\n        value = attrs.o.value as JSONObject;\n\n        onRender(true);\n      }\n    },\n    view: ({ attrs: { o } }) => {\n      const actions: m.Children[] = [];\n      let children: m.Children;\n      let actionValueAction: m.Children;\n\n      if (displayStyle === 'component') {\n        children = m('.oct-debug-body', o.default());\n      } else {\n        children = m('.oct-debug-body', rendered);\n      }\n\n      if (o.octironType === 'action' || o.octironType === 'action-selection') {\n        actionValueAction = m('button.oct-button', { type: 'button', onclick: onSetActionValue }, 'Action value');\n      }\n\n      return m(\n        'aside.oct-debug',\n        m(\n          '.oct-debug-controls',\n          m(\n            '.oct-button-group',\n            m('button.oct-button', { type: 'button', onclick: onSetValue }, 'Value'),\n            actionValueAction,\n            m('button.oct-button', { type: 'button', onclick: onSetComponent }, 'Component'),\n            m('button.oct-button', { type: 'button', onclick: () => console.log(o) }, 'Log'),\n            ...actions,\n          ),\n        ),\n        children,\n      );\n    },\n  };\n};\n", "import m from 'mithril';\nimport type { AnyComponent, Octiron } from \"../types/octiron.ts\";\nimport { OctironDebug } from \"./OctironDebug.ts\";\n\n\nexport type OctironExplorerAttrs = {\n  selector?: string;\n  presentationStyle?: 'debug' | 'components';\n  autofocus?: boolean;\n  onChange?: (\n    selector: string,\n    presentationStyle: 'debug' | 'components',\n  ) => void;\n  location?: URL;\n  o: Octiron;\n};\n\nexport const OctironExplorer: m.ClosureComponent<OctironExplorerAttrs> = ({\n  attrs,\n}) => {\n  let value: string = attrs.selector || '';\n  let previousSelector: string = value;\n  let selector: string = value;\n  let presentationStyle: 'debug' | 'components' = attrs.presentationStyle || 'debug';\n  let onChange = attrs.onChange;\n  const fallbackComponent: AnyComponent = {\n    view: ({ attrs: { o } }) => {\n      return m(OctironDebug, { o, location: attrs.location });\n    },\n  };\n\n  function onSearch(evt: KeyboardEvent) {\n    value = (evt.target as HTMLInputElement).value;\n  }\n\n  function onEnter(evt: KeyboardEvent) {\n    if (evt.key === 'Enter') {\n      onApply();\n    }\n  }\n\n  function onApply() {\n    selector = value;\n\n    if (typeof onChange === 'function') {\n      onChange(selector, presentationStyle);\n    }\n  }\n\n  function onSetDebug() {\n    presentationStyle = 'debug';\n\n    if (typeof onChange === 'function') {\n      onChange(selector, presentationStyle);\n    }\n  }\n\n  function onSetComponents() {\n    presentationStyle = 'components';\n\n    if (typeof onChange === 'function') {\n      onChange(selector, presentationStyle);\n    }\n  }\n\n  return {\n    oninit: ({ attrs }) => {\n      onChange = attrs.onChange;\n    },\n    onbeforeupdate: ({ attrs }) => {\n      selector = attrs.selector ?? '';\n\n      if (selector !== previousSelector) {\n        value = previousSelector = selector;\n      }\n\n      onChange = attrs.onChange;\n    },\n    view: ({ attrs: { autofocus, o } }) => {\n      let children: m.Children;\n\n      if (selector.length !== 0 && presentationStyle === 'debug') {\n        children = o.root(selector, (o) => m(OctironDebug, { o, selector, location: attrs.location }));\n      } else if (selector.length !== 0) {\n        children = o.root(\n          selector,\n          (o) =>\n            m('div', o.default({ fallbackComponent, attrs: { selector } })),\n        );\n      } else if (presentationStyle === 'debug') {\n        children = o.root((o) => m(OctironDebug, { o, selector, location: attrs.location }));\n      } else {\n        children = o.root((o) =>\n          m('div', o.default({ fallbackComponent, attrs: { selector } }))\n        );\n      }\n\n      return m('.oct-explorer', m('.oct-explorer-controls',\n          m('.oct-form-group', [\n            m('input', {\n              value,\n              autofocus,\n              oninput: onSearch,\n              onkeypress: onEnter,\n            }),\n            m(\n              'button.oct-button',\n              {\n                type: 'button',\n                disabled: selector === value,\n                onclick: onApply,\n              },\n              'Apply',\n            ),\n          ]),\n          m('.oct-button-group',\n            m(\n              'button.oct-button',\n              {\n                type: 'button',\n                disabled: presentationStyle === 'debug',\n                onclick: onSetDebug,\n              },\n              'Debug',\n            ),\n            m(\n              'button.oct-button',\n              {\n                type: 'button',\n                disabled: presentationStyle === 'components',\n                onclick: onSetComponents,\n              },\n              'Components',\n            ),\n          ),\n        ),\n        m('pre.oct-explorer-body', children),\n      );\n    },\n  };\n};\n", "import m from 'mithril';\nimport type { OctironAction } from \"../types/octiron.ts\";\n\nexport type OctironFormAttrs = {\n  o: OctironAction;\n  id?: string;\n  class?: string;\n};\n\nexport const OctironForm: m.ClosureComponent<OctironFormAttrs> = (vnode) => {\n  const o = vnode.attrs.o;\n  const method = o.method?.toUpperCase() as 'GET' || 'POST' || 'GET';\n  const enctypes = {\n    GET: 'application/x-www-form-urlencoded',\n    POST: 'multipart/form-data',\n  } as const;\n\n  return {\n    view: ({ attrs: { o, ...attrs }, children }) => {\n      return m(\n        'form.oct-form',\n        {\n          ...attrs,\n          method,\n          enctype: enctypes[method || 'GET'],\n          action: o.url,\n          onSubmit: (evt: SubmitEvent) => {\n            evt.preventDefault();\n\n            o.submit();\n          },\n        },\n        children,\n      );\n    },\n  };\n};\n", "import m from 'mithril';\nimport type { OctironAction } from \"../types/octiron.ts\";\nimport { classes } from \"../utils/classes.ts\";\n\nexport type OctironSubmitButtonAttrs = {\n  o: OctironAction;\n  id?: string;\n  class?: string;\n};\n\nexport const OctironSubmitButton: m.ClosureComponent<\n  OctironSubmitButtonAttrs\n> = () => {\n  return {\n    view: ({ attrs, children }) => {\n      return m(\n        'button.oct-button.oct-submit-button',\n        {\n          id: attrs.id,\n          type: 'submit',\n          class: classes(attrs.class),\n        },\n        children,\n      );\n    },\n  };\n};\n", "import type { OctironRoot, TypeDef } from \"./types/octiron.ts\";\nimport { rootFactory } from \"./factories/rootFactory.ts\";\nimport { makeTypeDefs } from \"./utils/makeTypeDefs.ts\";\nimport { Store } from \"./store.ts\";\n\nexport * from './types/common.ts';\nexport * from './types/store.ts';\nexport * from './types/octiron.ts';\nexport * from './store.ts';\nexport * from './utils/classes.ts';\nexport * from './utils/makeTypeDef.ts';\nexport * from './utils/makeTypeDefs.ts';\nexport * from './handlers/jsonLDHandler.ts';\nexport * from './components/OctironJSON.ts';\nexport * from './components/OctironDebug.ts';\nexport * from './components/OctironExplorer.ts';\nexport * from './components/OctironForm.ts';\nexport * from './components/OctironSubmitButton.ts';\n\n/**\n * Creates a root octiron instance.\n */\nexport default function octiron({\n  typeDefs,\n  ...storeArgs\n}: ConstructorParameters<typeof Store>[0] & {\n  // deno-lint-ignore no-explicit-any\n  typeDefs?: TypeDef<any>[];\n}): OctironRoot {\n  const store = new Store(storeArgs);\n  const config = typeDefs != null\n    ? makeTypeDefs(store, ...typeDefs)\n    : {};\n\n  return rootFactory({\n    store,\n    typeDefs: config,\n  });\n}\n\noctiron.fromInitialState = ({\n  typeDefs,\n  ...storeArgs\n}: Parameters<typeof Store.fromInitialState>[0] & {\n  // deno-lint-ignore no-explicit-any\n  typeDefs?: TypeDef<any>[];\n}) => {\n  const store = Store.fromInitialState({\n    ...storeArgs,\n  });\n  const config = typeDefs != null\n    ? makeTypeDefs(store, ...typeDefs)\n    : {};\n\n  return rootFactory({\n    store,\n    typeDefs: config,\n  });\n}\n"],
  "mappings": "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",
  "names": ["require_uri_templates", "__commonJSMin", "exports", "module", "global", "factory", "uriTemplateGlobalModifiers", "uriTemplateSuffices", "urlEscapedChars", "notReallyPercentEncode", "string", "doubleEncoded", "isPercentEncoded", "uriTemplateSubstitution", "spec", "modifier", "separator", "prefix", "shouldEscape", "showVariables", "trimEmptyString", "varNames", "varList", "varSpecs", "varSpecMap", "i", "varName", "truncate", "parts", "suffices", "varSpec", "subFunction", "valueFunction", "result", "startIndex", "value", "j", "first", "key", "guessFunction", "stringValue", "resultObj", "strict", "arrayValue", "hasEquals", "innerArrayValue", "objectValue", "innerValue", "innerVarName", "k", "specIndexMap", "firstStarred", "lastStarred", "UriTemplate", "template", "textParts", "prefixes", "substitutions", "unSubstitutions", "part", "remainder", "funcs", "substitution", "substituted", "options", "nextPart", "offset", "endPart", "nextPartPos", "obj", "uri", "m", "m", "m", "getComponent", "style", "datatype", "type", "firstPickComponent", "typeDefs", "fallbackComponent", "_a", "_b", "_c", "item", "unravelArgs", "arg1", "arg2", "arg3", "selector", "args", "view", "o", "isJSONObject", "value", "isTypeObject", "value", "isJSONObject", "item", "getValueType", "value", "isTypeObject", "m", "replace", "source", "find", "repl", "res", "rem", "beg", "end", "decodeFragmentSegments", "segments", "i", "len", "encodeFragmentSegments", "decodePointerSegments", "encodePointerSegments", "decodePointer", "ptr", "encodePointer", "path", "decodeUriFragmentIdentifier", "encodeUriFragmentIdentifier", "InvalidRelativePointerError", "decodeRelativePointer", "first", "toArrayIndexReference", "arr", "idx", "cursor", "compilePointerDereference", "body", "it", "_", "setValueAtPath", "target", "val", "force", "step", "p", "n", "unsetValueAtPath", "looksLikeFragment", "pickDecoder", "decodePtrInit", "isObject", "value", "shouldDescend", "obj", "JsonReference", "descendingVisit", "visitor", "encoder", "distinctObjects", "q", "JsonPointer", "j", "keys", "$ptr", "$frg", "$get", "_JsonPointer", "pointer", "fragmentId", "v", "decoded", "r", "name", "other", "parent", "$pointer", "candidate", "ref", "ActionStateRenderer", "submitResult", "o", "setInstance", "attrs", "selectionFactory", "type", "selector", "args", "view", "children", "shouldRender", "import_uri_templates", "getSubmitDetails", "payload", "action", "store", "urlTemplate", "body", "method", "contentType", "encodingType", "target", "item", "isJSONObject", "url", "uriTemplates", "json", "key", "value", "m", "isBrowserRender", "mithrilRedraw", "isBrowserRender", "m", "m", "octironFactory", "self", "predicate", "children", "actionSelectionFactory", "internals", "args", "_a", "factoryArgs", "uniqueId", "refs", "onUpdate", "value", "self", "octironFactory", "onSelectionUpdate", "pointer", "interceptor", "prev", "isJSONObject", "next", "ptr", "JsonPointer", "arg1", "__async", "mithrilRedraw", "arg2", "arg3", "selector", "childSelector", "view", "unravelArgs", "m", "SelectionRenderer", "updateArgs", "ActionSelectionRenderer", "attrs", "firstPickComponent", "fallbackComponent", "component", "getComponent", "getValueType", "onChange", "children", "termOrType", "type", "prevValue", "nextValue", "__spreadProps", "__spreadValues", "incomming", "key", "escapeJSONPointerParts", "parts", "part", "getIterableValue", "value", "isIRIObject", "value", "isJSONObject", "isIterable", "value", "isJSONObject", "isMetadataObject", "value", "keys", "term", "isValueObject", "value", "selectorRe", "parseSelectorString", "selector", "store", "_a", "_b", "match", "selectors", "subject", "filter", "httpRe", "scmCtxRe", "scmTypeRe", "resolvePropertyValueSpecification", "spec", "store", "_a", "pvs", "scmAlias", "scmVocab", "key", "value", "term", "type", "result", "CircularSelectionError", "transformProcessedDetails", "processing", "index", "element", "getSelection", "selectorStr", "value", "actionValue", "store", "details", "iri", "filter", "selector", "parseSelectorString", "selectEntity", "traverseSelector", "makePointer", "pointer", "addition", "escapeJSONPointerParts", "passesFilter", "isTraversable", "resolveValue", "keySource", "datatype", "spec", "isIterable", "isJSONObject", "pvs", "resolvePropertyValueSpecification", "isValueObject", "list", "getIterableValue", "item", "isIRIObject", "isMetadataObject", "selectTypedValue", "type", "next", "rest", "traversedActionValue", "handledIRIs", "cache", "ActionSelectionRenderer", "vnode", "currentAttrs", "details", "instances", "createInstances", "hasChanges", "nextKeys", "selectionResult", "next", "prev", "internals", "selection", "selectionFactory", "__spreadProps", "__spreadValues", "actionSelection", "actionSelectionFactory", "prevKeys", "key", "mithrilRedraw", "updateSelection", "selector", "value", "actionValue", "store", "isJSONObject", "getSelection", "attrs", "instance", "view", "args", "pre", "sep", "post", "fallback", "list", "children", "index", "octiron", "actionFactory", "internals", "args", "factoryArgs", "payload", "submitResult", "isJSONObject", "key", "value", "url", "method", "body", "getSubmitDetails", "refs", "onSubmit", "__async", "contentType", "encodingType", "mithrilRedraw", "err", "onUpdate", "prev", "next", "__spreadValues", "self", "onPointerUpdate", "pointer", "ptr", "JsonPointer", "predicate", "children", "arg1", "arg2", "arg3", "selector", "childSelector", "view", "unravelArgs", "m", "SelectionRenderer", "attrs", "firstPickComponent", "fallbackComponent", "component", "getComponent", "getValueType", "pre", "sep", "post", "start", "end", "ActionStateRenderer", "ActionSelectionRenderer", "PerformRenderer", "termOrType", "type", "prevValue", "nextValue", "__spreadProps", "PerformRenderer", "attrs", "key", "currentAttrs", "details", "instances", "createInstances", "hasChanges", "nextKeys", "selectionResult", "next", "prev", "octiron", "selectionFactory", "action", "actionFactory", "prevKeys", "mithrilRedraw", "fetchRequired", "required", "__async", "promises", "iri", "listener", "subscribe", "selector", "internals", "result", "isIRIObject", "instance", "view", "args", "pre", "sep", "post", "fallback", "list", "children", "index", "selectionFactory", "internals", "args", "factoryArgs", "type", "getValueType", "refs", "self", "predicate", "children", "arg1", "arg2", "arg3", "selector", "childSelector", "view", "unravelArgs", "m", "SelectionRenderer", "isJSONObject", "attrs", "firstPickComponent", "fallbackComponent", "component", "getComponent", "pre", "sep", "post", "start", "end", "PerformRenderer", "key", "value", "preKey", "postKey", "shouldReselect", "next", "prev", "SelectionRenderer", "vnode", "key", "currentAttrs", "details", "instances", "createInstances", "hasChanges", "store", "typeDefs", "parent", "nextKeys", "prevKeys", "mithrilRedraw", "selectionResult", "octiron", "selectionFactory", "fetchRequired", "required", "__async", "promises", "iri", "listener", "subscribe", "isJSONObject", "attrs", "reselect", "view", "pre", "sep", "post", "start", "end", "predicate", "fallback", "children", "list", "m", "index", "rootFactory", "internals", "self", "predicate", "children", "o", "arg1", "arg2", "arg3", "selector", "childSelector", "args", "view", "unravelArgs", "m", "SelectionRenderer", "m", "HTMLFragmentsIntegrationComponent", "fragment", "rootHTML", "fragmentsHTML", "html", "m", "_handler", "_rendered", "_iri", "_fragment", "_contentType", "_rootHTML", "_idedHTML", "_anonHTML", "_fragmentsHTML", "_HTMLFragmentsIntegration", "handler", "iri", "contentType", "root", "ided", "anon", "__publicField", "__privateAdd", "__privateSet", "__spreadValues", "__privateGet", "o", "fragmentHTML", "hasRoot", "idedHTML", "anonHTML", "rootEl", "el", "dom", "HTMLFragmentsIntegration", "m", "HTMLIntegrationComponent", "onRemove", "dom", "o", "el", "handler", "html", "m", "_handler", "_rendered", "_iri", "_contentType", "_html", "_id", "_el", "_HTMLIntegration", "iri", "contentType", "id", "__publicField", "__privateAdd", "__privateSet", "__privateGet", "isBrowserRender", "HTMLIntegration", "_status", "_res", "HTTPFailure", "status", "res", "__privateAdd", "__privateSet", "__privateGet", "arg", "flattenIRIObjects", "value", "agg", "item", "isJSONObject", "isMetadataObject", "isIRIObject", "isValueObject", "isIterable", "getIterableValue", "term", "defaultAccept", "integrationClasses", "HTMLIntegration", "HTMLFragmentsIntegration", "getJSONLdValues", "vocab", "aliases", "aliasMap", "context", "key", "value", "getInternalHeaderValues", "headers", "origins", "internalHeaders", "internalOrigins", "origin", "_rootIRI", "_rootOrigin", "_headers", "_origins", "_vocab", "_aliases", "_primary", "_loading", "_alternatives", "_handlers", "_keys", "_context", "_termExpansions", "_fetcher", "_responseHook", "_dependencies", "_listeners", "_Store_instances", "makeCleanupFn_fn", "getLoadingKey_fn", "publish_fn", "handleJSONLD_fn", "callFetcher_fn", "_Store", "args", "__privateAdd", "_a", "_b", "__privateSet", "__privateWrapper", "handler", "__privateGet", "iri", "termOrType", "sym", "cached", "expanded", "reg", "selector", "getSelection", "loadingKey", "__privateMethod", "_0", "__async", "res", "_c", "contentType", "output", "integrations", "listener", "details", "cleanup", "dependency", "depSet", "handlers", "el", "stateInfo", "alternatives", "handlersMap", "acc", "__spreadProps", "__spreadValues", "integrationType", "entities", "cls", "state", "html", "alternative", "integration", "isBrowserRender", "method", "accept", "_contentType", "keys", "listenerDetails", "iris", "reason", "HTTPFailure", "entity", "flattenIRIObjects", "url", "mithrilRedraw", "promise", "resolve", "Store", "makeTypeDefs", "storeOrTypeDef", "typeDefs", "config", "Store", "typeDef", "classes", "classArgs", "cls", "classArg", "name", "active", "makeTypeDef", "typeDef", "jsonld", "jsonLDHandler", "_0", "__async", "res", "json", "isJSONObject", "expanded", "jsonld", "url", "document", "m", "OctironJSON", "renderIRI", "iri", "m", "renderPrimitive", "value", "className", "presentValue", "renderArray", "list", "url", "selector", "children", "index", "maybeRenderDetails", "terminalTypes", "renderObject", "items", "item", "term", "summary", "currentSelector", "currentURL", "isJSONObject", "renderValue", "location", "m", "jsonld", "OctironDebug", "attrs", "currentAttrs", "value", "rendered", "displayStyle", "onRender", "redraw", "__async", "o", "m", "OctironJSON", "expanded", "flattened", "flattenIRIObjects", "mithrilRedraw", "onSetValue", "e", "onSetActionValue", "onSetComponent", "onSetExpanded", "onSetFlattened", "actions", "children", "actionValueAction", "m", "OctironExplorer", "attrs", "value", "previousSelector", "selector", "presentationStyle", "onChange", "fallbackComponent", "o", "m", "OctironDebug", "onSearch", "evt", "onEnter", "onApply", "onSetDebug", "onSetComponents", "_a", "autofocus", "children", "m", "OctironForm", "vnode", "_a", "method", "enctypes", "_b", "_c", "_d", "_e", "o", "attrs", "__objRest", "children", "m", "__spreadProps", "__spreadValues", "evt", "m", "OctironSubmitButton", "attrs", "children", "m", "classes", "octiron", "_a", "_b", "typeDefs", "storeArgs", "__objRest", "store", "Store", "config", "makeTypeDefs", "rootFactory", "__spreadValues"]
}
